comment,original,translation
ch03.xml:3,Technical Infrastructure,Infrastrutura Técnica
ch03.xml:7,"Free software projects rely on technologies that support the selective capture and integration of information. The more skilled you are at using these technologies, and at persuading others to use them, the more successful your project will be. This only becomes more true as the project grows. Good information management is what prevents open source projects from collapsing under the weight of Brooks' Law<footnote><para>From his book <citetitle>The Mythical Man Month</citetitle>, 1975. See <ulink url=""http://en.wikipedia.org/wiki/The_Mythical_Man-Month""></ulink> and <ulink url=""http://en.wikipedia.org/wiki/Brooks_Law""></ulink>.</para></footnote>, which states that adding manpower to a late software project makes it later. Fred Brooks observed that the complexity of a project increases as the <emphasis>square</emphasis> of the number of participants. When only a few people are involved, everyone can easily talk to everyone else, but when hundreds of people are involved, it is no longer possible for each person to remain constantly aware of what everyone else is doing. If good free software project management is about making everyone feel like they're all working together in the same room, the obvious question is: what happens when everyone in a crowded room tries to talk at once?","Os proxectos de software libre apóianse en tecnoloxías que facilitan a captura selectiva e a integración da información. Canto máis habilidoso sexas usando estas tecnoloxías, e persuadindo a outros a empregalas, maior éxto terá o teu proxecto. Esta afirmación só empezará a ser certa según vaia crecendo o proxecto.Unha boa xestión da información é o que evita que os proxectos de software libre sexan aplastados polo peso da Lei de Brooks<footnote><para>Do seu libro<citetitle>The Mythical Man Month</citetitle>, 1975. Véxase <ulink url=""http://en.wikipedia.org/wiki/The_Mythical_Man-Month""></ulink> e <ulink url=""http://en.wikipedia.org/wiki/Brooks_Law""></ulink>.</para></footnote>, que establece que engadir man de obra a un proxecto que vai con retraso fará que se retrase aínda máis. Fred Brooks observou que a complexidade dun proxecto crece a razón do <emphasis>cadrado</emphasis> do número de participantes. Mentres só está implicado un número reducido de persoas, cada un pode fácilmente comunicarse cós demáis; pero cando están implicadas centos de persoas, non é xa.posible que cada persoa permaneza constantemente informada do que están a facer todos os demáis. Si o segrdo dunha boa xestión dun proxecto de software libre reside en conseguir que todo o mundo sinta que está a traballar cós demáis na mesma habitación, a pregunta obvia é: que pasa cando todos os que están nunha habitación abarrotada tratan de falar ao mesmo tempo?"
ch03.xml:26,"This problem is not new. In non-metaphorical crowded rooms, the solution is <firstterm>parliamentary procedure</firstterm>: formal guidelines for how to have real-time discussions in large groups, how to make sure important dissents are not lost in floods of ""me-too"" comments, how to form subcommittees, how to recognize when decisions are made, etc. An important part of parliamentary procedure is specifying how the group interacts with its information management system. Some remarks are made ""for the record"", others are not. The record itself is subject to direct manipulation, and is understood to be not a literal transcript of what occurred, but a representation of what the group is willing to <emphasis>agree</emphasis> occurred. The record is not monolithic, but takes different forms for different purposes. It comprises the minutes of individual meetings, the complete collection of all minutes of all meetings, summaries, agendas and their annotations, committee reports, reports from correspondents not present, lists of action items, etc.","Este problema non é novo. En habitacións abarrotadas.reáis, a solución consiste en adoptar o denominado<firstterm>procedimiento parlamentario</firstterm>: un conxunto de normas formáis acerca de cómo manter discusións en tempo real no seo de grandes grupos, cómo estar seguros de que ningunha.manifestación relevante se perde entre moreas de comentarios tipo ""eu tamén"", como formar subcomités, cómo estar seguros sobre cándo se ten tomado unha decisión, etc. Unha parte importante do procedemento parlamentario consiste en determinar como interactúa o grupo có seu sistema de xestión da información. Algúns comentarios son feitos coa vontade de que fiquen rexistrados nos arquivos, outros non. O propio arquivo está suxeito á manipulación directa, e é entendido non coma unha transcripción literal do que ten ocorrido, si non como a transcripción do que o grupo pretende <emphasis>acordar</emphasis> que ocorreu. Os arquivos non son monolíticos, adoptan diferentes formas para diferentes usos. Comprenden tanto as actas de cada reunión como as coleccións completas de todas as actas de todas as reunións, resúmenes, axendas e as súas anotacións, informes de comités, informes de colaboradores non presentes nas reunións, listas de temas a tratar, etc."
ch03.xml:43,"Because the Internet is not really a room, we don't have to worry about replicating those parts of parliamentary procedure that keep some people quiet while others are speaking. But when it comes to information management techniques, well-run open source projects are parliamentary procedure on steroids. Since almost all communication in open source projects happens in writing, elaborate systems have evolved for routing and labeling data appropriately; for minimizing repetitions so as to avoid spurious divergences; for storing and retrieving data; for correcting bad or obsolete information; and for associating disparate bits of information with each other as new connections are observed. Active participants in open source projects internalize many of these techniques, and will often perform complex manual tasks to ensure that information is routed correctly. But the whole endeavor ultimately depends on sophisticated software support. As much as possible, the communications media themselves should do the routing, labeling, and recording, and should make the information available to humans in the most convenient way possible. In practice, of course, humans will still need to intervene at many points in the process, and it's important that the software make such interventions convenient too. But in general, if the humans take care to label and route information accurately on its first entry into the system, then the software should be configured to make as much use of that metadata as possible.","Como Internet non é realmente unha habitación, non temos que preocuparnos de replicar as partes do procedemento parlamentario que teñen que ver con manter a unhas persoas caladas mentres outros falan. Pero cando se trata de técnicas de xestión da información,os proxectos de software libre ben xestionados poden compararse a procedementos parlamentarios con esteroides. Dado que nos proxectos de software libre prácticamente toda a comunicación se fai por escrito, os sistemas elaborados evolucionaron para facer axeitadamente o seguimento e o etiquetado dos datos; cara á minimización das repeticións para evitar diverxencias espúreas; para o correcto almacenamento e recuperación dos datos; cara a correxir a información errónea ou obsoleta; e cara a asociación entre si de bits de datos desparellados en canto se observan novas conexións. Quen participa activamente en proxectos de software libre adoptan moitas de estas técnicas, e frecuentemente son quen de executar complexas operacións manuáis cara a garantir que a información está sendo xestionada axeitadamente. Pero o traballo completo depende en grande medida da axuda de software sofisticado. Na medida do posible son precisamente as ferramentas de comunicación as que deberían asumir as máis das tarefas de direccionamiento, etiquetado, e gravación, e deberían"
ch03.xml:68,"The advice in this chapter is intensely practical, based on experiences with specific software and usage patterns. But the point is not just to teach a particular collection of techniques. It is also to demonstrate, by means of many small examples, the overall attitude that will best encourage good information management in your project. This attitude will involve a combination of technical skills and people skills. The technical skills are essential because information management software always requires configuration, plus a certain amount of ongoing maintenance and tweaking as new needs arise (for example, see the discussion of how to handle project growth in <xref linkend=""bug-filtering""/><phrase output=""printed""> later in this chapter</phrase>). The people skills are necessary because the human community also requires maintenance: it's not always immediately obvious how to use these tools to full advantage, and in some cases projects have conflicting conventions (for example, see the discussion of setting <systemitem>Reply-to</systemitem> headers on outgoing mailing list posts, in <xref linkend=""mailing-lists""/>). Everyone involved with the project will need to be encouraged, at the right times and in the right ways, to do their part to keep the project's information well organized. The more involved the contributor, the more complex and specialized the techniques she can be expected to learn.","As recomendacións recolidas neste capítulo son intensamente prácticas, baseadas en experiencias con patróns de software específico e de uso. Pero a cuestión non é aprendervos unha colección particular de técnicas. É tamén a de demostrar, perante o uso de moitos pequenos exemplos, a actitude xeral que mellor se adecuará cara a correcta xestión da información nos vosos proxectos. Esta actitude comprende un conxunto de habilidades técnicas e habilidades persoais. As habilidades técnicas son esenciais dado que o software de xestión da información require sempre seren.correctamente configurado, ademáis de unha certa cantidade de mantenemento permanente e de modificación en canto xurde unha nova necesidade (como exemplo, bótadelle unha ollada á discusión sobre como manexar o crecemento do proxecto en <xref linkend=""filtrado de erros""/><phrase output=""printed""> máis adiante neste mesmo capítulo</phrase>). As habilidades persoais son necesarias xa que a comunidade humana tamén require de mantenemento: non sempre é inmediatamente obvio o modo de empregar estas ferramentas para obter o mellor rendemento, e nalgúns casos os proxectos adoptan convencións conflictivas (como exemplo, podes ver a discusión sobre a configuración das cabeceiras das mensaxes saíntes nas listas de correo no canto ao<systemitem>Reply-to</systemitem>). Todos os que estean implicados no proxecto precisará que, nalgún momento ou outro e da maneira correcta, se lles force a facer a súa partedo traballo para manter ben organizada a información relativa ao mesmo. Canto máis implicado estea o colaborador, máis complexas e especializadas serán as técnicas que se espera que aprenda."
ch03.xml:91,"Information management has no cut-and-dried solution. There are too many variables. You may finally get everything configured just the way you want it, and have most of the community participating, but then project growth will make some of those practices unscalable. Or project growth may stabilize, and the developer and user communities settle into a comfortable relationship with the technical infrastructure, but then someone will come along and invent a whole new information management service, and pretty soon newcomers will be asking why your project doesn't use it&mdash;for example, this is happening now to a lot of free software projects that predate the invention of the wiki (see <ulink url=""http://en.wikipedia.org/wiki/Wiki""></ulink>). Many questions are matters of judgement, involving tradeoffs between the convenience of those producing information and the convenience of those consuming it, or between the time required to configure information management software and the benefit it brings to the project.","Non existen solucións á-medida para a xestión da información. Hai demasiadas variables. Podedes ter absolutamente todo configurado damaneira que queredes telo, e coa maioría da comunidade participando xa, pero entón o crecemento do proxecto fará que non sexa posible continuar escalando una desas prácticas. Ou o crecemento do proxecto pode terse estabilizado, e as comunidades de desenvolvedores e de usuarios estar mantendo unha confortable relación coa infrastrutura técnica, pero entón alguén sepresentará con una solución de xestión da información completamente nova, e moi cedo os recén incorporados ao proxecto comezarán a preguntar porqué non se está a empregala&mdash; por exemplo, isto está a ocorrer actualmente con unha chea de proxectos de software libre anteriores á invención das wikis (véxase <ulink url=""http://en.wikipedia.org/wiki/Wiki""></ulink>). Moitas decisións dependerán de matices, xa que se resolverán perante compromisos entre os intereses de quen produce a información e os de quen a consume, ou do tempo requerido para configurar o software de xestión da información fronte aos beneficios que este poida aportar ao proxecto."
ch03.xml:108,"Beware of the temptation to over-automate, that is, to automate things that really require human attention. Technical infrastructure is important, but what makes a free software project work is care&mdash;and intelligent expression of that care&mdash;by the humans involved. The technical infrastructure is mainly about giving humans convenient ways to do that.","Protexédevos contra a tentación de hiper-automatizar, e edceir, de automatizar procesos que en realidade requiren da atención humana.  infrastrutura técnica é importante, pero o que fai que un proxecto de software libre funcione é o coidado&mdash;e a expresión intelixente dese coidado&mdash; por parte dos humanos involucrados. A infrastrutura técnca ten que ver principalmente con facilitar aos humanos formas convenientes de facelo."
ch03.xml:120,What a Project Needs,Que É o que un Proxecto Precisa
ch03.xml:122,"Most open source projects offer at least a minimum, standard set of tools for managing information:",Os máis dos proxectos de software de código aberto ofrecen cando menos un conxunto mínimo es estándar de ferramentas para a xestión da información:
ch03.xml:127,Web site,Sitio Web
ch03.xml:129,"Primarily a centralized, one-way conduit of information from the project out to the public. The web site may also serve as an administrative interface for other project tools.",É ante todo un conducto centralizado e unidireccional de transmisión de información dende o proxecto cara ao público. O sitio web pode tamén funcionar como interfaz administrativa para outras ferramentas do proxecto.
ch03.xml:136,Mailing lists,Listas de correo
ch03.xml:138,"Usually the most active communications forum in the project, and the ""medium of record.""","Xeralmente constitúen os foros de comunicación máis activos do proxecto, ademáis do ""medio de arquivado"""
ch03.xml:143,Version control,Control de versións
ch03.xml:145,"Enables developers to manage code changes conveniently, including reverting and ""change porting"". Enables everyone to watch what's happening to the code.","Permite aos desenvolvedores xestionar convenientemente os cambios no código, incluindo a reversión e o traslado de cambios (""change porting""). Permite así mesmo que todo o mundo coñeza que é o que se está a facer có código."
ch03.xml:151,Bug tracking,"Seguimento de erros (""Bug Tracking"")"
ch03.xml:153,"Enables developers to keep track of what they're working on, coordinate with each other, and plan releases. Enables everyone to query the status of bugs and record information (e.g., reproduction recipes) about particular bugs. Can be used for tracking not only bugs, but also tasks, releases, new features, etc.","Permite aos desenvolvedores manter o control sobre qué é no que están a traballar, coordinarse cós demáis e planificar as liberacións de novas versións. Permite que todos os colaboradores poidan facer consultas acerca do estado en que se atopa a resolución de erros e gravar información (p.e.: procedimentos de reproducción) sobre erros concretos. Pode ser usado non só para facer seguimento dos erros, se non tamén de tarefas, versións, novas funcionalidades, etc"
ch03.xml:173,Real-time chat,Chat en tempo real (IRC)
ch03.xml:175,"A place for quick, lightweight discussions and question/answer exchanges. Not always archived completely.",É o lugar onde se celebran discusións rápidas e lixeiras e se producen intercambios de preguntas/respostas. Non sempre se arquivan completamente.
ch03.xml:183,"Each tool in this set addresses a distinct need, but their functions are also interrelated, and the tools must be made to work together. Below we will examine how they can do so, and more importantly, how to get people to use them. The web site is not discussed until the end, since it acts more as glue for the other components than as a tool unto itself.","Cada ferramenta das descritas aborda unha necesidade concreta, pero as súas funcións están interrelacionadas, e deben estar configuradas dexeito que poidan traballar conxuntamente. Máis adiante examinaremos cómo facer iso e, máis importante, cómo conseguir que a xente as empregue. O sitio web non se trata ata o final, dado que actúa máis como aglomerante dos demáis compoñentes que como unha ferramenta en sí mesma."
ch03.xml:190,"You may be able to avoid a lot of the headache of choosing and configuring these tools by using a <firstterm>canned hosting</firstterm> site: a server that offers prepackaged, templatized web areas with all the accompanying tools needed to run a free software project. See <xref linkend=""canned-hosting""/><phrase output=""printed""> later in this chapter</phrase> for a discussion of the advantages and disadvantages of canned hosting.","Podedes evitarvos un bó feixe das dóres de cabeza derivadas da selección e configuración destas ferramentas empregando un sitio web do tipo<firstterm>canned hosting (aloxamento enlatado)</firstterm>: un servidor que ofrece areas web preempaquetadas e regularizadas que conteñen todas as ferramentas necesarias para manexar un proxecto de software libre. Podedes consultar o apartado <xref linkend=""canned-hosting (aloxamento enlatado)""/><phrase output=""printed""> máis adiante neste capítulo</phrase>, no que se discute sobre as ventaxas e desventaxas deste tipo de sitios web."
ch03.xml:204,Mailing Lists,Listas de Correo
ch03.xml:206,"Mailing lists are the bread and butter of project communications. If a user is exposed to any forum besides the web pages, it is most likely to be one of the project's mailing lists. But before they experience the mailing list itself, they will experience the mailing list interface&mdash;that is, the mechanism by which they join (""subscribe to"") the list. This brings us to Rule #1 of mailing lists:","As listas de correo son o pan e o sal das comunicacións nun proxecto. Si un usuario está exposto a un foro máis aló das páxinas web, o máis probable é que se trate dunha das listas de correo do proxecto. Pero antes de chegar a usar as listas en sí mesmas, primeiro terán que experimentar o uso das súas interfaces&mdash; é decir, o mecanismo polo cal se suscriben (""suscribe to"") á lista en cuestión. Isto nos leva á Regra nº1 das listas de correo:"
ch03.xml:215,Don't try to manage mailing lists by hand&mdash;get list management software.,Non tratedes de xestionar as listas de correo manualmente&mdash;empregade software de xestón de listas
ch03.xml:219,"It will be tempting to put this off. Setting up mailing list management software might seem like overkill at first. Managing small, low-traffic lists by hand will seem seductively easy: you just set up a subscription address that forwards to you, and when someone mails it, you add (or remove) their email address in some text file that holds all the addresses on the list. What could be simpler?","Deixar esta regra de lado pode resultar tentador. Configurar o software de xestión de listas pode parecer matar moscas a canonazos. Xestionar listas pequenas, con pouco tráfico de mensaxes, a man pode resultar seductoramente sinxelo: simplesmente creas unha dirección de suscripción redireccionada a tí, e cando alguén manda unha mensaxe a ela, tí engades (ou borras) a súa dirección de email dun arquivo de texto que contén todas as direccións da lista. Podería ser máis sinxelo?"
ch03.xml:227,"The trick is that good mailing list management&mdash;which is what people have come to expect&mdash;is not simple at all. It's not just about subscribing and unsubscribing users when they request. It's also about moderating to prevent spam, offering the mailing list in digest versus message-by-message form, providing standard list and project information by means of auto-responders, and various other things. A human being monitoring a subscription address can supply only a bare minimum of functionality, and even then not as reliably and promptly as software could.","O truco está en que unha boa xestión da lista de correo&mdash;que é o que a xente espera&mdash;non é sinxela en absoluto. No se trata tan só de suscrbir ou dar de baixa a os usuarios cando o pidan. ten tamén que ver con moderala, prevenir o spam, ofertar a lista en formato ""digest"" ademáis de no de mensaxes completas, fornecer información estándar sobre a lista e o proxecto mediante mensaxes de resposta automática, e moitas outras cousas. Un ser humano que faga seguimento da lista de altas e baixas estará aportando tan só unha mínima parte das funcionalidades requeridas; e incluso entón, non en forma tan segura e áxil como o faría o software."
ch03.xml:237,Modern list management software usually offers at least the following features:,O software de xestión de listas actual ofrece cando menos as seguintes utlidades:
ch03.xml:242,Both email- and web-based subscription,Suscripción tanto por email coma a través dunha páxina web
ch03.xml:244,"When a user subscribes to a list, she should <emphasis>promptly</emphasis> get an automated welcome message in reply, telling her what she has subscribed to, how to interact further with the mailing list software, and (most importantly) how to unsubscribe. This automatic reply can be customized to contain project-specific information, of course, such as the project's web site, FAQ location, etc.","Cando un usuario se suscribe a unha lista debería recibir <emphasis>inmediatamente</emphasis> unha mensaxe automática de benvida, decíndolle a qué se ten suscrto, como interactuar en adiante có software de xestión da lista e (moi importante) cómo darse de baixa. Esta resposta automática pode ser personalizada para que conteña información especifica do proxecto, dende logo, tal como a dirección da súa páxina web,a localización das FAQ (Frequently Asked Questions = Preguntas Respondidas Frecuentemente), etc"
ch03.xml:255,Subscription in either digest mode or message-by-message mode,"Suscripción en modo ""digest"" (só resumos das mensaxes) ou en modo de mensaxes completas"
ch03.xml:258,"In digest mode, the subscriber receives one email per day, containing all the list activity for that day. For people who are following a list loosely, without participating, digest mode is often preferable, because it allows them to scan all the subjects at once and avoid the distraction of emails coming in at random times.","En modo digest, o suscriptor recibe só.unha mensaxe por día contendo a totalidade da actividade da lista nese día. Para xente que está a seguir unha lista de xeito desligado, sen participar realmente na súa actividade, o modo digest adoita ser o máis axeitado xa que les permite explorar a totalidade das materias tratadas dunha vez e evitar a distracción que supón que as mensaxes estean entrando de maneira aleatoria."
ch03.xml:267,Moderation features,Utilidades de moderación
ch03.xml:269,"To ""moderate"" is to check posts to make sure they are a)&nbsp;not&nbsp;spam, and b)&nbsp;on&nbsp;topic, before they go out to the entire list. Moderation necessarily involves humans, but software can do a lot to make it easier. There is more said about moderation later.","""Moderar"" consiste en controlar que as mensaxes entrantes:a)&nbsp;non son&nópico da bsp;spam, e b)&nbsp;se corresponden có&nbsp;tópico da lista, previamente á súa distribución aos restantes usuarios da mesma. O feito de moderar as listas é unha tarefa típicamente humana, pero o software pode contribuir enormemente a facela máis sinxela. Diremos máis sobre a moderación máis adiante."
ch03.xml:278,Administrative interface,Interfaz adinistrativa
ch03.xml:280,"Among other things, this enables an administrator to go in and remove obsolete addresses easily. This can become urgent when a recipient's address starts sending automatic ""I am no longer at this address"" replies back to the list in response to every list post. (Some mailing list software can even detect this by itself and unsubscribe the person automatically.)","Entre outras cousas, permite ao administrador dar de baixa direccións obsoletas de maneira sinxela. Isto pode ser urxente si a dirección dun usuario comenza a emitir mensaxes automáticas do tipo ""Non estou xa nesta dirección"" en resposta a cada mensaxe enviada á lista. Algúns softwares de listas de correos poden incluso detectar estas situacións por sí mesmos e dar de baixa automáticamente á persoa en cuestión."
ch03.xml:290,Header manipulation,Manipulación de cabeceiras
ch03.xml:292,Many people have sophisticated filtering and replying rules set up in their mail readers. Mailing list software can add and manipulate certain standard headers for these people to take advantage of (more details below).,Moita xente ten implantadas no seu software de correo electrónico regras de filtrado e de resposta realmente sofisticadas. O software de xestión de listas de correo pode engadir e manipular as cabeceiras estándar para que esta xente se beneficie delas (algúns detalles máis adiante).
ch03.xml:299,<term>Archiving</term>,<term>Arquivado</term>
ch03.xml:301,"All posts to the managed lists are stored and made available on the web; alternatively, some mailing list software offers special interfaces for plugging in an external archiving tool such as MHonArc (<ulink url=""http://www.mhonarc.org/""></ulink>). As <xref linkend=""using-archives""/><phrase output=""printed""> in <xref linkend=""communications""/></phrase> discusses, archiving is crucial.","Todas as mensaxes enviadas a listas xestionadas son almacenadas e postas ao dispor dos interesados na web; alternativamente, algúns softwares de listas de correo ofrecen interfaces especiais para enlazar ferramentas externas de arquivado tales como MHonArc (<ulink url=""http://www.mhonarc.org/""></ulink>). Como se comenta en <xref linkend=""usando os arquivos""/><phrase output=""printed""> en <xref linkend=""comunicacións""/></phrase> , o arquivado é unha tarefa crucial."
ch03.xml:315,"The point of all this is merely to emphasize that mailing list management is a complex problem that has been given a lot of thought, and mostly been solved. You certainly don't need to become an expert in it. But you should be aware that there's always room to learn more, and that list management will occupy your attention from time to time in the course of running a free software project. Below we'll examine a few of the most common mailing list configuration issues.","A intencón de todos estes comentarios é facer énfase en que a xestón das listas de correo é un problema complexo sobre o que se ten pensado moito, e en grande medida solucionado. Certamente vos non precisades convertirvos en expertos na materia. Pero deberíades saber que sempre hai máis sobre o que aprender, e que a xestión das listas vai ocupar a vosa atención de cando en vez ao longo da vida dun proxecto de software libre. Máis adiante examinaremos unhas poucas das cusetións máis frecuentes relativas á configuración das listas de correo."
ch03.xml:326,Spam Prevention,Prevención do spam
ch03.xml:328,"Between when this sentence is written and when it is published, the Internet-wide spam problem will probably double in severity&mdash;or at least it will feel that way. There was a time, not so long ago, when one could run a mailing list without taking any spam-prevention measures at all. The occasional stray post would still show up, but infrequently enough to be only a low-level annoyance. That era is gone forever. Today, a mailing list that takes no spam prevention measures will quickly be submerged in junk emails, to the point of unusability. Spam prevention is mandatory.","Entre o momento en que esta frase foi escrita e aquel en que foi publicada, seguramente o problema do spam ten duplicado a súa severidade&mdash;ou cando menos se percibirá dise xeito. Houbo un tempo, non hai tanto, cando un podía por en marcha unha lista de correo sin ter que tomar ningunha medida anti-spam. A mensaxe perniciosa ocasional podía certamente aparecer, pero de xeito tan pouco frecuente que se consideraba un inconvinte de baixo nivel. Ese tempo foise para sempre. Hoxe en día, unha lista de correo que non adopta ningunha precaución anti-spam verase rápidamente asolagada por correos basura, ata o punto de resultares inutilizable. A prevención anti-spam é polo tanto obligatoria."
ch03.xml:339,"We divide spam prevention into two categories: preventing spam posts from appearing on your mailing lists, and preventing your mailing list from being a source of new email addresses for spammers' harvesters. The former is more important, so we examine it first.","A prevención anti-spam pode ser dividda en dúas categorías: a que prevén que entren mensaxes spam na túa lista, e aquela que trata de evitar que a lista se convirta nunha fonte de direccións de correo electrónico para os spammers que as colleitan. A primeira é a máis importante, así que a analizaremos en primeiro lugar."
ch03.xml:346,Filtering posts,Filtrado das mensaxes
ch03.xml:348,"There are three basic techniques for preventing spam posts, and most mailing list software offers all three. They are best used in tandem:","Hai tres técnicas básicas para prevenir a entrada de mensaxes basura, e os máis dos software de listas fornecen as tres. Trabalan mellor cando se usan en tandem:"
ch03.xml:354,Only auto-allow postings from list subscribers.,Somentes permtir automáticamente aquelas mensaxes enviadas á lista por suscriptores.
ch03.xml:357,"This is effective as far as it goes, and also involves very little administrative overhead, since it's usually just a matter of changing a setting in the mailing list software's configuration. But note that posts which aren't automatically approved must not be simply discarded. Instead, they should be passed along for moderation, for two reasons. First, you want to allow non-subscribers to post. A person with a question or suggestion should not need to subscribe to a mailing list just to make a single post there. Second, even subscribers may sometimes post from an address other than the one by which they're subscribed. Email addresses are not a reliable method of identifying people, and shouldn't be treated as such.","Esta é unha medida efectiva cando está activa, e implica moi pouco traballo adinistrativo, xa que normalmente supón cambiar tan só unha opción na configuración do software de xestión da lista. Pero tende en conta que as mensaxes que non son automáticamente aprovadas non deben ser simplemente descartadas. Pola contra, deben pasar a ser moderadas por dúas razóns. A primeira é que ides querer que os non suscriptores poidan contribuir. Unha persoa que quere facer un comentario ou unha suxestión non debería ter que suscribirse tan śo para enviar unha única mensaxe. En segundo lugar, incluso os suscriptores poden, en ocasións, enviar mensaxes dende direccións distintas a aquela coa que se deron de alta na lista. As direccións de correo electrónico no son un método fiable de identificación das persoas, e non deberían ser tratadas como tales."
ch03.xml:373,Filter posts through spam-filtering software.,Filtrado de mensaxes a través de software de control de spam.
ch03.xml:376,"If the mailing list software makes it possible (most do), you can have posts filtered by spam-filtering software. Automatic spam-filtering is not perfect, and never will be, since there is a never-ending arms race between spammers and filter writers. However, it can greatly reduce the amount of spam that gets through to the moderation queue, and since the longer that queue is the more time humans must spend examining it, any amount of automated filtering is beneficial.","Si o software da lista de correo o permite (os máis deles o fan), podedes facer que as mensaxes sexan controladas por unha aplicación de filtrado de spam. O filtrado automático de spam non é perfecto, e nunca o será, xa que hai unha carreira inacabable entre os spammers e os escritores de filtros. Nembargantes, pode reducir sensiblemente a cantidade de spam que atravesa a cola de moderación, e dado que canto máis longa é a cola máis tempo de dedicación require dos humanos, calquera cantidade de filtrado automático resulta beneficiosa."
ch03.xml:386,"There is not space here for detailed instructions on setting up spam filters. You will have to consult your mailing list software's documentation for that (see <xref linkend=""mailing-list-software""/><phrase output=""printed""> later in this chapter</phrase>). List software often comes with some built-in spam prevention features, but you may want to add some third-party filters. I've had good experiences with these two: SpamAssassin (<ulink url=""http://spamassassin.apache.org/""></ulink>) and SpamProbe (<ulink url=""http://spamprobe.sourceforge.net/""></ulink>). This is not a comment on the many other open source spam filters out there, some of which are apparently also quite good. I just happen to have used those two myself and been satisfied with them.","Non temos espacio dabondo neste libro para transmitirvos instruccións detalladas sobre cómo configurar os filtros anti-spam. Teredes que consultar as instruccións do software da vosa lista para élo (ver <xref linkend=""software de listas de correo""/><phrase output=""printed""> máis adiante neste capítulo</phrase>). O software de listas de correo inclúe frecuentemente algunha utilidade preconfigurada de prevención anti-spam, pero poida que vos querades engadir algúns filtros de terceiros. Persoalmente teño boas experiencias con estes dous: SpamAssassin (<ulink url=""http://spamassassin.apache.org/""></ulink>) e SpamProbe (<ulink url=""http://spamprobe.sourceforge.net/""></ulink>). Isto non supón ningunha valoración de outros filtros anti-spam libres, algúns dos cales son aparentemente bastante bós. É só que eu usei os dous mencionados e quedei moi satisfeito con eles."
ch03.xml:405,Moderation.,Moderación.
ch03.xml:406,"For mails that aren't automatically allowed by virtue of being from a list subscriber, and which make it through the spam filtering software, if any, the last stage is <firstterm>moderation</firstterm>: the mail is routed to a special address, where a human examines it and confirms or rejects it.","Para aquelas mensaxes que non son automáticamente autorizadas por proceder dun suscriptor da lista, e que pasen ao través do software de filtrado de spam, si é o caso, o último paso é o da <firstterm>moderación</firstterm>: a mensaxe e enviada a unha dirección especial, na que un ahumano a examina e decide si é aprovada ou rexeitada."
ch03.xml:413,"Confirming a post takes one of two forms: you can accept the post just this once, or you can tell the list software to allow this and all future posts from the same sender. You almost always want to do the latter, in order to reduce the future moderation burden. Details on how to confirm vary from system to system, but it's usually a matter of replying to a special address with the command ""accept"" (meaning accept just this one post) or ""allow"" (allow this and future posts).","A aprovación dunha mensaxe pode facerse de dúas maneiras: se pode acetar a mensaxe só por esta vez, ou podes decirlle á lista que acepte ésta e calquera outra mensaxe que no futuro proceda do mesmo remitente. As máis das veces é ésto último o que se fai, xa que así se reduce a carga do traballo de moderación. Os detalles sobre cóm se fai varían de sistema a sistema, pero xeralmente consiste en responder a unha determinada dirección de correo coa mensaxe ""aceptar"" (o que signifca que se acepta tan só esta mensaxe) ou ""permitir"" (aprovando ésta e outras mensaxes futuras)"
ch03.xml:423,"Rejecting is usually done by simply ignoring the moderation mail. If the list software never receives confirmation that something is a valid post, then it won't pass that post on to the list, so simply dropping the moderation mail achieves the desired effect. Sometimes you also have the option of responding with a ""reject"" or ""deny"" command, to automatically disapprove future mails from the same sender without even running them through moderation. There is rarely any point doing this, since moderation is mostly about spam prevention, and spammers tend not to send from the same address twice anyway.","O rexeitamento faise xeralmente sin máis que ignorar a mensaxe de moderación. Si o software da lista non da recibido a confirmación de que algo é unha mensaxe válida, non a pasará á lista, así que o efecto desexado se produce si simplesmente non se da curso á mensaxe de moderación. Ás veces tamén tés a opción de responder cós comandos ""rexeitar"" ou ""denegar"" para que ningunha mensaxe do meso remitente sexa aceptada no futuro sin necesidade de sometelas a moderación. Xeralmente non ten moito sentido facer isto, xa que a moderación tenta controlar  spam, e os spammers moi raramente empregan dúas veces a mesma dirección."
ch03.xml:437,"Be sure to use moderation <emphasis>only</emphasis> for filtering out spams and clearly off-topic messages, such as when someone accidentally posts to the wrong mailing list. The moderation system will usually give you a way to respond directly to the sender, but don't use that method to answer questions that really belong on the mailing list itself, even if you know the answer off the top of your head. To do so would deprive the project's community of an accurate picture of what sorts of questions people are asking, and deprive them of a chance to answer questions themselves and/or see answers from others. Mailing list moderation is strictly about keeping the list free of junk and off-topic emails, nothing more.","Tende coidado de empregar a moderación <emphasis>tan só</emphasis> para filtrar o spam e as mensaxes craramente fóra de tópico, como cando alguén manda accidentalmente un correo á lista equivocada. o sistema de moderación adoita permitir a rsposta directa ao remitente, pero non se debe usar este método para dar resposta a preguntas que en realidade entren no ámbito de actividade da propia lista, aínda que teñades absolutamente crara a resposta. Facer iso privaría á comunidade do coñecemento exacto acerca de qué clase de preguntas plantexa a xente, e lles impediría respostar por eles mesmos ou ver as respostas que outros poidan enviar. A moderación das  listas de correo ten que ver exclusivamente con mantelas libres de correo basura e mensaxes fóra de tópico, nada máis."
ch03.xml:453,Address hiding in archives,Ocultamento de direccións nos arquivos
ch03.xml:455,"To prevent your mailing lists from being a source of addresses for spammers, a common technique is for the archives to obscure people's email addresses, for example by replacing","Para evitar que as túas listas de correo se convirtan nunha fonte de suministro de direccións para os spammers, unha técnica habitual é a de que os arquivos oculten as direccións da xente, por exemplo reemplazando"
ch03.xml:457,<blockquote> <para><literal>jrandom@somedomain.com</literal></para> </blockquote> <para>with</para> <blockquote> <para><literal>jrandom_AT_somedomain.com</literal></para> </blockquote> <para>or</para> <blockquote> <para><literal>jrandomNOSPAM@somedomain.com</literal></para> </blockquote>,<blockquote> <para><literal>jrandom@somedomain.com</literal></para> </blockquote> <para>por</para> <blockquote> <para><literal>jrandom_AT_somedomain.com</literal></para> </blockquote> <para>ou</para> <blockquote> <para><literal>jrandomNOSPAM@somedomain.com</literal></para> </blockquote>
ch03.xml:475,"or some similarly obvious (to a human) encoding. Since spam address harvesters often work by crawling through web pages&mdash;including your mailing list's online archives&mdash;and looking for sequences containing ""@"", encoding the addresses is a way of making people's email addresses invisible or useless to spammers. This does nothing to prevent spam from being sent to the mailing list itself, of course, but it does avoid increasing the amount of spam sent directly to list users' personal addresses.","ou algunha maneira semellantemente obvia (para os humanos) de codificalas. Dado que os recolectores de direccións para spam funcionan frecuentemente olisqueando nas páxinas web&mdash;incluindo os arquivos web da túa lista de correo&mdash;e buscando secuencias nas que conteñan ""@"", codificar as direccións é a maneira de facelas inútiles ou invisibles para os spammers. Por suposto que esto non evita que o spam sexa enviado directamente á propia lista, pero sí que minimiza a cantidade de basura que chega ás direccións persoáis dos membros da lista."
ch03.xml:484,"Address hiding can be controversial. Some people like it a lot, and will be surprised if your archives don't do it automatically. Other people think it's too much of an inconvenience (because humans also have to translate the addresses back before using them). Sometimes people assert that it's ineffective, because a harvester could in theory compensate for any consistent encoding pattern. However, note that there is empirical evidence that address hiding <emphasis>is</emphasis> effective, see <ulink url=""http://www.cdt.org/speech/spam/030319spamreport.shtml""></ulink>.","A ocultacón de direcións pode ser discutida. Gústalle moito a algunha xente , que se sorprenderá se os teus arquivos non o fan de maneira automática. Outra xente, por contra, pensará que é unha incomodidade (xa ques as persoas terán tamén que traducir as direccións antes de poder usalas). e hai xente que afirma que é unha práctica inútil xa que un colleitador podería, en teoría, compensar calquera patrón de codificación. En calquera caso, hai evidencia empírica dabondo de que o ocultamento de direccións <emphasis>é</emphasis> efectivo, mira <ulink url=""http://www.cdt.org/speech/spam/030319spamreport.shtml""></ulink>."
ch03.xml:493,"Ideally, the list management software would leave the choice up to each individual subscriber, either through a special yes/no header or a setting in that subscriber's list account preferences. However, I don't know of any software which offers per-subscriber or per-post choice in the matter, so for now the list manager must make a decision for everyone (assuming the archiver offers the feature at all, which is not always the case). I lean very mildly toward turning address hiding on. Some people are very careful to avoid posting their email addresses on web pages or anywhere else a spam harvester might see it, and they would be disappointed to have all that care thrown away by a mailing list archive; meanwhile, the inconvenience address hiding imposes on archive users is very slight, since it's trivial to transform an obscured address back to a valid one if you need to reach the person. But keep in mind that, in the end, it's still an arms race: by the time you read this, harvesters might well have evolved to the point where they can recognize most common forms of hiding, and we'll have to think of something else.","Idealmente, o software de xestión da lista debería deixar a elección en mans de cada suscriptor, ben mediante unha cabeceira especial tipo ""Sí/No"" ou cunha opción de configuración nas preferencias da conta da lista de ese suscriptor en particular. Nembargantes, non coñezo ningún software que ofreza esa opción para cada suscriptor ou para cada mensaxe, así que polo de agora será o xestor da lista quen teña que tomar a decisión por todos (dando por sentado que o arquivo ofrece esa utilidade, o que non sempre é así) Eu me inclino lixeiramente hacia que o ocultamente de direccións estea activado. Algunhas persoas poñen moito coidado en non publicar as súas direccóns en páxinas web ou en calqueira outro sitio donde un colleitador de spam poida localizalas, e se sentirían moi incómodos si ese coidado é tirado á basura por un arquivo de listas de correo; mentres tanto, o inconvinte que supón o ocultamento de dirección para as persoas é moi pouco importante, xa que a transformación de unha dirección ocultada nunha utilizable é trivial no caso de que precises acceder á persoa en cuestión. Pero non esquezas que, ao final, non deixa de ser unha carreira armamentística: para cando leas isto, os colleitadores poden perfectamente ter evolucionado ata o punto de seren quen de recoñecer as formas mási habituais de ocultamento, e teremos que empezar a pensar noutra solución."
ch03.xml:517,Identification and Header Management,Identificación e Xestión de Cabeceiras
ch03.xml:519,"List subscribers often want to put mails from the list into a project-specific folder, separate from their other mail. Their mail reading software can do this automatically by examining the mail's <firstterm>headers</firstterm>. The headers are the fields at the top of the mail that indicate the sender, recipient, subject, date, and various other things about the message. Certain headers are well known and effectively mandatory:","Frecuentemente os suscriptores das listas querrán arquivar as mensaxes nunha carpeta específica para o proxecto, distinta das de outras mensaxes de correo. O seu software de lectura de correo pode facer esto automáticamente sin máis que examinar as <firstterm>cabeceiras</firstterm> das mensaxes. As cabeceiras son os campos situados ao inicio das mensaxes que indican quen é o remitente, o destinatario,  cal é o asunto, a data e outra información variada acerca da mensaxe. Algunhas cabeceiras son ben coñecidas é certamente obligadas:"
ch03.xml:527,"From: ...
To: ...
Subject: ...
Date: ...","De: ...
Para: ...
Asunto: ...
Data: ..."
ch03.xml:529,"Others are optional, though still quite standard. For example, emails are not strictly required to have the","Outras son opcionáis, aínda que bastante estándar. Por exemplo, os emails non teñen porqué levar a caBeceira"
ch03.xml:532,Reply-to: sender@email.address.here,"Responder-a: remitente@dirección de correo, "
ch03.xml:534,"header, but most do, because it gives recipients a foolproof way to reach the author (it is especially useful when the author had to send from an address other than the one to which replies should be directed).","pero as máis delas a levan, xa que lle oferce ao destinatario un camiño seguro para acceder ao autor da mensaxe (o que é especialmente útil cando o autor tivo que enviar a mensaxe dende unha dirección distinta a aquela a que desexa que se lle remitan as respostas)."
ch03.xml:539,"Some mail reading software offers an easy-to-use interface for filing mails based on patterns in the Subject header. This leads people to request that the mailing list add an automatic prefix to all Subjects, so they can set their readers to look for that prefix and automatically file the mails in the right folder. The idea is that the original author would write:","Algún software de lectura de correo ofrece unha interfaz de uso sinxelo para filtrar mensaxes basándose en patróns da cabeceira ""asunto"". Isto leva a que a xente pida que a lista engada un prefixo automático a todos os asuntos, de xeito que se poida configurar o programa para que recoñeza ese prefixo e arquive automáticamente na carpeta correcta as mensaxes que o levan. A idea é que o autor da mensaxe escribiría:"
ch03.xml:546,Subject: Making the 2.5 release.,Asunto: Preparando a liberación 2.5.
ch03.xml:548,but the mail would show up on the list looking like this:,pero a mensaxe se vería na lista deste xeito:
ch03.xml:550,Subject: [discuss@lists.example.org] Making the 2.5 release.,Asunto: [discusions@listas.examplo.org] Preparando a liberación 2.5.
ch03.xml:552,"Although most list management software offers the option to do this, I strongly recommend against turning the option on. The problem it solves can easily be solved in much less obtrusive ways, and the cost of eating space in the Subject field is far too high. Experienced mailing list users typically scan the Subjects of the day's incoming list mail to decide what to read and/or respond to. Prepending the list's name to the Subject can push the right side of the Subject off the screen, rendering it invisible. This obscures information that people depend on to decide what mails to open, thus reducing the overall functionality of the mailing list for everyone.","Aínda que a maioría dos programas de xestións de listas ofrecen esta opción, persoalmente recomendo fortemente non activala. O problema que resolve pode ser sinxelamente obviado por métodos menos intrusivos, e o coste de reducir o espazo da cabeceira asunto é considerablemente superior. Os usuarios experimentados de listas de correo adoitan explorar os asuntos da lista de mensaxes entrantes do día antes de decidir cal leer ou a cal respostar. facendo que o nome da lista anteceda ao asunto empuxa o contido deste hacia o lado dereito da pantalla, poidendo facer que non sexa visible. Isto oculta información da que a xente depende para decidir qué mensaxes abrir, reducindo así a utilidade xeneral da lista para todo o mundo."
ch03.xml:564,"Instead of munging the Subject header, teach your users to take advantage of the other standard headers, starting with the To header, which should say the mailing list's name:","En lugar de transformar a cabeceira Asunto, aprende aos teus usuarios a tirar partido de outras cabeceiras estándar, empezando pola cabeceira Para, que debería conter o nome da lista:"
ch03.xml:568,To: &lt;discuss@lists.example.org&gt;,Para: &lt;discusion@listas.examplo.org&gt;
ch03.xml:570,Any mail reader that can filter on Subject should be able to filter on To just as easily.,Calqueira lector de correo que popida filtrar o Asunto debería tamén poder filtrar o Para igoal de sinxelamente.
ch03.xml:573,"There are a few other optional-but-standard headers expected for mailing lists. Filtering on these is even more reliable than using the ""To"" or ""Cc"" headers; since these headers are added to each post by the mailing list management software itself, some users may be counting on their presence:","Hai unhas poucas cabeceiras máis de listas de correo que son opcionáis pero estándar. Filtralas é incluso máis preciso que facelo sobre as ""Para"" ou ""CC""; dado que estas cabeceiras son engadidas ás mensaxes polo propio software de xestión de listas, algúns usuarios poden estar contando coa súa presencia:"
ch03.xml:579,"list-help: &lt;mailto:discuss-help@lists.example.org&gt;
list-unsubscribe: &lt;mailto:discuss-unsubscribe@lists.example.org&gt;
list-post: &lt;mailto:discuss@lists.example.org&gt;
Delivered-To: mailing list discuss@lists.example.org
Mailing-List: contact discuss-help@lists.example.org; run by ezmlm","axuda-lista: &lt;mailto:discuss-help@lists.example.org&gt;
baixa-lista: &lt;mailto:discuss-unsubscribe@lists.example.org&gt;
envio-a-lista: &lt;mailto:discuss@lists.example.org&gt;
Distribuido-a:: mailing list discuss@lists.example.org
Lista: contactar discuss-help@lists.example.org; run by ezmlm"
ch03.xml:581,"For the most part, they are self-explanatory. See <ulink url=""http://www.nisto.com/listspec/list-manager-intro.html""></ulink> for more explanation, or if you need the really detailed, formal specification, see <ulink url=""http://www.faqs.org/rfcs/rfc2369.html""></ulink>.","As máis delas, se autoexplican. Mira <ulink url=""http://www.nisto.com/listspec/list-manager-intro.html""></ulink> para máis explicacións, ou si precisas especificacións realmente detalladas e formáis, podes ver <ulink url=""http://www.faqs.org/rfcs/rfc2369.html""></ulink>."
ch03.xml:586,"Notice how these headers imply that if you have a mailing list named ""list"", then you also have administrative addresses ""list-help"" and ""list-unsubscribe"" available. In addition to these, it is normal to have ""list-subscribe"", for joining, and ""list-owner"", for reaching the list administrators. Depending on the list management software you use, these and/or various other administrative addresses may be set up; the documentation will have details. Usually a complete explanation of all these special addresses is mailed to each new user as part of an automated ""welcome mail"" on subscribing. You yourself will probably get a copy of this welcome mail. If you don't, then ask someone else for a copy, so you know what your users are seeing when they join the list. Keep the copy handy so you can answer questions about the mailing list functions, or better yet, put it on a web page somewhere. That way when people lose their own copy of the instructions and post to ask ""How do I unsubscribe from this list?"", you can just hand them the URL.","Ten en conta que estas cabeceiras implican que si tés unha  lista denominada ""lista"", tamén vas dispor de  direccións administrativas ""axuda-lista"" e ""baixa-lista"". Ademáis, é habitual ter ""suscripción-lista"", para darse de alta, e ""propietario-lista"" para contactar cós seus administradores. Xeralmente se envía automáticamente a explicación sobre a utilidade e todas estas direccións aos novos suscriptores como parte dunha mensaxe de benvida. Probablemente tí mesmo tés copia desta mensaxes de benvida. Si non é así pídelle a alguén que cha pase, para que poidas coñecer qué é o que os teus usuarios reciben cando se dan de alta na lista. Ten a copia a man de xeito qu epoidas respostar preguntas sobre o funcionamento da lista ou, incluso mellor, publicaa en algunha páxina web. Diste xeito, cando alguén perda a súa copia e che mande unha mensaxe preguntando ""Como poido darme de baixa nesta lista?, tí só terás que enviarlle a correspondente URL."
ch03.xml:603,"Some mailing list software offers an option to append unsubscription instructions to the bottom of every post. If that option is available, turn it on. It causes only a couple of extra lines per message, in a harmless location, and it can save you a lot of time, by cutting down on the number of people who mail you&mdash;or worse, mail the list!&mdash;asking how to unsubscribe.","Algúns programas de listas de correo ofrecen unha opción para engadirao pé das mensaxes as instruccións para darse de baixa. Si é así, actívala. Só produce un par de líneas de máis por mensaxe, nunha localización onde non estorban, e pode aforrarche unha boa cantidade de tempo diminuindo a cantidade de xente que che envía consultas &mdash;ou peor, que manda unha mensaxe á lista!&mdash;preguntando como darse de baixa."
ch03.xml:614,The Great Reply-to Debate,O Gran Debate sobre Responder-A (Reply-To)
ch03.xml:616,"Earlier, in <xref linkend=""avoid-private-discussions""/>, I stressed the importance of making sure discussions stay in public forums, and talked about how active measures are sometimes needed to prevent conversations from trailing off into private email threads; furthermore, this chapter is all about setting up project communications software to do as much of the work for you as possible. Therefore, if the mailing list management software offers a way to automatically cause discussions to stay on the list, you would think turning that feature on would be the obvious choice.","Antes, en <xref linkend=""evita discusións privadas""/>, encarecín a importancia de manter discusións seguras nos foros públicos, e faléi sobre como é as veces necesario adoptar medidas activas para evitares a conversión de discusións en fíos privados; máis adiante, este capítulo trata completamente sobre a configuración do software de comunicacións para que faga por tí tanto traballo como sexa posible. Polo tanto, se o software de administración ofrece unha maneira automatizda para evitar que se establezan discusións na lista, deberías pensar que activar esa opción é a decisión obvia."
ch03.xml:626,"Well, not quite. There is such a feature, but it has some pretty severe disadvantages. The question of whether or not to use it is one of the hottest debates in mailing list management&mdash;admittedly, not a controversy that's likely to make the evening news in your city, but it can flare up from time to time in free software projects. Below, I will describe the feature, give the major arguments on both sides, and make the best recommendation I can.","Ben non tanto. Existe a dita utilidad, pero presenta algunhas desavantaxes realmente importantes. a cuestión de si usala ou non constitue un dos debates máis quentes no mundo da xestión de listas&mdash;admitámolo, non unha controversia como para sair nas novas da noite na túa cidade, pero sí que pode explotar de tempo en tempo en todo proxecto de software libre. Máis adiante, describirei esta utilidade, darei os principais argumentos a favor e en contra, e darei e mellor recomendación da que son capaz."
ch03.xml:635,"The feature itself is very simple: the mailing list software can, if you wish, automatically set the Reply-to header on every post to redirect replies to the mailing list. That is, no matter what the original sender puts in the Reply-to header (or even if they don't include one at all), by the time the list subscribers see the post, the header will contain the list address:","A utilidade en sí mesma é moi simple: o software de listas de correo pode, se ti queres, configurar automáticamente a cabeceira Respostar-a (Reply-to) en tódalas mensaxes de xeito que as respostas se redirixan á propia lista. Isto é, independentemente do que o remitente poña na cabeceira Contestar-a (e incluso si non poñen nada en absoluto), cando os suscriptores vexan a mensaxe, a cabeceira conterá a dirección da lista:"
ch03.xml:642,Reply-to: discuss@lists.example.org,Respostar-a: discusións@listas.exemplo.org
ch03.xml:644,"On its face, this seems like a good thing. Because virtually all mail reading software pays attention to the Reply-to header, now when anyone responds to a post, their response will be automatically addressed to the entire list, not just to the sender of the message being responded to. Of course, the responder can still manually change where the message goes, but the important thing is that <emphasis>by default</emphasis> replies are directed to the list. It's a perfect example of using technology to encourage collaboration.","De primeiras, parece unha boa idea. Xa que prácticamente todo o software de lectura de correo ten en conta a cabeceira Respostar-a, cando alguén resposte a unha mensaxe, a súa resposta vai ser automáticamente dirixida a toda a lista, non só ao remitente da mensaxe orixinal. Por suposto, quen contesta pode cambiar manualmente o destinatario da súa mensaxe, pero o importante é que <emphasis>por defecto</emphasis> as respostas son dirixidas á lista. É un exemplo perfecto do uso da tecnoloxía para fomentar a colaboración."
ch03.xml:654,"Unfortunately, there are some disadvantages. The first is known as the <firstterm>Can't Find My Way Back Home</firstterm> problem: sometimes the original sender will put their ""real"" email address in the Reply-to field, because for one reason or another they send email from a different address than where they receive it. People who always read and send from the same location don't have this problem, and may be surprised that it even exists. But for those who have unusual email configurations, or who cannot control how the From address on their mails looks (perhaps because they send from work and do not have any influence over the IT department), using Reply-to may be the only way they have to ensure that responses reach them. When such a person posts to a mailing list that he's not subscribed to, his setting of Reply-to becomes essential information. If the list software overwrites it, he may never see the responses to his post.","Deasfortunadamente, hai algunhas desavantaxes. A primeira é coñecida como o problema de <firstterm>Non poido dar có camiño de volta</firstterm>: ás veces o remitente pon a súa dirección ""real"" de correo electrónico na cabeceira Respostar-a, porque por unha razón ou outra manda o seu correo dende unha dirección distinta de onde o recibe. A xente que sempre envía a recibe o seu correo dende a mesma drección on ten este problema, e poida que se sorprenda incluso de que exista. Pero para aqueles que teñen configuracións de coreo inusuais, ou que non poden controlar que dirección pon no De das súas mensaxes (ao mellor porque envían dende o seu traballo e non teñen influencia algunha sobre o seu departamento de TI), usar o Respostar-a pode ser a única maneira de asegurar que lles chegan as respostas. Cando alguén así publica algunha mensaxe nunha lista na que non está suscrito, a súa configuración do Respostar-a vólvese unha información esencial. Si o software da lista sobreescribe esa información, poida que nunca chegue a ver as respostas á súa mensaxe."
ch03.xml:669,"The second disadvantage has to do with expectations, and in my opinion is the most powerful argument against Reply-to munging. Most experienced mail users are accustomed to two basic methods of replying: <firstterm>reply-to-all</firstterm> and <firstterm>reply-to-author</firstterm>. All modern mail reading software has separate keys for these two actions. Users know that to reply to everyone (that is, including the list), they should choose reply-to-all, and to reply privately to the author, they should choose reply-to-author. Although you want to encourage people to reply to the list whenever possible, there are certainly circumstances where a private reply is the responder's prerogative&mdash;for example, they may want to say something confidential to the author of the original message, something that would be inappropriate on the public list.","A segunda desventaxa ten que ver coas espectativas, e na miña opinión é o argumento máis poderoso contra o uso de forzar o Respostar-a. Os usuarios de correo electrónico máis experientados están afeitos a dous étodos básicos de resposta:<firstterm>respostar-a-todos</firstterm> e <firstterm>respostar-ao-remitente</firstterm>. Todos os programas de lectura de correo electrónico modernos teñen botóns diferentes para estas dúas accións. Os usuarios saben que para respostar a todo o mundo (incluíndo a lista) deben escoller respostar-a-todos, e para respostar privadamente ao autor orixinal, deben escoller respostar-ao-remitente. Aínda que desexes fomentar que a xente resposte á lista sempre que sexa posible, hai certas circunstancias nas que a resposta privada é unha decisión de quen resposta&mdash;por exemplo, poden querer decirlle algo confidencial ao autor da mensaxe inicial, algo que resultaría inapropiado publicar na lista."
ch03.xml:684,"Now consider what happens when the list has overridden the original sender's Reply-to. The responder hits the reply-to-author key, expecting to send a private message back to the original author. Because that's the expected behavior, he may not bother to look carefully at the recipient address in the new message. He composes his private, confidential message, one which perhaps says embarrassing things about someone on the list, and hits the send key. Unexpectedly, a few minutes later his message appears <emphasis>on the mailing list!</emphasis> True, in theory he should have looked carefully at the recipient field, and should not have assumed anything about the Reply-to header. But authors almost always set Reply-to to their own personal address (or rather, their mail software sets it for them), and many longtime email users have come to expect that. In fact, when a person deliberately sets Reply-to to some other address, such as the list, he usually makes a point of mentioning this in the body of the message, so people won't be surprised at what happens when they reply.","E agora considera qué pasa cando a lista sobreescribe o Respostar-a do remitente orixinal. Quen resposta pulsa a tecla de responder-ao-remitente, esperando que a mensaxe lle sexa enviada directamente ao autor orixinal. Xa ese é o comportamento esperado, poida que non se preocupe de comprobar a dirección do destinatario na nova mensaxe. Compón a súa mensaxe privada e confidencial, que quizás conteña cousas embarazosas obre alguén da lista, e preme a tecla de enviar. de súpeto, poucos minutos máis tarde, a mensaxe aparece <emphasis>na lista!</emphasis>. Certo, en teoría él tiña que ter comprobado convenientemente que puña no campo Destinatario, e moitos usuarios expertos esperan que se faga así. De feito, cando alguén configura o Respostar-a con calquera outra dirección, como a da lista, xeralmente ten o coidado de mencionar este feito no corpo da mensaxe, de xeito que a xente non se sorprenda de que é o que pasa cando respostan."
ch03.xml:702,"Because of the possibly severe consequences of this unexpected behavior, my own preference is to configure list management software to never touch the Reply-to header. This is one instance where using technology to encourage collaboration has, it seems to me, potentially dangerous side-effects. However, there are also some powerful arguments on the other side of this debate. Whichever way you choose, you will occasionally get people posting to your list asking why you didn't choose the other way. Since this is not something you ever want as the main topic of discussion on your list, it might be good to have a canned response ready, of the sort that's more likely to stop discussion than encourage it. Make sure you do <emphasis>not</emphasis> insist that your decision, whichever it is, is obviously the only right and sensible one (even if you think that's the case). Instead, point out that this is a very old debate, there are good arguments on both sides, no choice is going to satisfy all users, and therefore you just made the best decision you could. Politely ask that the subject not be revisited unless someone has something genuinely new to say, then stay out of the thread and hope it dies a natural death.","Como resultado das consecuencias deste comportamiento inesperado, a miña preferencia pasa por configurar o software de xestión da lista de xeito que nunca toque a cabeceira Respostar-a. Esta é unha das ocasións nas que usar a tecnoloxía para fomentar a colaboración ten, paréceme, efectos colateráis potencialmente perniciosos. En calqueira caso, hai tamén algúns argumentos poderosos a favor da outra banda deste debate. Independientemente do que decidas, recibirás de tempo en tempo mensaxes de xente preguntando por qué non o escolles a outra maneira. Como seguramente non queres que esta cuestión se convirta no principal fío da lista, sería bón que tiveras preparada unha resposta pre-confeccionada, das do tipo que levan ao abandono da discusión, en lugar de fomentala. Debes estar seguro de que <emphasis>non</emphasis> insistes en que a túa decisión, sexa esta a que sexa, é a única correcta (aínda que o penses). Pola contra, explica que este é un debate moi vello, que hai boas razóns nos dous sentidos, que ningunha eección vai saisfacer a tódolos usuarios, e que por conseguinte tomaches a mellor decisión posible. Moi amablemente indica que non se debe reiniciar a discusión sobre a materia salvo que alguén teña algo realmente novo que decir, despóis mantente á marxe do fío e espera a que morra de morte natural."
ch03.xml:722,"Someone may suggest a vote to choose one way or the other. You can do that if you want, but I personally do not feel that counting heads is a satisfactory solution in this case. The penalty for someone who is surprised by the behavior is so huge (accidentally sending a private mail to a public list), and the inconvenience for everyone else is fairly slight (occasionally having to remind someone to respond to the whole list instead of just to you), that it's not clear that the majority, even though they are the majority, should be able to put the minority at such risk.","Alguén pode suxerir que se faga unha votación para decidir unha solución ou a outra. Podes facelo si queres, pero personalmente non me parece que contar cabezas sexa unha boa maneira de resolver a cuestión. O castigo para quen é sorprendido polo comportamento do software da lista (enviando por accidente unha mensaxe privada á lista) é tan grande, e os inconvintes para os demáis son tan leves (tendo que recordarle de tanto en tanto a alguén que resposte á lista en lugar de á túa dirección privada), que non está claro que a mayoría, aínda que sexa precisamente maioría, poida poñer á minoría en tal risco."
ch03.xml:732,"I have not addressed all aspects of this issue here, just the ones that seemed of overriding importance. For a full discussion, see these two canonical documents, which are the ones people always cite when they're having this debate:","Non estou a tratar aquí todos os aspectos do asunto, tan só aqueles que semelan ser da maior importancia. Para un tratamento máis completo, lé estes dous documentos canónicos, que son os que sempre se citan cando xurde este debate:"
ch03.xml:739,"<emphasis role=""bold"">Leave Reply-to alone</emphasis>, <emphasis>by Chip Rosenthal</emphasis>","<emphasis role=""bold"">Leave Reply-to alone</emphasis>, <emphasis>by Chip Rosenthal</emphasis>"
ch03.xml:744,"<emphasis role=""bold"">Set Reply-to to list</emphasis>, <emphasis>by Simon Hill</emphasis>","<emphasis role=""bold"">Set Reply-to to list</emphasis>, <emphasis>by Simon Hill</emphasis>"
ch03.xml:752,"Despite the mild preference indicated above, I do not feel there is a ""right"" answer to this question, and happily participate in many lists that <emphasis>do</emphasis> set Reply-to. The most important thing you can do is settle on one way or the other early, and try not to get entangled in debates about it after that.","A pesares da miña suave preferencia indicada antes, non creo que haxa unha única resposta ""correcta"" para esta cuestión, e de feito participo en moitas listas que escolleron <emphasis>empregar</emphasis> o Respostar-a. O mellor que podes facer é decidirte por unha ou a outra solución o máis cedo posible, e tratar de non enredarte en debates sobre o tema máis adiante."
ch03.xml:759,Two fantasies,Dúas fantasías
ch03.xml:761,"Someday, someone will get the bright idea to implement a <firstterm>reply-to-list</firstterm> key in a mail reader. It would use some of the custom list headers mentioned earlier to figure out the address of the mailing list, and then address the reply directly to the list only, leaving off any other recipient addresses, since most are probably subscribed to the list anyway. Eventually, other mail readers will pick up the feature, and this whole debate will go away. (Actually, the <ulink url=""http://www.mutt.org/"">Mutt</ulink> mail reader does offer this feature.<footnote><para>Shortly after this book appeared, <ulink url=""http://www.michaelbernstein.com/"">Michael Bernstein</ulink> wrote me to say: ""There are other email clients that implement a reply-to-list function besides Mutt. For example, Evolution has this function as a keyboard shortcut, but not a button (Ctrl+L).""</para></footnote>)","Algún día, alguén vai ter a feliz idea de implementar unha tecla <firstterm>respostar-á-lista</firstterm> no seu software de correo electrónico. Empregará algunha das cabeceiras estándar mencionadas anteriormente para deducir a dirección da lista, e entón dirixir as respostas tan só á lista, deixando de lado todas as demáis direccións dos destinatarios, xa que os máis de eles estarán, de todos modos, suscritos. Poida que outros programas de correo copien a idea, e todo este debate desapareza finalmente. (De feito, o programa <ulink url=""http://www.mutt.org/"">Mutt</ulink> ofrece xa esta característica.<footnote><para>Pouco despois de que este libro fora publicado, <ulink url=""http://www.michaelbernstein.com/"">Michael Bernstein</ulink> escribíume para decirme: ""Hai outros programas de correo que incorporan una función de respostar-á-lista ademáis de Mutt. Por exemplo, Evolution ten est afunción en forma de atallo de teclas, aínda que non cun botón (Ctrl+L).""</para></footnote>)"
ch03.xml:775,"An even better solution would be for Reply-to munging to be a per-subscriber preference. Those who want the list to set Reply-to munged (either on others' posts or on their own posts) could ask for that, and those who don't would ask for Reply-to to be left alone. However, I don't know of any list management software that offers this on a per-subscriber basis. For now, we seem to be stuck with a global setting.","Unha solución aínda mellor sería que a opción de Respostar-a estivera da parte de quen resposta. Aqueles que desexan que a lista teña o Respostar-a preconfigurado (ben nas mensaxes dos outros ou nos propios) poderían escoller esta opción, e os demáis escollerían que o Respostar-a se deixara ao seu chou. Nembargantes, non coñezo ningún programa que o faga. De momento, parece que estamos estancados na opción da solución global."
ch03.xml:781,"Since I wrote that, I've learned that there is at least one list management system that offers this feature: <ulink url=""http://siesta.unixbeard.net/"">Siesta</ulink>. See also this article about it: <ulink url=""http://www.perl.com/pub/a/2004/02/05/siesta.html""></ulink>","Dende que escribín o anterior, apredín que hai a lo menos un sistema de xestión de listas que ofrece esta posibilidade: <ulink url=""http://siesta.unixbeard.net/"">Siesta</ulink>. Tamén podes lér este artigo: <ulink url=""http://www.perl.com/pub/a/2004/02/05/siesta.html""></ulink>"
ch03.xml:793,<title>Archiving</title>,<title>Arquivado</title>
ch03.xml:795,"The technical details of setting up mailing list archiving are specific to the software that's running the list, and are beyond the scope of this book. When choosing or configuring an archiver, consider these qualities:","Os detalles técnicos acerca da configuración do arquivado de listas de correo son específicos do software que xestiona a lista, e sobrepasan o ámbito de este libro. Cando elixas ou configures un arquivador, ten en conta as seguintes cualidades:"
ch03.xml:802,Prompt updating,Actualización áxil
ch03.xml:804,"People will often want to refer to an archived post made within the last hour or two. If possible, the archiver should archive each post instantaneously, so that by the time a post appears on the mailing list, it's already present in the archives. If that option isn't available, then at least try to set the archiver to update itself every hour or so. (By default, some archivers run their update processes once per night, but in practice that's far too much lag time for an active mailing list.)","Frecuentemente a xente vai querer referirse a unha mensaxe enviada durante as últimas duas horas. Si fora posible, o arquivador debería almacenar cada mensaxe instantáneamente, de xeito que en canto aparece na lista de correo estea xa dispoñible nos arquivos da mesma. Si esa opción non está dispoñible, entón intenta cando menos configurar o arquivador para que se actualice cada hora. Por defecto, algúns arquivadores lanzan os seus procesos de actualización unha vez cada noite, pero iso supón unha demora craramente inasumible para unha lista de correo medianamente activa."
ch03.xml:816,Referential stability,Estabilidade referencial
ch03.xml:818,"Once a message is archived at a particular URL, it should remain accessible at that exact same URL forever, or as close to forever as possible. Even if the archives are rebuilt, restored from backup, or otherwise fixed, any URLs that have already been made publicly available should remain the same. Stable references make it possible for Internet search engines to index the archives, which is a major boon to users looking for answers. Stable references are also important because mailing list posts and threads are often linked to from the bug tracker (see <xref linkend=""bug-tracker""/><phrase output=""printed""> later in this chapter</phrase>) or from other project documents.","En canto que unha mensaxe é arquivada nunha URL dada, debería permanecer accesible para sempre nesa mesma dirección, ou tan ""para sempre"" como se poida. Incluso si os arquivos son reconstruídos, restaurados dende un ficheiro de respaldo (backup), ou reparado de calqueira outra maneira, as URL que foran públicamente accesibles nun momento dado deben permanecer accesibles. As referencias estables fan posible que os motores de búsqueda en Internet indexen correctamente os arquivos, o que supón unha ventaxa considerable para usuarios que buscan respostas a preguntas concretas. As estabilidade das referencias é tamén importante porque as mensaxes e fíos das listas de correo adoitan estar enlazadas ao xestor de erros (bug tracker) (véxase <xref linkend=""bug-tracker""/><phrase output=""printed""> máis adiante neste capítuo</phrase>) ou a outros documentos do proxecto."
ch03.xml:834,"Ideally, mailing list software would include a message's archive URL, or at least the message-specific portion of the URL, in a header when it distributes the message to recipients. That way people who have a copy of the message would be able to know its archive location without having to actually visit the archives, which would be helpful because any operation that involves one's web browser is automatically time-consuming. Whether any mailing list software actually offers this feature, I don't know; unfortunately, the ones I have used do not. However, it's something to look for (or, if you write mailing list software, it's a feature to consider implementing, please).","Idealmente, o software de listas de correo debería incluir a URL do arquivo de mensaxes, ou cando menos a parte especica da URL que se refire á mensaxe, nunha cabeceira cando distribúa as mensaxes aos seus destinatarios. De este xeito a xente que ten unha copia da mensaxe coñecerá a localización do seu arquivo sin ter que vistar realmente os arquivos, o que é moi útil porque calquera operación que implica o uso do navegador de Internet supón necesariamente un certo consumo de tempo. Non sei si todo o software de listas de correo ofrece esta característica; desafortunadamente, os que eu teño usado non o fan. Nembargantes, é algo sobre o que pesquisar (ou, si tí escribes software para listas de correo, é unha característica que deberías considerar implementar, por favor)"
ch03.xml:850,Backups,Copias de respaldo (Backups)
ch03.xml:852,"It should be reasonably obvious how to back up the archives, and the restoration recipe should not be too difficult. In other words, don't treat your archiver as a black box. You (or someone in your project) should know where it's storing the messages, and how to regenerate the actual archive pages from the message store if it should ever become necessary. Those archives are precious data&mdash;a project that loses them loses a good part of its collective memory.","Como facer copias de respaldo dos arquivos debería ser razoablemente obvio, e a receita de restauración non debería ser moi difícil. En outras palabras, non trates ao teu arquivador como a unha caixa negra. Tí (ou alguén o teu proxecto) deberías saber onde se almacenan as mensaxes, e como rexenerar as páxinas de arquivado desde o almacén de mensaxes no caso de que nalgún momento fora necesario. Eses arquivos conteñen datos preciosos&mdash;un proxecto que os perde, perde tamén un ha parte considerable da súa memoria colectiva."
ch03.xml:864,Thread support,Soporte aos fíos (Threads)
ch03.xml:866,"It should be possible to go from any individual message to the <firstterm>thread</firstterm> (group of related messages) that that original message is part of. Each thread should have its own URL too, separate from the URLs of the individual messages in the thread.","Debería ser posible ir dunha mensaxe dada ao correspondente <firstterm>fío</firstterm> (grupo de mensaxes relacionadas entre si) ao que pertence esa mensaxe en particular. Cada fío debería tamén ter a súa propia URL, distinta das correspondentes ás mensaxes que compoñen o fío."
ch03.xml:874,Searchability,Búsquedas
ch03.xml:876,"An archiver that doesn't support searching&mdash;on the bodies of messages, as well as on authors and subjects&mdash;is close to useless. Note that some archivers support searching by simply farming the work out to an external search engine such as <ulink url=""http://www.google.com/"">Google</ulink>. This is acceptable, but direct search support is usually more fine-tuned, because it allows the searcher to specify that the match must appear in a subject line versus the body, for example.","Un arquivador que non soporta búsquedas&mdash;sobre os corpos das mensaxes, e sobre os seus autores ou asuntos&mdash;é case que inútil. Ten en conta que algúns arquivadores soportan búsquedas simplemente derivándoas a un motor externo tal como <ulink url=""http://www.google.com/"">Google</ulink>. Isto é aceptable, pero o soporte a búsquedas directas normalmente permite un mellor afinado, xa que deixa que o buscador especifique que o resultado debe buscarse na línea de asunto e non no corpo, por exemplo."
ch03.xml:891,"The above is just a technical checklist to help you evaluate and set up an archiver. Getting people to actually <emphasis>use</emphasis> the archiver to the project's advantage is discussed in later chapters, in particular <xref linkend=""using-archives""/>.","O que antecede é simplesmente unha lista de control para axudarte a avaliar e configurar un arquivador. Conseguir que a xente faga un <emphasis>uso</emphasis> real do arquivador en beneficio do proxecto se discute en capítulos posteriores, nomeadamente en <xref linkend=""usando-arquivos""/>."
ch03.xml:901,Software,Software
ch03.xml:903,"Here are some open source tools for doing list management and archiving. If the site where you're hosting your project already has a default setup, then you may not ever have to decide on a tool at all. But if you must install one yourself, these are some possibilities. The ones I have actually used are Mailman, Ezmlm, MHonArc, and Hypermail, but that doesn't mean the others aren't good too (and of course, there are probably other tools out there that I just didn't happen to find, so don't take this as a complete list).","De seguido se comentan algunhas ferramentas de sftware libre para a xestión e o arquivado de listas de correo. Si o sitio no que tés o teu proxecto alonxado ten xa unha configuración por defecto, non vas ter que escoller ningunha ferramenta en particular. Pero si vas ter que instalar unha por tí mesmo, estas son algunhas das posibles. As que eu teño usado son Mailman, Ezmlm, MHonArc, e Hypermail, pero iso non quere decir non haxa outras igual de boas ( e seguro que existen por ahí adiante outras ferramentas que eu nin siqueira din atopado, así que non penses que esta é unha lista completa)."
ch03.xml:913,Mailing list management software:,Software de xestión de listas de correo:
ch03.xml:917,"<emphasis role=""bold"">Mailman</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.list.org/""></ulink>","<emphasis role=""bold"">Mailman</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.list.org/""></ulink>"
ch03.xml:918,"(Has built-in archiver, and hooks for plugging in external archivers.)","(Ten un arquivador incorporado, así como conexións para arquivadores externos)"
ch03.xml:922,"<emphasis role=""bold"">SmartList</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.procmail.org/""></ulink>","<emphasis role=""bold"">SmartList</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.procmail.org/""></ulink>"
ch03.xml:923,(Meant to be used with the Procmail mail processing system.),(Deseñado para ser usado có sistema de procesado de correo electrónico Procmail)
ch03.xml:926,"<emphasis role=""bold"">Ecartis</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.ecartis.org/""></ulink>","<emphasis role=""bold"">Ecartis</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.ecartis.org/""></ulink>"
ch03.xml:929,"<emphasis role=""bold"">ListProc</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://listproc.sourceforge.net/""></ulink>","<emphasis role=""bold"">ListProc</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://listproc.sourceforge.net/""></ulink>"
ch03.xml:932,"<emphasis role=""bold"">Ezmlm</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://cr.yp.to/ezmlm.html""></ulink>","<emphasis role=""bold"">Ezmlm</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://cr.yp.to/ezmlm.html""></ulink>"
ch03.xml:933,"(Designed to work with the <ulink url=""http://cr.yp.to/qmail.html"">Qmail</ulink> mail delivery system.)","(Deseñado para traballar có sistema de distribución de correo  <ulink url=""http://cr.yp.to/qmail.html"">Qmail</ulink>)"
ch03.xml:938,"<emphasis role=""bold"">Dada</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://mojo.skazat.com/""></ulink>","<emphasis role=""bold"">Dada</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://mojo.skazat.com/""></ulink>"
ch03.xml:939,"(Despite the web site's bizarre attempts to hide the fact, this is free software, released under the GNU General Public License. It also has a built-in archiver.)","(A pesares dos insistentes esforzos da súa web para ocultalo, é software libre, liberado baixo a licencia GNU. Tamén inclúe un arquivador)"
ch03.xml:945,Mailing list archiving software:,Sosftware de arquivado de listas de correo:
ch03.xml:949,"<emphasis role=""bold"">MHonArc</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.mhonarc.org/""></ulink>","<emphasis role=""bold"">MHonArc</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.mhonarc.org/""></ulink>"
ch03.xml:952,"<emphasis role=""bold"">Hypermail</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.hypermail.org/""></ulink>","<emphasis role=""bold"">Hypermail</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.hypermail.org/""></ulink>"
ch03.xml:955,"<emphasis role=""bold"">Lurker</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://sourceforge.net/projects/lurker/""></ulink>","<emphasis role=""bold"">Lurker</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://sourceforge.net/projects/lurker/""></ulink>"
ch03.xml:958,"<emphasis role=""bold"">Procmail</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.procmail.org/""></ulink>","<emphasis role=""bold"">Procmail</emphasis>&nbsp;&mdash;&nbsp;<ulink url=""http://www.procmail.org/""></ulink>"
ch03.xml:959,"(Companion software to SmartList, this is a general mail processing system that can, apparently, be configured as an archiver.)","(Software de acompañamento de Smartlistk, é un sistema procesador de correo que pode, aparentemente, ser configurado como arquivador)"
ch03.xml:972,Version Control,Control de versións
ch03.xml:974,"A <firstterm>version control system</firstterm> (or <firstterm>revision control system</firstterm>) is a combination of technologies and practices for tracking and controlling changes to a project's files, in particular to source code, documentation, and web pages. If you have never used version control before, the first thing you should do is go find someone who has, and get them to join your project. These days, everyone will expect at least your project's source code to be under version control, and probably will not take the project seriously if it doesn't use version control with at least minimal competence.","Un <firstterm>sistema de control de versións</firstterm> (ou <firstterm>sistema de control de revisións</firstterm>) é unha combinación de tecnoloxías e prácticas para facer seguimento e control dos cambios que se van producindo nos ficheiros dun proxecto, nomeadamente nos de código fonte, documentación e páxinas web. Si nunca antes usaches control de versións, o primeiro que deberías facer é buscar a alguén que sí o teña usado e fichalo para o teu proxecto. Hoxe en día, todo o mundo espera que cando menos o código fonte do teu proxecto estea subido a un sistema de control de versións, e seguramente non se tomará o proxecto en serio si non se utiliza este sistema cun mínimo de solvencia."
ch03.xml:985,"The reason version control is so universal is that it helps with virtually every aspect of running a project: inter-developer communications, release management, bug management, code stability and experimental development efforts, and attribution and authorization of changes by particular developers. The version control system provides a central coordinating force among all of these areas. The core of version control is <firstterm>change management</firstterm>: identifying each discrete change made to the project's files, annotating each change with metadata like the change's date and author, and then replaying these facts to whoever asks, in whatever way they ask. It is a communications mechanism where a change is the basic unit of information.","A razón pola que o control de versións é tan universal é que axuda a prácticamente todos e cada un dos aspectos relacionados coa xestión dun proxecto: comunicacións entre desenvolvedores, xestión de liberacóns, seguimento de erros (bug tracking), estabilidade do código e esforzos de desenvolvemento experimental, e atribución e autorización de cambios por certos desevolvedores. O sitema de control de versións ofrece un centro de mando para todas estas tarefas. O núcleo do control de versións reside na <firstterm>xestión de cambios</firstterm>: identificando cada cambio discreto realizado aos ficheiros do proxecto, anotando cada cambio con metadatos tales como a súa data e o seu autor, e repetindo estes procesos para quen quera que o solicite, sin importar como o solicite. É un mecanismo de comunicación no que o cambio é a unidade básica de información."
ch03.xml:998,"This section does not discuss all aspects of using a version control system. It's so all-encompassing that it must be addressed topically throughout the book. Here, we will concentrate on choosing and setting up a version control system in a way that will foster cooperative development down the road.","Esta sección non vai revisar a totalidade dos aspectos derivados do uso dun sistema de control de versións. É tan transversal que vai ser comentado ao longo do libro. Eiquí, nos concentraremos na elección e a configuración dun sstema de control de versións de xeito que facilite o desenvolvemento coperativo para que vaia costa abaixo."
ch03.xml:1006,Version Control Vocabulary,Vocabulario de Control de Versións
ch03.xml:1008,"This book cannot teach you how to use version control if you've never used it before, but it would be impossible to discuss the subject without a few key terms. These terms are useful independently of any particular version control system: they are the basic nouns and verbs of networked collaboration, and will be used generically throughout the rest of this book. Even if there were no version control systems in the world, the problem of change management would remain, and these words give us a language for talking about that problem concisely.","Este libro non pode aprenderte a usar o control de versións si nunca antes o usaches, pero sería imposible falar sobre a materia sin definir primeiro algúns conceptos chave. Estes termos son útiles independentemente de cal sexa o sistema  de control de versións seleccionado: son os verbos e sustantivos básicos cara a colaboración en rede, e serán usados dexeito xenérico ao longo do resto do libro. Aínda que non existiran sistemas de control de versións, permanecería o problema da xestión de cambios, e estes termos nos van fornecer dunha linguaxe para falar concisamente deste problema."
ch03.xml:1021,commit,commit
ch03.xml:1022,"To make a change to the project; more formally, to store a change in the version control database in such a way that it can be incorporated into future releases of the project. ""Commit"" can be used as a verb or a noun. As a noun, it is essentially synonymous with ""change"". For example: ""I just committed a fix for the server crash bug people have been reporting on Mac OS X. Jay, could you please review the commit and check that I'm not misusing the allocator there?""","Facer un cambio ao proxecto; máis formalmente, almacenar un cambio na base de datos de control de versións de tal xeito que poida ser incorporado en futuras versións do proxecto. En inglés, ""Commit"" pode ser usado como sustantivo ou como verbo. Como sustantivo, pode ser considerado como sinónimo de ""cambio"". En galego a forma verbal pode ser sustituída por ""facer un commit"". Por exemplo: ""Acabo de facer o commit dun parche para o fallo de servidores en Mac OS X que a xente de xestión de erros viña comentando. Jay, poderías revisar o cambio e comprobar que non estou facendo mal uso do localizador (allocator) eiquí?"""
ch03.xml:1033,log&nbsp;message,mensaxe de log&nbsp;
ch03.xml:1034,"A bit of commentary attached to each commit, describing the nature and purpose of the commit. Log messages are among the most important documents in any project: they are the bridge between the highly technical language of individual code changes and the more user-oriented language of features, bugfixes, and project progress. Later in this section, we'll look at ways to distribute log messages to the appropriate audiences; also, <xref linkend=""codifying-tradition""/><phrase output=""printed""> in <xref linkend=""communications""/></phrase> discusses ways to encourage contributors to write concise and useful log messages.","Un pequeno comentario engadido a cad commit, describindo a natureza e o propósito do cambio. As mensaxes de log contanse entre os documentos máis importantes dun proxecto: constitñuen a ponte entre a linguaxe altamente técnica dos cambios no código e a máis orientada aos usuarios de características, parcheado de erros e progreso do proxecto. Máis adiante nesta sección, falaremos de como distribuir as mensaxes de log ás audiencias apropiadas; tamén, <xref linkend=""codifying-tradition""/><phrase output=""printed""> en <xref linkend=""communications""/></phrase> se discuten acerca dos modos en que os contribuíntes deben escrbir mensaxes de log sinxelos e útiles."
ch03.xml:1048,update,actualizar (update)
ch03.xml:1049,"To ask that others' changes (commits) be incorporated into your local copy of the project; that is, to bring your copy ""up-to-date"". This is a very common operation; most developers update their code several times a day, so that they know they're running roughly the same thing the other developers are running, and so that if they see a bug, they can be pretty sure it hasn't been fixed already. For example: ""Hey, I noticed the indexing code is always dropping the last byte. Is this a new bug?"" ""Yes, but it was fixed last week&mdash;try updating, it should go away.""","Solicitar que os cambios (commits) feitos por outros se incorporen á túa copia local do proxecto; isto é, actualizar a túa copia. É unha operación moi frecuente; os máis dos desenvolvedores actualizan o seu código varias veces ao longo do día, de xeito que están seguros de estar traballando sobre case que o mesmo código sobre o que están a traballar os outros colaboradores, e si eles atopan un erro, poden estar bastante seguros de que aínda non foi reparado. Por exemplo: ""Hey, dinme de conta de que o código de indexación está todo o tempo perdendo o último byte. Trátase dun novo erro?"" ""Sí, pero foi correxido hai unha semán&mdash;tenta facer unah actualización, debería solucionarse."""
ch03.xml:1062,repository,repositorio
ch03.xml:1062,"A database in which changes are stored. Some version control systems are centralized: there is a single, master repository, which stores all changes to the project. Others are decentralized: each developer has his own repository, and changes can be swapped back and forth between repositories arbitrarily. The version control system keeps track of dependencies between changes, and when it's time to make a release, a particular set of changes is approved for that release. The question of whether centralized or decentralized is better is one of the enduring holy wars of software development; try not to fall into the trap of arguing about it on your project lists.","Unha base de datos na que se almacenan os cambios. Algúns sistemas de control de versións están centralizados: hai un único repositorio no que se almacenan tódolos cambios do proxecto. Outros son descentralizados: cada desenvolvedor garda o seu propio repositorio, e os cambios poden ser transmitidos adiante e atrás entre repositorios arbitrariamente. O sistema de control de versións mantén o seguimento das dependencias entre cambios, e cando chega o tempo de liberar unha nova versión, un conxunto concreto de cambios é aprovado para a dita versión. A cuestión sobre si é mellor a centralización ou a descentralización é unha das guerras santas máis duradeiras do desenvolvemento de software; tenta non caer na trampa de discutir sobre este asunto nas lsitas de correo do teu proxecto."
ch03.xml:1077,checkout,checkout
ch03.xml:1078,"The process of obtaining a copy of the project from a repository. A checkout usually produces a directory tree called a ""working copy"" (see below), from which changes may be committed back to the original repository. In some decentralized version control systems, each working copy is itself a repository, and changes can be pushed out to (or pulled into) any repository that's willing to accept them.","O proceso de descargar unha copia do proxecto desde un repositorio. Un checkout xenera normalmente una árbol de directorios chamado ""copia de traballo"" (véxase abaixo), desde o que os cambios poden ser enviados novamente ao repositorio orixinal. Nalgúns sistemas de control de versións descentralizados, cada copia de traballo é ao tempo un repositorio, e os cambios poden ser enviados (ou traídos de) calquera outro repositorio que os acepte."
ch03.xml:1088,working copy,copia de traballo
ch03.xml:1089,"A developer's private directory tree containing the project's source code files, and possibly its web pages or other documents. A working copy also contains a little bit of metadata managed by the version control system, telling the working copy what repository it comes from, what ""revisions"" (see below) of the files are present, etc. Generally, each developer has his own working copy, in which he makes and tests changes, and from which he commits.","O árbol de directorios dun desenvolvedor que contén os ficheiros de código fonte e, posiblemente, as súas páxinas web ou outros documentos. Unha copia de traballo contén tamén un certo número de metadatos xestionados polo sistema de control de versións, que lle din de que repositorio ven, que ""revisións"" (ver máis abaixo) contén, etc. Xeralmente, cada desenvolvedor mantén a súa propia copia de traballo, na que fai e comproba os cambios, e desde a que fai os commits."
ch03.xml:1100,"<firstterm>revision</firstterm>, <firstterm>change</firstterm>, <firstterm>changeset</firstterm>","<firstterm>conxunto de cambios(changeset) </firstterm>, <firstterm>cambio</firstterm>, <firstterm>revisión</firstterm>"
ch03.xml:1103,"A ""revision"" is usually one specific incarnation of a particular file or directory. For example, if the project starts out with revision 6 of file F, and then someone commits a change to F, this produces revision 7 of F. Some systems also use ""revision"", ""change"", or ""changeset"" to refer to a set of changes committed together as one conceptual unit.","Unha ""revisión"" é xeralmente a encarnación dun ficheiro ou directorio en particular. Por exemplo, si o proxecto empeza coa revisión 6 do ficheiro F, e despois alguén fai un commit cun cambio a F, isto produce a revisión 7 de F. Algúns sistemas usan tamén ""revisión"", ""cambio"" o ""changeset"" para referirse a un conxunto de cambios subidos todos xuntos nun único commit como unha unidade conceptual"
ch03.xml:1110,"These terms occasionally have distinct technical meanings in different version control systems, but the general idea is always the same: they give a way to speak precisely about exact points in time in the history of a file or a set of files (say, immediately before and after a bug is fixed). For example: ""Oh yes, she fixed that in revision 10"" or ""She fixed that in revision 10 of foo.c.""","Estes termos teñen ocasionalmente diferentes significados técnicos en diferentes sistemas de control de versións, pero a idea máis extendida é sempre a mesma: son a maneira de falar con precisión acerca de puntos concretos no tempo da historia dun ficheiro ou un conxunto de ficheiros (digamos, inmediatamente antes y después de que un error es reparado). Por exemplo: ""Oh sí, reparou ese problema na revisión 10"" ou ""Reparou iso na revisión 10 de foo.c"""
ch03.xml:1118,"When one talks about a file or collection of files without specifying a particular revision, it is generally assumed that one means the most recent revision(s) available.","Cando un fala sobre un ficheiro ou colección de ficheiros sen especificar unha revisión en particular, xeralmente se asume que se está a referir a(s) revisión(s) máis recentes."
ch03.xml:1124,"""Version"" Versus ""Revision""","""Versión"" fronte a ""Revisión"""
ch03.xml:1125,"The word <firstterm>version</firstterm> is sometimes used as a synonym for ""revision"", but I will not use it that way in this book, because it is too easily confused with ""version"" in the sense of a version of a piece of software&mdash;that is, the release or edition number, as in ""Version 1.0"". However, since the phrase ""version control"" is already standard, I will continue to use it as a synonym for ""revision control"" and ""change control"".","A palabra <firstterm>versión</firstterm> ás veces é usada como sinónimo de ""revisión"", pero eu non o vou usar nese sentido neste libro, porque é demasiado fácil confundilo co termo ""versión"" tal como cando se fala de versións dun software&mdash;isto é, o número de liberación ou distribución, como en ""Versión 1.0"". De tódolos xeitos, como a expresión ""control de versións"" é de feito estándar, eu vou continuar a empregala como sinónimo de ""control de revisión"" y ""control de cambios""."
ch03.xml:1135,diff,diff
ch03.xml:1136,"A textual representation of a change. A diff shows which lines were changed and how, plus a few lines of surrounding context on either side. A developer who is already familiar with some code can usually read a diff against that code and understand what the change did, and even spot bugs.","Representación textual dun cambio. Un ""diff"" amosa que liñas foron cambiadas e como, ademáis de unhas poucas liñas de contextualización da dita información. Un desenvolvedor que estea familiarizado cun código dado, poderá ler o diff contra o dito código e entender que foi o que se cambiou, e incluso localizar erros."
ch03.xml:1144,<firstterm>tag</firstterm>,<firstterm>etiqueta (tag)</firstterm>
ch03.xml:1145,"A label for a particular collection of files at specified revisions. Tags are usually used to preserve interesting snapshots of the project. For example, a tag is usually made for each public release, so that one can obtain, directly from the version control system, the exact set of files/revisions comprising that release. Common tag names are things like <literal>Release_1_0</literal>, <literal>Delivery_00456</literal>, etc.","Designan coleccións particulares de ficheiros pertencentes a unha revisión específica. As etiquetas xeralmente son usadas para preservar fitos interesantes dun proxecto. Por exemplo, fercuentemente se lle adxudica unha etiqueta a cada versión liberada ao público, de tal xeito que se poida obter, directamente dende o sistema de control de versións, o conxunto exacto de ficheiros que compoñen esa versión. Os nomes que se adoitan empregar para as etiquetas poden ser do estilo de: <literal>Versión_1_0</literal>, <literal>Distribución_00456</literal>, etc."
ch03.xml:1156,branch,rama (branch)
ch03.xml:1157,"A copy of the project, under version control but isolated, so that changes made to the branch don't affect the rest of the project, and vice versa, except when changes are deliberately ""merged"" from one side to the other (see below). Branches are also known as ""lines of development"". Even when a project has no explicit branches, development is still considered to be happening on the ""main branch"", also known as the ""main line"" or ""<firstterm>trunk</firstterm>"".","Cada copia do proxecto, baixo o control de versións pero individualizada, tal que os cambios feitos á rama non afectan ao resto do proxecto, e viceversa, excepto cando os cambios son refundidos (merged) dende unha rama a outra (véxase abaixo). As ramas son tambén coñecidas como ""liñas de desenvolvemento"". Incluso cando un proxecto non ten ramas, se considera que o desenvovemento se está a facer na ""rama principal (main branch)"", tamén coñecida como ""liña principal (main line)"" ou"" <firstterm>tronco (trunk)</firstterm>""."
ch03.xml:1166,"Branches offer a way to isolate different lines of development from each other. For example, a branch can be used for experimental development that would be too destabilizing for the main trunk. Or conversely, a branch can be used as a place to stabilize a new release. During the release process, regular development would continue uninterrupted in the main branch of the repository; meanwhile, on the release branch, no changes are allowed except those approved by the release managers. This way, making a release needn't interfere with ongoing development work. See <xref linkend=""branches""/><phrase output=""printed""> later in this chapter</phrase> for a more detailed discussion of branching.","As ramas ofrecen unha maneira de aillar entre si diferentes liñas de desenvolvemento que poderían desestabilizar o tronco principal. Ou alternativamente, unha rama pode ser empregada para estabilizar unha nova versión. Durante o proceso de liberación, o desenvolvemento normal do proxecto pode continuar na rama principal do repositorio; mentres tanto, na rama da liberación, non se permite introducir novos cambios distintos dos aprovados polos xestores da liberación. Así, facer unha liberación non ter por que interferir cós traballos de desenvolvemento. Podes consultar <xref linkend=""ramas (branches)""/><phrase output=""printed""> máis adiante neste capítulo</phrase> si precisas mási detalles sobre a creación de ramas."
ch03.xml:1181,merge (a.k.a. port),"refundir (""merge"", ou ""port"")"
ch03.xml:1182,"To move a change from one branch to another. This includes merging from the main trunk to some other branch, or vice versa. In fact, those are the most common kinds of merges; it is rare to port a change between two non-main branches. See <xref linkend=""vc-singularity""/> for more about this kind of merging.","Trasladar un cambio entre ramas. Inclúe refundir dende o tronco principal a unha rama ou viceversa. De feito, estes son precisamente os refundidos mási frecuentes; é raro facer refundidos entre ramas secundarias do proxecto. Podes ver máis información sobre este  tema en <xref linkend=""vc-singularity""/>."
ch03.xml:1189,"""Merge"" has a second, related meaning: it is what the version control system does when it sees that two people have changed the same file but in non-overlapping ways. Since the two changes do not interfere with each other, when one of the people updates their copy of the file (already containing their own changes), the other person's changes will be automatically merged in. This is very common, especially on projects where multiple people are hacking on the same code. When two different changes <emphasis>do</emphasis> overlap, the result is a ""conflict""; see below.","""Refundir (merge)"" ten un segundo significado, relacionado có anterior: é o que fai o sistema de control de versións cando detecta que dúas persoas fixeron cambios a un mesmo ficheiro, pero en aspectos que non solapan. Dado que os dous cambios non interfiren entre si, cando un dos desenvolvedores actualiza a súa copia do ficheiro (contendo aínda os seus propios cambios), os cambios feitos polo segundo desenvolvedor se refunden automáticamente cós anteriores. Isto é moi frecuente, especialmente en proxectos nos que moitas persoas están traballando sobre o mesmo código. Cando dous cambios diferentes <emphasis>interfiren</emphasis>, o resultado é un ""conflicto""."
ch03.xml:1202,conflict,conflicto
ch03.xml:1203,"What happens when two people try to make different changes to the same place in the code. All version control systems automatically detect conflicts, and notify at least one of the humans involved that their changes conflict with someone else's. It is then up to that human to <firstterm>resolve</firstterm> the conflict, and to communicate that resolution to the version control system.","É o que sucede cando dúas persoas tratan de facer cambios diferentes sobre a mesma porción de código. Todos os sistemas de control de versións detectan automáticamente os conflictos, e lle notifican a cando menos un dos desenvolvedores implicados que os seus cambios entran en conflicto cós de alguén máis. <firstterm>Resolver</firstterm> o conflicto e comunicarllo ao sistema queda entón na man desa persoa."
ch03.xml:1213,lock,bloquear (lock)
ch03.xml:1214,"A way to declare an exclusive intent to change a particular file or directory. For example, ""I can't commit any changes to the web pages right now. It seems Alfred has them all locked while he fixes their background images."" Not all version control systems even offer the ability to lock, and of those that do, not all require the locking feature to be used. This is because parallel, simultaneous development is the norm, and locking people out of files is (usually) contrary to this ideal.","É unha maneira de declarar un intento de introducir cambios en exclusiva nun ficheiro ou directorio dado. Por exemplo: ""Non poido subir ningún cambio ás páxinas web neste momento. Alfredo as ten bloqueado mentres corrixe as imáxenes do fondo"". Non todos os sistemas de control de versións ofrecen a posibilidade de facer bloqueos, e entre os que sí o fan, non todos esixen que se empregue o bloqueo. Isto é así porque o desenvolvemento simultáneo e en paralelo é a norma, e bloquear á xebte que pretende traballar sobre os ficheiros é (xeralmente) contrario a este ideal."
ch03.xml:1223,"Version control systems that require locking to make commits are said to use the <firstterm>lock-modify-unlock</firstterm> model. Those that do not are said to use the <firstterm>copy-modify-merge</firstterm> model. An excellent in-depth explanation and comparison of the two models may be found at <ulink url=""http://svnbook.red-bean.com/svnbook-1.0/ch02s02.html""></ulink>. In general, the copy-modify-merge model is better for open source development, and all the version control systems discussed in this book support that model.","Os sistemas de control de versións que requiren do uso do bloqueo para poder subir cambios son coñecidos como modelos do tipo <firstterm>bloqueo-modificación-desbloqueo</firstterm>. Os que non, son denominados modelos <firstterm>copia-modificación-refundido</firstterm>. Unha comparación excelente entre os dous modelos pode ser consutada en <ulink url=""http://svnbook.red-bean.com/svnbook-1.0/ch02s02.html""></ulink>. En xeral, o modelo copia-modificación-refundido se considera mellor para o desenvolvemento de software libre, e todos os sistemas de control de versions que se comentan neste libro soportan o dito modelo."
ch03.xml:1243,Choosing a Version Control System,Selccionando un Sistema de Control de Versións
ch03.xml:1245,"As of this writing, the two most popular version control systems in the free software world are <firstterm>Concurrent Versions System</firstterm> (<firstterm>CVS</firstterm>, <ulink url=""http://www.cvshome.org/""></ulink>) and <firstterm>Subversion</firstterm> (<firstterm>SVN</firstterm>, <ulink url=""http://subversion.tigris.org/""></ulink>).","Cando este libro foi escrito, os dous sistemas de control de versións máis populares no mundo do software libre son <firstterm>Concurrent Versions System</firstterm> (<firstterm>CVS</firstterm>, <ulink url=""http://www.cvshome.org/""></ulink>) e <firstterm>Subversion</firstterm> (<firstterm>SVN</firstterm>, <ulink url=""http://subversion.tigris.org/""></ulink>)."
ch03.xml:1252,"CVS has been around for a long time. Most experienced developers are already familiar with it, it does more or less what you need, and since it's been popular for a long time, you probably won't end up in any long debates about whether or not it was the right choice. CVS has some disadvantages, however. It doesn't provide an easy way to refer to multi-file changes; it doesn't allow you to rename or copy files under version control (so if you need to reorganize your code tree after starting the project, it can be a real pain); it has poor merging support; it doesn't handle large files or binary files very well; and some operations are slow when large numbers of files are involved.","CVS está dispoñible dende hai moito tempo. Os desenvolvedores máis experimentados están familiarizados dabondo con él, fai máis ou menos o que precisas, e como é popular dende hai tempo, probablemente non teñas que enredarte en longas discusións sobre si é ou non a opción máis axeitada. Nembargantes, CVS tamén ten algunhas desventaxas. Non suministra unha maneira doada de tratar cin cambios multi-ficheiro; non che deixa renomear ou copiar os ficheiros dentro do sistema de control (así que intentar reorganizar a árbore do código do teu proxecto, unha vez xa iniciado, pode convertirse nun auténtico pesadelo); o seu soporte aos refundidos é moi pobre; non manexa nada ben os ficheiros moi grandes ou os binarios; e algunhas operacións son moi lentas cando se fan sobre un número grande de ficheiros."
ch03.xml:1264,"None of CVS's flaws is fatal, and it is still quite popular. However, in the last few years the more recent Subversion has been gaining ground, especially in newer projects.<footnote><para>See <ulink url=""http://cia.vc/stats/vcs""></ulink> and <ulink url=""http://subversion.tigris.org/svn-dav-securityspace-survey.html""></ulink> for evidence of this growth.</para></footnote>. If you're starting a new project, I recommend Subversion.","Ningún dos fallos de CVS é fatal, e aínda é moi popular. Nembargantes, nos últimos anos o máis recente Subversion está a gañar terreo, especialmente nos proxectos máis novos. <footnote><para>Véxase <ulink url=""http://cia.vc/stats/vcs""></ulink> e <ulink url=""http://subversion.tigris.org/svn-dav-securityspace-survey.html""></ulink> onde se comentan probas deste crecemento.</para></footnote>. Si estás iniciando un proxecto novo, eu che  recomendo Subversion"
ch03.xml:1272,"On the other hand, since I'm involved in the Subversion project, my objectivity might reasonably be questioned. And in the last few years a number of new open-source version control systems have appeared. <xref linkend=""vc-systems""/> lists all the ones I know of, in rough order of popularity. As the list makes clear, deciding on a version control system could easily become a lifelong research project. Possibly you will be spared the decision because it will be made for you by your hosting site. But if you must choose, consult with your other developers, ask around to see what people have experience with, then pick one and run with it. Any stable, production-ready version control system will do; you don't have to worry too much about making a drastically wrong decision. If you simply can't make up your mind, then go with Subversion. It's fairly easy to learn, and is likely to remain a standard for at least a few years.","Pola contra, dado que eu estou participando no proxecto Subversion, a miña obxectividade pode ser razoableente discutida. E nos últimos anos teñen xurdido un certo número de novos sistemas de control de versións en software libre. En <xref linkend=""vc-systems""/>,presento unha listaxe , ordeadas máis ou menos por orde de popularidade. Como a listaxe deixa claro, decidirse por un sistema de control de versions podería convertirse nun proxecto vitalicio en si mesmo. Posiblemente te verás liberado desta decisión porque o fará por tí o sitio no que teñas hospedado o teu proxecto. Pero si és tí quen ten que tomar a decisión, consúltao có resto dos desenvolvedores, averigua qué experiencia teñen ao respecto, e despois elixe un sistema e trabala con él. Calquera sistema de control de versións estable e listo para a producción cumplirá as túas necesidades; non deberías preocuparte moito sobre si tomaches unha decsión radicalmente errónea. Si simplemente non dás tomado unha decisión, entón elixe Subversion. É moi doado de aprender, e seguramente vai seguir sendo un estándar por moitos anos."
ch03.xml:1293,Using the Version Control System,Usando o Sistema de Control de Versións
ch03.xml:1295,"The recommendations in this section are not targeted toward a particular version control system, and should be simple to implement in any of them. Consult your specific system's documentation for details.","As recomendacións desta sección non se dirixen a un sistema de control de versións en particular, e deberían ser doadas de poñer en práctica en calquera deles. Consulta a documentación do teu sistema esecífico si precisas máis detalles."
ch03.xml:1301,Version everything,Versionea todo.
ch03.xml:1303,"Keep not only your project's source code under version control, but also its web pages, documentation, FAQ, design notes, and anything else that people might want to edit. Keep them right next to the source code, in the same repository tree. Any piece of information worth writing down is worth versioning&mdash;that is, any piece of information that could change. Things that don't change should be archived, not versioned. For example, an email, once posted, does not change; therefore, versioning it wouldn't make sense (unless it becomes part of some larger, evolving document).","Debes manter no teu sistema de control de versions non só o código fonte do teu proxecto, si non tamén as súas páxinas web, documentación, FAQ, notas de deseño, e calquera outra cousa que a xente poida querer editar. Mantenas xusto á carón do código, na mesma árbore do repositorio. Calquera peza de información que pague a pena de ser escrita, paga igualmente a pena de ser versioneada&mdash;isto é, calquera peza de información que poida ser modificada. As cousas que non están sometidas a cambios deberían ser arquivadas, non versioneadas. Por exemplo, un email, unha vez enviado, non vai cambiar; polo tanto, non tería sentido pensar en que pode ser versioneado (a non ser que forme parte dun documento máis longo e que sí evolva no tempo)."
ch03.xml:1313,"The reason versioning everything together in one place is important is so people only have to learn one mechanism for submitting changes. Often a contributor will start out making edits to the web pages or documentation, and move to small code contributions later, for example. When the project uses the same system for all kinds of submissions, people only have to learn the ropes once. Versioning everything together also means that new features can be committed together with their documentation updates, that branching the code will branch the documentation too, etc.","A razón pola que é importante versionear todo nun único sitio é que diste xeito a xente somentes terá qu eaprender un mecanismo para incorporar cambios. Frecuentemente, un colaborador vai comenzar por enviar cambios ás páxinas web ou á documentación, e comenzará máis tarde a facer pequenas contribucións ao código, por exemplo. Cando o proxecto emprega o mesmo sistema para todos os tipos de contribucións, a xebte só terá que afacerse a él unha vez. Manter todas as versións xuntas significa tamén que as novas características poden ser incorporadas xunto coa súa documentación, e que distribuir o código por varias ramas vai supor que a documentación tamén se distribúe, etc."
ch03.xml:1323,"Don't keep <firstterm>generated files</firstterm> under version control. They are not truly editable data, since they are produced programmatically from other files. For example, some build systems create <filename>configure</filename> based on the template <filename>configure.in</filename>. To make a change to the <filename>configure</filename>, one would edit <filename>configure.in</filename> and then regenerate; thus, only the template <filename>configure.in</filename> is an ""editable file."" Just version the templates&mdash;if you version the result files as well, people will inevitably forget to regenerate when they commit a change to a template, and the resulting inconsistencies will cause no end of confusion.","Non manteñas <firstterm>os ficheiros xenerados</firstterm> no sistema de control de versións. Non osn propiamente datos editables, xa que son xerados automáticamente a partires de outros ficheiros. Por exemplo, algúns sistemas de montaxe (build) crean o ficheiro <filename>configure</filename> a partires da plantilla <filename>configure.in</filename>. Para facer un cambio a <filename>configure</filename>, terías que editar <filename>configure.in</filename> e posteriormente rexenerar o primeiro; así, tan só a plantilla <filename>configure.in</filename> é un ficheiro ""editable"". Polo tanto, mantén no control de versións tan só as plantillas&mdash;si inclúes os ficheiros resultantes, a xente vai inevvitablemente esquecer rexeneralos cando incorporan un cambio a unha plantilla, e a correspondente inconsistencia non vai causar máis que confusión."
ch03.xml:1334,"For a different opinion on the question of versioning <filename>configure</filename> files, see Alexey Makhotkin's post ""<citetitle>configure.in and version control</citetitle>"" at <ulink url=""http://versioncontrolblog.com/2007/01/08/configurein-and-version-control/""></ulink>.","Pero si queres ler unha segunda opinión acerca da cuestión dos ficheiros <filename>configure</filename>,podes revisar o comentario de Alexey Makhotkin ""<citetitle>configure.in and version control</citetitle>"" en <ulink url=""http://versioncontrolblog.com/2007/01/08/configurein-and-version-control/""></ulink>."
ch03.xml:1340,"The rule that all editable data should be kept under version control has one unfortunate exception: the bug tracker. Bug databases hold plenty of editable data, but for technical reasons generally cannot store that data in the main version control system. (Some trackers have primitive versioning features of their own, however, independent of the project's main repository.)","A regla de que todo dato editable debe ser mantido nun sistema de control de versións tén desafortunadamente unha excepción: o xestor de erros (bug tracker). As bases de datos de erros conteñen multitude de datos editables, pero por cuestións técnicas non se pode, xeralmente, ter ises datos almacenados nun sistema de control de versións. (Algúns xestores de erros incorporan de seu algunhas funcionalidades moi primitivas de control de versións, pero en calquera caso independentes do repositorio principal do proxecto)."
ch03.xml:1350,Browsability,Navegabilidade
ch03.xml:1352,"The project's repository should be browsable on the Web. This means not only the ability to see the latest revisions of the project's files, but to go back in time and look at earlier revisions, view the differences between revisions, read log messages for selected changes, etc.","O repositorio do proxecto debe ser navegable dende a web. Isto inclúe non só a habilidade para ver a última revisión dos ficheiros do proxecto, se non tamén poder ir atrás no tempo e vistar revisións anteriores, ver as diferencias entre elas, ler as mensaxes de seguimento (log) de cambios concretos, etc."
ch03.xml:1358,"Browsability is important because it is a lightweight portal to project data. If the repository cannot be viewed through a web browser, then someone wanting to inspect a particular file (say, to see if a certain bugfix had made it into the code) would first have to install version control client software locally, which could turn their simple query from a two-minute task into a half-hour or longer task.","A navegabilidade é importante porque supón o uso dun portal lixeiro de acceso aos datos do proxecto. Si o repositorio non pode ser visitado dende un navegador web, entón alguén que pretenda ver un ficheiro en particular (nomeadamente: comprobar si unha corrección dun erro foi xa incorporada ao código), primeiro tería que instalar localmente un cliente do sistema de control de versións, o que podería transformar a súa tarefa inicial de un par de minutos nun traballo de a lo menos media hora."
ch03.xml:1366,"Browsability also implies canonical URLs for viewing specific revisions of files, and for viewing the latest revision at any given time. This can be very useful in technical discussions or when pointing people to documentation. For example, instead of saying ""For tips on debugging the server, see the www/hacking.html file in your working copy,"" one can say ""For tips on debugging the server, see <emphasis>http://svn.collab.net/repos/svn/trunk/www/hacking.html</emphasis>,"" giving a URL that always points to the latest revision of the <filename>hacking.html</filename> file. The URL is better because it is completely unambiguous, and avoids the question of whether the addressee has an up-to-date working copy.","Implica tamén a existencia de URL normalizadas para acceder a revisións específicas dos ficheiros, e para visitar a última revisión nun momento dado. Isto pode ser moi útil cara a discusións técnicas ou cando se trata de dirixir á xente hacia a documentación. Por exemplo, en vez de decir ""Para informarse sobre instruccións para reparar o servidor, diríxase ao ficheiro www/hacking.html na súa copia local"", podería decirse""Para informarse sobre instruccións para reparar o servidor, visite <emphasis>http://svn.collab.net/repos/svn/trunk/www/hacking.html</emphasis>,"" proporcionando unha URL que vai dirixir sempre á última revisión do ficheiro <filename>hacking.html</filename>. A URL é mellor xa que carece totamente de ambigüidade, e evita o problema de si o destinatario ten unha copia de traballo completamente actualizada."
ch03.xml:1378,"Some version control systems come with built-in repository-browsing mechanisms, while others rely on third-party tools to do it. Three such tools are <firstterm>ViewVC</firstterm> (<ulink url=""http://viewvc.org/""></ulink>), <firstterm>CVSWeb</firstterm> (<ulink url=""http://www.freebsd.org/projects/cvsweb.html""></ulink>), and <firstterm>WebSVN</firstterm> (<ulink url=""http://websvn.tigris.org/""></ulink>). The first works with both CVS and Subversion, the second with CVS only, and the third with Subversion only.","Algúns sistemas de control de versións incorporan mecanismos internos de navegación polo repositorio, mentres que outros empregan ferramentas de terceiros. Estas ferramentas son:<firstterm>ViewVC</firstterm> (<ulink url=""http://viewvc.org/""></ulink>), <firstterm>CVSWeb</firstterm> (<ulink url=""http://www.freebsd.org/projects/cvsweb.html""></ulink>), e <firstterm>WebSVN</firstterm> (<ulink url=""http://websvn.tigris.org/""></ulink>). A primeira traballa sobre CVS e Subversion, a segunda só sobre CVS, e a terceira só sobre Subversion."
ch03.xml:1389,Commit emails,Mensaxes de incorporación de cambios (Commit emails)
ch03.xml:1391,"Every commit to the repository should generate an email showing who made the change, when they made it, what files and directories changed, and how they changed. The email should go to a special mailing list devoted to commit emails, separate from the mailing lists to which humans post. Developers and other interested parties should be encouraged to subscribe to the commits list, as it is the most effective way to keep up with what's happening in the project at the code level. Aside from the obvious technical benefits of peer review (see <xref linkend=""code-review""/>), commit emails help create a sense of community, because they establish a shared environment in which people can react to events (commits) that they know are visible to others as well.","Toda incorporaciñon de cambios ao repositorio (commit) debería xerar unha mensaxe na que consten quen fixo o cambio, cando o fixo, que ficheiros e directorios cambiou, e en que consistiron os cambios. A mensaxe debería ser enviada a unha lista de correo específica, distinta das empregadas para xestionar as mensaxes dos colaboradores. Se debería recomendar aos desenvolvedores e outras persoas interesadas que se deran de alta na lista de mensaxes de cambios, xa que este é o modo máis efectivo de manter o coñecemento sobre que é o que se está a facer no proxecto no tanto ao código. Máis aló das evidentes ventaxas técnicas da revisión por colegas (véxase <xref linkend=""revisión-do-código""/>), as mensaxes de ncorporación de cambios axudan a crear o espírito de comunidade, xa que proveen ao proxecto dun contorno común onde a xente pode reaccionar ante os eventos (incorporación de cambios) que saben que están visbkes tamén para os demáis."
ch03.xml:1404,"The specifics of setting up commit emails will vary depending on your version control system, but usually there's a script or other packaged facility for doing it. If you're having trouble finding it, try looking for documentation on <firstterm>hooks</firstterm>, specifically a <firstterm>post-commit hook</firstterm>, also called the <firstterm>loginfo hook</firstterm> in CVS. Post-commit hooks are a general means of launching automated tasks in response to commits. The hook is triggered by an individual commit, is fed all the information about that commit, and is then free to use that information to do anything&mdash;for example, to send out an email.","As cuestións específicas sobre a confguración de mensaxes de incorporación de cambios varían dependendo de cal sexa o teu sistema de control de versións, pero xeralmente hai un script ou outra clase de utilidade para facelo. Si tés problemas para atopala, intenta buscar na documentación por <firstterm>hooks</firstterm>, e especialmente <firstterm>post-commit hook</firstterm>, tamén chamado <firstterm>loginfo hook</firstterm> en CVS. Os ""post-commit hooks"" constitúen un modo xeral de lanzar tarefas automatizadas en resposta á incorporación de cambios. O ""hook"" se dispara ante á incorporación dun cambio en concreto, se alimenta da información acerca dise cambio, e é logo libre de usar esa información para realizar calquera outra operación&mdash; por exemplo, enviar un correo electrónico."
ch03.xml:1416,"With pre-packaged commit email systems, you may want to modify some of the default behaviors:",
ch03.xml:1422,"Some commit mailers don't include the actual diffs in the email, but instead provide a URL to view the change on the web using the repository browsing system. While it's good to provide the URL, so the change can be referred to later, it is also <emphasis>very</emphasis> important that the commit email include the diffs themselves. Reading email is already part of people's routine, so if the content of the change is visible right there in the commit email, developers will review the commit on the spot, without leaving their mail reader. If they have to click on a URL to review the change, most won't do it, because that requires a new action instead of a continuation of what they were already doing. Furthermore, if the reviewer wants to ask something about the change, it's vastly easier to hit reply-with-text and simply annotate the quoted diff than it is to visit a web page and laboriously cut-and-paste parts of the diff from web browser to email client.",
ch03.xml:1439,"(Of course, if the diff is huge, such as when a large body of new code has been added to the repository, then it makes sense to omit the diff and offer only the URL. Most commit mailers can do this kind of limiting automatically. If yours can't, then it's still better to include diffs, and live with the occasional huge email, than to leave the diffs off entirely. Convenient reviewing and commenting is a cornerstone of cooperative development, much too important to do without.)",
ch03.xml:1449,"The commit emails should set their Reply-to header to the regular development list, not the commit email list. That is, when someone reviews a commit and writes a response, their response should be automatically directed toward the human development list, where technical issues are normally discussed. There are a few reasons for this. First, you want to keep all technical discussion on one list, because that's where people expect it to happen, and because that way there's only one archive to search. Second, there might be interested parties not subscribed to the commit email list. Third, the commit email list advertises itself as a service for watching commits, not for watching commits <emphasis>and</emphasis> occasional technical discussions. Those who subscribed to the commit email list did not sign up for anything but commit emails; sending them other material via that list would violate an implicit contract. Fourth, people often write programs that read the commit email list and process the results (for display on a web page, for example). Those programs are prepared to handle consistently-formatted commit emails, but not inconsistent human-written mails.",
ch03.xml:1469,"Note that this advice to set Reply-to does not contradict the recommendations in <xref linkend=""reply-to""/><phrase output=""printed""> earlier in this chapter</phrase>. It's always okay for the <emphasis>sender</emphasis> of a message to set Reply-to. In this case, the sender is the version control system itself, and it sets Reply-to in order to indicate that the appropriate place for replies is the development mailing list, not the commit list.",
ch03.xml:1484,CIA: Another Change Publication Mechanism,
ch03.xml:1486,"Commit emails are not the only way to propagate change news. Recently, another mechanism called CIA (<ulink url=""http://cia.navi.cx/""></ulink>) has been developed. CIA is a real-time commit statistics aggregator and distributor. The most popular use of CIA is to send commit notifications to IRC channels, so that people logged into those channels see the commits happening in real time. Though of somewhat less technical utility than commit emails, since observers might or might not be around when a commit notice pops up in IRC, this technique is of immense <emphasis>social</emphasis> utility. People get the sense of being part of something alive and active, and feel that they can see progress being made right before their eyes.",
ch03.xml:1498,"The way it works is that you invoke the CIA notifier program from your post-commit hook. The notifier formats the commit information into an XML message, and sends to a central server (typically <literal>cia.navi.cx</literal>). That server then distributes the commit information to other forums.",
ch03.xml:1504,"CIA can also be configured to send out <ulink url=""http://www.xml.com/pub/a/2002/12/18/dive-into-xml.html"">RSS</ulink> feeds. See the documentation at <ulink url=""http://cia.navi.cx/""></ulink> for details.",
ch03.xml:1509,"To see an example of CIA in action, point your IRC client at <literal>irc.freenode.net</literal>, channel <literal>#commits</literal>.",
ch03.xml:1518,Use branches to avoid bottlenecks,
ch03.xml:1520,"Non-expert version control users are sometimes a bit afraid of branching and merging. This is probably a side effect of CVS's popularity: CVS's interface for branching and merging is somewhat counterintuitive, so many people have learned to avoid those operations entirely.",
ch03.xml:1526,"If you are among those people, resolve right now to conquer any fears you may have and take the time to learn how to do branching and merging. They are not difficult operations, once you get used to them, and they become increasingly important as a project acquires more developers.",
ch03.xml:1532,"Branches are valuable because they turn a scarce resource&mdash;working room in the project's code&mdash;into an abundant one. Normally, all developers work together in the same sandbox, constructing the same castle. When someone wants to add a new drawbridge, but can't convince everyone else that it would be an improvement, branching makes it possible for her to go to an isolated corner and try it out. If the effort succeeds, she can invite the other developers to examine the result. If everyone agrees that the result is good, they can tell the version control system to move (""merge"") the drawbridge from the branch castle over to the main castle.",
ch03.xml:1544,"It's easy to see how this ability helps collaborative development. People need the freedom to try new things without feeling like they're interfering with others' work. Equally importantly, there are times when code needs to be isolated from the usual development churn, in order to get a bug fixed or a release stabilized (see <xref linkend=""stabilizing-a-release""/> and <xref linkend=""release-lines""/><phrase output=""printed""> in <xref linkend=""development-cycle""/></phrase>) without worrying about tracking a moving target.",
ch03.xml:1554,"Use branches liberally, and encourage others to use them. But also make sure that a given branch is only active for exactly as long as needed. Every active branch is a slight drain on the community's attention. Even those who are not working in a branch still maintain a peripheral awareness of what's going on in it. Such awareness is desirable, of course, and commit emails should be sent out for branch commits just as for any other commit. But branches should not become a mechanism for dividing the development community. With rare exceptions, the eventual goal of most branches should be to merge their changes back into the main line and disappear.",
ch03.xml:1568,Singularity of information,
ch03.xml:1570,"Merging has an important corollary: never commit the same change twice. That is, a given change should enter the version control system exactly once. The revision (or set of revisions) in which the change entered is its unique identifier from then on. If it needs to be applied to branches other than the one on which it entered, then it should be merged from its original entry point to those other destinations&mdash;as opposed to committing a textually identical change, which would have the same effect in the code, but would make accurate bookkeeping and release management impossible.",
ch03.xml:1580,"The practical effects of this advice differ from one version control system to another. In some systems, merges are special events, fundamentally distinct from commits, and carry their own metadata with them. In others, the results of merges are committed the same way other changes are committed, so the primary means of distinguishing a ""merge commit"" from a ""new change commit"" is in the log message. In a merge's log message, don't repeat the log message of the original change. Instead, just indicate that this is a merge, and give the identifying revision of the original change, with at most a one-sentence summary of its effect. If someone wants to see the full log message, she should consult the original revision.",
ch03.xml:1592,"The reason it's important to avoid repeating the log message is that log messages are sometimes edited after they've been committed. If a change's log message were repeated at each merge destination, then even if someone edited the original message, she'd still leave all the repeats uncorrected&mdash;which would only cause confusion down the road.",
ch03.xml:1599,"The same principle applies to reverting a change. If a change is withdrawn from the code, then the log message for the reversion should merely state that some specific revision(s) is being reverted, <emphasis>not</emphasis> describe the actual code change that results from the reversion, since the semantics of the change can be derived by reading the original log message and change. Of course, the reversion's log message should also state the reason why the change is being reverted, but it should not duplicate anything from the original change's log message. If possible, go back and edit the original change's log message to point out that it was reverted.",
ch03.xml:1610,"All of the above implies that you should use a consistent syntax for referring to revisions. This is helpful not only in log messages, but in emails, the bug tracker, and elsewhere. If you're using CVS, I suggest ""<literal>path/to/file/in/project/tree:REV</literal>"", where REV is a CVS revision number such as ""1.76"". If you're using Subversion, the standard syntax for revision 1729 is ""r1729"" (file paths are not needed because Subversion uses global revision numbers). In other systems, there is usually a standard syntax for expressing the changeset name. Whatever the appropriate syntax is for your system, encourage people to use it when referring to changes. Consistent expression of change names makes project bookkeeping much easier (as we will see in <xref linkend=""communications""/> and <xref linkend=""development-cycle""/>), and since a lot of the bookkeeping will be done by volunteers, it needs to be as easy as possible.",
ch03.xml:1626,"See also <xref linkend=""releases-and-daily-development""/><phrase output=""printed""> in <xref linkend=""development-cycle""/></phrase>.",
ch03.xml:1635,Authorization,
ch03.xml:1637,"Most version control systems offer a feature whereby certain people can be allowed or disallowed from committing in specific sub-areas of the repository. Following the principle that when handed a hammer, people start looking around for nails, many projects use this feature with abandon, carefully granting people access to just those areas where they have been approved to commit, and making sure they can't commit anywhere else. (See <xref linkend=""committers""/><phrase output=""printed""> in <xref linkend=""managing-volunteers""/></phrase> for how projects decide who can commit where.)",
ch03.xml:1648,"There is probably little harm done by exercising such tight control, but a more relaxed policy is fine too. Some projects simply use an honor system: when a person is granted commit access, even for a sub-area of the repository, what they actually receive is a password that allows them to commit anywhere in the project. They're just asked to keep their commits in their area. Remember that there is no real risk here: in an active project, all commits are reviewed anyway. If someone commits where they're not supposed to, others will notice it and say something. If a change needs to be undone, that's simple enough&mdash;everything's under version control anyway, so just revert.",
ch03.xml:1660,"There are several advantages to the relaxed approach. First, as developers expand into other areas (which they usually will if they stay with the project), there is no administrative overhead to granting them wider privileges. Once the decision is made, the person can just start committing in the new area right away.",
ch03.xml:1666,"Second, expansion can be done in a more fine-grained manner. Generally, a committer in area X who wants to expand to area Y will start posting patches against Y and asking for review. If someone who already has commit access to area Y sees such a patch and approves of it, they can just tell the submitter to commit the change directly (mentioning the reviewer/approver's name in the log message, of course). That way, the commit will come from the person who actually wrote the change, which is preferable from both an information management standpoint and from a crediting standpoint.",
ch03.xml:1676,"Last, and perhaps most important, using the honor system encourages an atmosphere of trust and mutual respect. Giving someone commit access to a subdomain is a statement about their technical preparedness&mdash;it says: ""We see you have expertise to make commits in a certain domain, so go for it."" But imposing strict authorization controls says: ""Not only are we asserting a limit on your expertise, we're also a bit suspicious about your <emphasis>intentions</emphasis>."" That's not the sort of statement you want to make if you can avoid it. Bringing someone into the project as a committer is an opportunity to initiate them into a circle of mutual trust. A good way to do that is to give them more power than they're supposed to use, then inform them that it's up to them to stay within the stated limits.",
ch03.xml:1690,"The Subversion project has operated on the honor system way for more than four years, with 33 full and 43 partial committers as of this writing. The only distinction the system actually enforces is between committers and non-committers; further subdivisions are maintained solely by humans. Yet we've never had a problem with someone deliberately committing outside their domain. Once or twice there's been an innocent misunderstanding about the extent of someone's commit privileges, but it's always been resolved quickly and amiably.",
ch03.xml:1700,"Obviously, in situations where self-policing is impractical, you must rely on hard authorization controls. But such situations are rare. Even when there are millions of lines of code and hundreds or thousands of developers, a commit to any given code module should still be reviewed by those who work on that module, and they can recognize if someone committed there who wasn't supposed to. If regular commit review <emphasis>isn't</emphasis> happening, then the project has bigger problems to deal with than the authorization system anyway.",
ch03.xml:1710,"In summary, don't spend too much time fiddling with the version control authorization system, unless you have a specific reason to. It usually won't bring much tangible benefit, and there are advantages to relying on human controls instead.",
ch03.xml:1715,"None of this should be taken to mean that the restrictions themselves are unimportant, of course. It would be bad for a project to encourage people to commit in areas where they're not qualified. Furthermore, in many projects, full (unrestricted) commit access has a special status: it implies voting rights on project-wide questions. This political aspect of commit access is discussed more in <xref linkend=""electorate""/><phrase output=""printed""> in <xref linkend=""social-infrastructure""/></phrase>.",
ch03.xml:1733,Bug Tracker,
ch03.xml:1735,"Bug tracking is a broad topic; various aspects of it are discussed throughout this book. Here I'll try to concentrate mainly on setup and technical considerations, but to get to those, we have to start with a policy question: exactly what kind of information should be kept in a bug tracker?",
ch03.xml:1741,"The term <firstterm>bug tracker</firstterm> is misleading. Bug tracking systems are also frequently used to track new feature requests, one-time tasks, unsolicited patches&mdash;really anything that has distinct beginning and end states, with optional transition states in between, and that accrues information over its lifetime. For this reason, bug trackers are also called <firstterm>issue trackers</firstterm>, <firstterm>defect trackers</firstterm>, <firstterm>artifact trackers</firstterm>, <firstterm>request trackers</firstterm>, <firstterm>trouble ticket systems</firstterm>, etc. See <xref linkend=""bug-trackers""/> for a list of software.",
ch03.xml:1753,"In this book, I'll continue to use ""bug tracker"" for the software that does the tracking, because that's what most people call it, but will use <firstterm>issue</firstterm> to refer to a single item in the bug tracker's database. This allows us to distinguish between the behavior or misbehavior that the user encountered (that is, the bug itself), and the tracker's <emphasis>record</emphasis> of the bug's discovery, diagnosis, and eventual resolution. Keep in mind that although most issues are about actual bugs, issues can be used to track other kinds of tasks too.",
ch03.xml:1763,The classic issue life cycle looks like this:,
ch03.xml:1766,"Someone files the issue. They provide a summary, an initial description (including a reproduction recipe, if applicable; see <xref linkend=""users-to-volunteers""/><phrase output=""printed""> in <xref linkend=""managing-volunteers""/></phrase> for how to encourage good bug reports), and whatever other information the tracker asks for. The person who files the issue may be totally unknown to the project&mdash;bug reports and feature requests are as likely to come from the user community as from the developers.",
ch03.xml:1779,"Once filed, the issue is in what's called an <firstterm>open</firstterm> state. Because no action has been taken yet, some trackers also label it as <firstterm>unverified</firstterm> and/or <firstterm>unstarted</firstterm>. It is not assigned to anyone; or, in some systems, it is assigned to a fake user to represent the lack of real assignation. At this point, it is in a holding area: the issue has been recorded, but not yet integrated into the project's consciousness.",
ch03.xml:1790,"Others read the issue, add comments to it, and perhaps ask the original filer for clarification on some points.",
ch03.xml:1794,"The bug gets <firstterm>reproduced</firstterm>. This may be the most important moment in its life cycle. Although the bug is not actually fixed yet, the fact that someone besides the original filer was able to make it happen proves that it is genuine, and, no less importantly, confirms to the original filer that they've contributed to the project by reporting a real bug.",
ch03.xml:1802,"The bug gets <firstterm>diagnosed</firstterm>: its cause is identified, and if possible, the effort required to fix it is estimated. Make sure these things get recorded in the issue; if the person who diagnosed the bug suddenly has to step away from the project for a while (as can often happen with volunteer developers), someone else should be able to pick up where she left off.",
ch03.xml:1811,"In this stage, or sometimes the previous one, a developer may ""take ownership"" of the issue and <firstterm>assign</firstterm> it to herself (<xref linkend=""delegation-assignment""/><phrase output=""printed""> in <xref linkend=""managing-volunteers""/></phrase> examines the assignment process in more detail). The issue's <firstterm>priority</firstterm> may also be set at this stage. For example, if it is so severe that it should delay the next release, that fact needs to be identified early, and the tracker should have some way of noting it.",
ch03.xml:1824,"The issue gets scheduled for resolution. Scheduling doesn't necessarily mean naming a date by which it will be fixed. Sometimes it just means deciding which future release (not necessarily the next one) the bug should be fixed by, or deciding that it need not block any particular release. Scheduling may also be dispensed with, if the bug is quick to fix.",
ch03.xml:1832,"The bug gets fixed (or the task completed, or the patch applied, or whatever). The change or set of changes that fixed it should be recorded in a comment in the issue, after which the issue is <firstterm>closed</firstterm> and/or marked as <firstterm>resolved</firstterm>.",
ch03.xml:1843,"There are some common variations on this life cycle. Sometimes an issue is closed very soon after being filed, because it turns out not to be a bug at all, but rather a misunderstanding on the part of the user. As a project acquires more users, more and more such invalid issues will come in, and developers will close them with increasingly short-tempered responses. Try to guard against the latter tendency. It does no one any good, as the individual user in each case is not responsible for all the previous invalid issues; the statistical trend is visible only from the developers' point of view, not the user's. (In <xref linkend=""bug-filtering""/><phrase output=""printed""> later in this chapter,</phrase> we'll look at techniques for reducing the number of invalid issues.) Also, if different users are experiencing the same misunderstanding over and over, it might mean that that aspect of the software needs to be redesigned. This sort of pattern is easiest to notice when there is an issue manager monitoring the bug database; see <xref linkend=""issue-manager""/><phrase output=""printed""> in <xref linkend=""managing-volunteers""/></phrase>.",
ch03.xml:1863,"Another common life cycle variation is for the issue to be closed as a <firstterm>duplicate</firstterm> soon after Step 1. A duplicate is when someone files an issue that's already known to the project. Duplicates are not confined to open issues: it's possible for a bug to come back after having been fixed (this is known as a <firstterm>regression</firstterm>), in which case the preferred course is usually to reopen the original issue and close any new reports as duplicates of the original one. The bug tracking system should keep track of this relationship bidirectionally, so that reproduction information in the duplicates is available to the original issue, and vice versa.",
ch03.xml:1875,"A third variation is for the developers to close the issue, thinking they have fixed it, only to have the original reporter reject the fix and reopen it. This is usually because the developers simply don't have access to the environment necessary to reproduce the bug, or because they didn't test the fix using the exact same reproduction recipe as the reporter.",
ch03.xml:1882,"Aside from these variations, there may be other small details of the life cycle that vary depending on the tracking software. But the basic shape is the same, and while the life cycle itself is not specific to open source software, it has implications for how open source projects use their bug trackers.",
ch03.xml:1888,"As Step 1 implies, the tracker is as much a public face of the project as the mailing lists or web pages. Anyone may file an issue, anyone may look at an issue, and anyone may browse the list of currently open issues. It follows that you never know how many people are waiting to see progress on a given issue. While the size and skill of the development community constrains the rate at which issues can be resolved, the project should at least try to acknowledge each issue the moment it appears. Even if the issue lingers for a while, a response encourages the reporter to stay involved, because she feels that a human has registered what she has done (remember that filing an issue usually involves more effort than, say, posting an email). Furthermore, once an issue is seen by a developer, it enters the project's consciousness, in the sense that that developer can be on the lookout for other instances of the issue, can talk about it with other developers, etc.",
ch03.xml:1904,The need for timely reactions implies two things:,
ch03.xml:1908,"The tracker must be connected to a mailing list, such that every change to an issue, including its initial filing, causes a mail to go out describing what happened. This mailing list is usually different from the regular development list, since not all developers may want to receive automated bug mails, but (just as with commit mails) the Reply-to header should be set to the development mailing list.",
ch03.xml:1917,"The form for filing issues should capture the reporter's email address, so she can be contacted for more information. (However, it should not <emphasis>require</emphasis> the reporter's email address, as some people prefer to report issues anonymously. See <xref linkend=""anonymity""/><phrase output=""printed""> later in this chapter</phrase> for more on the importance of anonymity.)",
ch03.xml:1931,Interaction with Mailing Lists,
ch03.xml:1933,"Make sure the bug tracker doesn't turn into a discussion forum. Although it is important to maintain a human presence in the bug tracker, it is not fundamentally suited to real-time discussion. Think of it rather as an archiver, a way to organize facts and references to other discussions, primarily those that take place on mailing lists.",
ch03.xml:1940,"There are two reasons to make this distinction. First, the bug tracker is more cumbersome to use than the mailing lists (or than real-time chat forums, for that matter). This is not because bug trackers have bad user interface design, it's just that their interfaces were designed for capturing and presenting discrete states, not free-flowing discussions. Second, not everyone who should be involved in discussing a given issue is necessarily watching the bug tracker. Part of good issue management (see <xref linkend=""share-management""/><phrase output=""printed""> in <xref linkend=""managing-volunteers""/></phrase>) is to make sure each issue is brought to the right peoples' attention, rather than requiring every developer to monitor all issues. In <xref linkend=""bug-tracker-usage""/><phrase output=""printed""> in <xref linkend=""communications""/>,</phrase> we'll look at ways to make sure people don't accidentally siphon discussions out of appropriate forums and into the bug tracker.",
ch03.xml:1956,"Some bug trackers can monitor mailing lists and automatically log all emails that are about a known issue. Typically they do this by recognizing the issue's identifying number in the subject line of the mail, as part of a special string; developers learn to include these strings in their mails to attract the tracker's notice. The bug tracker may either save the entire email, or (even better) just record a link to the mail in the regular mailing list archive. Either way, this is a very useful feature; if your tracker has it, make sure both to turn it on and to remind people to take advantage of it.",
ch03.xml:1970,Pre-Filtering the Bug Tracker,
ch03.xml:1972,"Most issue databases eventually suffer from the same problem: a crushing load of duplicate or invalid issues filed by well-meaning but inexperienced or ill-informed users. The first step in combatting this trend is usually to put a prominent notice on the front page of the bug tracker, explaining how to tell if a bug is really a bug, how to search to see if it's already been filed, and finally, how to effectively report it if one still thinks it's a new bug.",
ch03.xml:1980,"This will reduce the noise level for a while, but as the number of users increases, the problem will eventually come back. No individual user can be blamed for it. Each one is just trying to contribute to the project's well-being, and even if their first bug report isn't helpful, you still want to encourage them to stay involved and file better issues in the future. In the meantime, though, the project needs to keep the issue database as free of junk as possible.",
ch03.xml:1989,"The two things that will do the most to prevent this problem are: making sure there are people watching the bug tracker who have enough knowledge to close issues as invalid or duplicates the moment they come in, and requiring (or strongly encouraging) users to confirm their bugs with other people before filing them in the tracker.",
ch03.xml:1995,"The first technique seems to be used universally. Even projects with huge issue databases (say, the Debian bug tracker at <ulink url=""http://bugs.debian.org/""></ulink>, which contained 315,929 issues as of this writing) still arrange things so that <emphasis>someone</emphasis> sees each issue that comes in. It may be a different person depending on the category of the issue. For example, the Debian project is a collection of software packages, so Debian automatically routes each issue to the appropriate package maintainers. Of course, users can sometimes misidentify an issue's category, with the result that the issue is sent to the wrong person initially, who may then have to reroute it. However, the important thing is that the burden is still shared&mdash;whether the user guesses right or wrong when filing, issue watching is still distributed more or less evenly among the developers, so each issue is able to receive a timely response.",
ch03.xml:2011,"The second technique is less widespread, probably because it's harder to automate. The essential idea is that every new issue gets ""buddied"" into the database. When a user thinks he's found a problem, he is asked to describe it on one of the mailing lists, or in an IRC channel, and get confirmation from someone that it is indeed a bug. Bringing in that second pair of eyes early can prevent a lot of spurious reports. Sometimes the second party is able to identify that the behavior is not a bug, or is fixed in recent releases. Or she may be familiar with the symptoms from a previous issue, and can prevent a duplicate filing by pointing the user to the older issue. Often it's enough just to ask the user ""Did you search the bug tracker to see if it's already been reported?"" Many people simply don't think of that, yet are happy to do the search once they know someone's <emphasis>expecting</emphasis> them to.",
ch03.xml:2026,"The buddy system can really keep the issue database clean, but it has some disadvantages too. Many people will file solo anyway, either through not seeing, or through disregarding, the instructions to find a buddy for new issues. Thus it is still necessary for volunteers to watch the issue database. Furthermore, because most new reporters don't understand how difficult the task of maintaining the issue database is, it's not fair to chide them too harshly for ignoring the guidelines. Thus the volunteers must be vigilant, and yet exercise restraint in how they bounce unbuddied issues back to their reporters. The goal is to train each reporter to use the buddying system in the future, so that there is an ever-growing pool of people who understand the issue-filtering system. On seeing an unbuddied issue, the ideal steps are:",
ch03.xml:2042,"Immediately respond to the issue, politely thanking the user for filing, but pointing them to the buddying guidelines (which should, of course, be prominently posted on the web site).",
ch03.xml:2048,"If the issue is clearly valid and not a duplicate, approve it anyway, and start it down the normal life cycle. After all, the reporter's now been informed about buddying, so there's no point wasting the work done so far by closing a valid issue.",
ch03.xml:2055,"Otherwise, if the issue is not clearly valid, close it, but ask the reporter to reopen it if they get confirmation from a buddy. When they do, they should put a reference to the confirmation thread (e.g., a URL into the mailing list archives).",
ch03.xml:2063,"Remember that although this system will improve the signal/noise ratio in the issue database over time, it will never completely stop the misfilings. The only way to prevent misfilings entirely is to close off the bug tracker to everyone but developers&mdash;a cure that is almost always worse than the disease. It's better to accept that cleaning out invalid issues will always be part of the project's routine maintenance, and to try to get as many people as possible to help.",
ch03.xml:2072,"See also <xref linkend=""issue-manager""/><phrase output=""printed""> in <xref linkend=""managing-volunteers""/></phrase>.",
ch03.xml:2082,IRC / Real-Time Chat Systems,
ch03.xml:2084,"Many projects offer real-time chat rooms using <firstterm>Internet Relay Chat</firstterm> (<firstterm>IRC</firstterm>), forums where users and developers can ask each other questions and get instant responses. While you <emphasis>can</emphasis> run an IRC server from your own web site, it is generally not worth the hassle. Instead, do what everyone else does: run your IRC channels at Freenode (<ulink url=""http://freenode.net/""></ulink>). Freenode gives you the control you need to administer your project's IRC channels,<footnote><para>There is no requirement or expectation that you donate to Freenode, but if you or your project can afford it, please consider a contribution. They are a tax-exempt charity in the U.S., and they perform a valuable service.</para></footnote> while sparing you the not-insignificant trouble of maintaining an IRC server yourself.",
ch03.xml:2099,"The first thing to do is choose a channel name. The most obvious choice is the name of your project&mdash;if that's available at Freenode, then use it. If not, try to choose something as close to your project's name, and as easy to remember, as possible. Advertise the channel's availabity from your project's web site, so a visitor with a quick question will see it right away. For example, this appears in a prominently placed box at the top of Subversion's home page:",
ch03.xml:2106,"<blockquote> <para><emphasis>If you're using Subversion, we recommend that you join the</emphasis> <literal>users@subversion.tigris.org</literal> <emphasis>mailing list, and read the <ulink url=""http://svnbook.red-bean.com/"">Subversion Book</ulink> and <ulink url=""http://subversion.tigris.org/faq.html"">FAQ</ulink>. You can also ask questions on IRC at</emphasis> <literal>irc.freenode.net</literal> <emphasis>channel</emphasis>&nbsp;<literal>#svn</literal>.</para> </blockquote> <para>Some projects have multiple channels, one per subtopic. For example, one channel for installation problems, another for usage questions, another for development chat, etc. (<xref linkend=""growth""/><phrase output=""printed""> in <xref linkend=""communications""/></phrase> discusses and how to divide into multiple channels). When your project is young, there should only be one channel, with everyone talking together. Later, as the user-to-developer ratio increases, separate channels may become necessary.</para> <para>How will people know all the available channels, let alone which channel to talk in? And when they talk, how will they know what the local conventions are?</para> <para>The answer is to tell them by setting the <firstterm>channel topic</firstterm>.<footnote><para>To set a channel topic, use the <literal>/topic</literal> command. All commands in IRC start with ""<literal>/</literal>"". See <ulink url=""http://www.irchelp.org/""></ulink> if you're not familiar with IRC usage and administration; in particular, <ulink url=""http://www.irchelp.org/irchelp/irctutorial.html""></ulink> is an excellent tutorial.</para></footnote> The channel topic is a brief message each user sees when they first enter the channel. It gives quick guidance to newcomers, and pointers to further information. For example:</para> <screen>
You are now talking on #svn

Topic for #svn is Forum for Subversion user questions, see also
http://subversion.tigris.org/. || Development discussion happens in
#svn-dev. || Please don't paste long transcripts here, instead use
a pastebin site like http://pastebin.ca/. || NEWS: Subversion 1.1.0
is released, see http://svn110.notlong.com/ for details.
</screen> <para>That's terse, but it tells newcomers what they need to know. It says exactly what the channel is for, gives the project home page (in case someone wanders into the channel without having first been to the project web site), mentions a related channel, and gives some guidance about pasting.</para> <sidebar id=""paste-sites""> <title>Paste Sites</title> <para>An IRC channel is a shared space: everyone can see what everyone else is saying. Normally, this is a good thing, as it allows people to jump into a conversation when they think they have something to contribute, and allows spectators to learn by watching. But it becomes problematic when someone has to provide a large quantity of information at once, such as a debugging session transcript, because pasting too many lines of output into the channel will disrupt other conversations.</para> <para>The solution is to use one of the <firstterm>pastebin</firstterm> or <firstterm>pastebot</firstterm> sites. When requesting a large amount of data from someone, ask them not to paste it into the channel, but instead to go to (for example) <ulink url=""http://pastebin.ca/""></ulink>, paste their data into the form there, and tell the resulting new URL to the IRC channel. Anyone can then visit the URL and view the data.</para> <para>There are a number of free paste sites available now, too many for a comprehensive list, but here are some of the ones I've seen used: <ulink url=""http://www.nomorepasting.com/""></ulink>, <ulink url=""http://pastebin.ca/""></ulink>, <ulink url=""http://nopaste.php.cd/""></ulink> <ulink url=""http://rafb.net/paste/""></ulink> <ulink url=""http://sourcepost.sytes.net/""></ulink>, <ulink url=""http://extraball.sunsite.dk/notepad.php""></ulink>, and <ulink url=""http://www.pastebin.com/""></ulink>.</para> </sidebar>",
ch03.xml:2187,Bots,
ch03.xml:2189,"Many technically-oriented IRC channels have a non-human member, a so-called <firstterm>bot</firstterm>, that is capable of storing and regurgitating information in response to specific commands. Typically, the bot is addressed just like any other member of the channel, that is, the commands are delivered by ""speaking to"" the bot. For example:",
ch03.xml:2196,"&lt;kfogel&gt; ayita: learn diff-cmd = http://subversion.tigris.org/faq.html#diff-cmd
&lt;ayita&gt;  Thanks!",
ch03.xml:2198,"That told the bot (who is logged into the channel as ayita) to remember a certain URL as the answer to the query ""diff-cmd"". Now we can address ayita, asking the bot to tell another user about diff-cmd:",
ch03.xml:2203,"&lt;kfogel&gt; ayita: tell jrandom about diff-cmd
&lt;ayita&gt;  jrandom: http://subversion.tigris.org/faq.html#diff-cmd",
ch03.xml:2205,The same thing can be accomplished via a convenient shorthand:,
ch03.xml:2207,"&lt;kfogel&gt; !a jrandom diff-cmd
&lt;ayita&gt;  jrandom: http://subversion.tigris.org/faq.html#diff-cmd",
ch03.xml:2209,"The exact command set and behaviors differ from bot to bot. The above example is with <literal>ayita</literal> (<ulink url=""http://hix.nu/svn-public/alexis/trunk/""></ulink>), of which there is usually an instance running in <literal>#svn</literal> at freenode. Other bots include Dancer (<ulink url=""http://dancer.sourceforge.net/""></ulink>) and Supybot (<ulink url=""http://supybot.com/""></ulink>). Note that no special server privileges are required to run a bot. A bot is a client program; anyone can set one up and direct it to listen to a particular server/channel.",
ch03.xml:2220,"If your channel tends to get the same questions over and over, I highly recommend setting up a bot. Only a small percentage of channel users will acquire the expertise needed to manipulate the bot, but those users will answer a disproportionately high percentage of questions, because the bot enables them to respond so much more efficiently.",
ch03.xml:2230,Archiving IRC,
ch03.xml:2232,"Although it is possible to archive everything that happens in an IRC channel, it's not necessarily expected. IRC conversations may be nominally public, but many people think of them as informal, semi-private conversations. Users may be careless with grammar, and often express opinions (for example, about other software or other programmers) that they wouldn't want preserved forever in an online archive.",
ch03.xml:2240,"Of course, there will sometimes be <emphasis>excerpts</emphasis> that should be preserved, and that's fine. Most IRC clients can log a conversation to a file at the user's request, or failing that, one can always just cut and paste the conversation from IRC into a more permanent forum (most often the bug tracker). But indiscriminate logging may make some users uneasy. If you do archive everything, make sure you state so clearly in the channel topic, and give a URL to the archive.",
ch03.xml:2255,RSS Feeds,
ch03.xml:2257,"<firstterm>RSS</firstterm> (Really Simple Syndication) is a mechanism for distributing meta-data-rich news summaries to ""subscribers"", that is, people who have indicated an interest in receiving those summaries. A given RSS source is usually called a <firstterm>feed</firstterm>, and the user's subscription interface is called a <firstterm>feed reader</firstterm> or <firstterm>feed aggregator</firstterm>. <ulink url=""http://www.rssbandit.org/"">RSS Bandit</ulink> and the eponymous <ulink url=""http://www.feedreader.com/"">Feedreader</ulink> are two open source RSS readers, for example.",
ch03.xml:2268,"There is not space here for a detailed technical explanation of RSS<footnote><para>See <ulink url=""http://www.xml.com/pub/a/2002/12/18/dive-into-xml.html""></ulink> for that.</para></footnote>, but you should be aware of two main things. First, the feed reading software is chosen by the subscriber and is <emphasis>the same</emphasis> for all the feeds that subscriber monitors&nbsp;&mdash;&nbsp;in fact, this is the major selling point of RSS: that the subscriber chooses one interface to use for all their feeds, so each feed can concentrate just on delivering content. Second, RSS is now ubiquitous, so much so that most people who use it don't even know they're using it. To the world at large, RSS looks like a little button on a web page, with a label saying ""Subscribe to this site"" or ""News feed"". You click on the button, and from then on, your feed reader (which may well be an applet embedded in your home page) automatically updates whenever there's news from the site.",
ch03.xml:2285,"This means that your open source project should probably offer an RSS feed (note that many of the canned hosting sites&nbsp;&mdash;&nbsp;see <xref linkend=""canned-hosting""/>&nbsp;&mdash;&nbsp;offer it right out of the box). Be careful not to post so many news items each day that subscribers can't separate the wheat from the chaff. If there are too many news events, people will just ignore the feed, or even unsubscribe in exasperation. Ideally, a project would offer separate feeds, one for big announcements, another following (say) events in the issue tracker, another for each mailing list, etc. In practice, this is hard to do well: it can result in interface confusion both for visitors to the project's web site and for the administrators. But at a minimum, the project should offer one RSS feed on the front page, for sending out major announcements such as releases and security alerts.",
ch03.xml:2299,"Credit where credit is due: this section wasn't in the first published edition of the book, but Brian Aker's blog entry <ulink url=""http://krow.livejournal.com/564980.html"">""Release Criteria, Open Source, Thoughts On...""</ulink> reminded me of the usefulness of RSS feeds for open source projects.",
ch03.xml:2310,Wikis,
ch03.xml:2312,"A <firstterm>wiki</firstterm> is a web site that allows any visitor to edit or extend its content; the term ""wiki"" (from a Hawaiian word meaning ""quick"" or ""super-fast"") is also used to refer to the software that enables such editing. Wikis were invented in 1995, but their popularity has really started to take off since 2000 or 2001, boosted partly by the success of Wikipedia (<ulink url=""http://www.wikipedia.org/""></ulink>), a wiki-based free-content encyclopedia. Think of a wiki as falling somewhere between IRC and web pages: wikis don't happen in realtime, so people get a chance to ponder and polish their contributions, but they are also very easy to add to, involving less interface overhead than editing a regular web page.",
ch03.xml:2324,"Wikis are not yet standard equipment for open source projects, but they probably will be soon. As they are relatively new technology, and people are still experimenting with different ways of using them, I will just offer a few words of caution here&mdash;at this stage, it's easier to analyze misuses of wikis than to analyze their successes.",
ch03.xml:2331,"If you decide to run a wiki, put a lot of effort into having a clear page organization and pleasing visual layout, so that visitors (i.e., potential editors) will instinctively know how to fit in their contributions. Equally important, post those standards on the wiki itself, so people have somewhere to go for guidance. Too often, wiki administrators fall victim to the fantasy that because hordes of visitors are individually adding high quality content to the site, the sum of all these contributions must therefore also be of high quality. That's not how web sites work. Each individual page or paragraph may be good when considered by itself, but it will not be good if embedded in a disorganized or confusing whole. Too often, wikis suffer from:",
ch03.xml:2346,"<emphasis role=""bold"">Lack of navigational principles.</emphasis> A well-organized web site makes visitors feel like they know where they are at any time. For example, if the pages are well-designed, people can intuitively tell the difference between a ""table of contents"" region and a ""content"" region. Contributors to a wiki will respect such differences too, but only if the differences are present to begin with.",
ch03.xml:2355,"<emphasis role=""bold"">Duplication of information.</emphasis> Wikis frequently end up with different pages saying similar things, because the individual contributors did not notice the duplications. This can be partly a consequence of the lack of navigational principles noted above, in that people may not find the duplicate content if it is not where they expect it to be.",
ch03.xml:2364,"<emphasis role=""bold"">Inconsistent target audience.</emphasis> To some degree this problem is inevitable when there are so many authors, but it can be lessened if there are written guidelines about how to create new content. It also helps to aggressively edit new contributions at the beginning, as an example, so that the standards start to sink in.",
ch03.xml:2373,"The common solution to all these problems is the same: have editorial standards, and demonstrate them not only by posting them, but by editing pages to adhere to them. In general, wikis will amplify any failings in their original material, since contributors imitate whatever patterns they see in front of them. Don't just set up the wiki and hope everything falls into place. You must also prime it with well-written content, so people have a template to follow.",
ch03.xml:2382,"The shining example of a well-run wiki is Wikipedia, though this may be partly because the content (encyclopedia entries) is naturally well-suited to the wiki format. But if you examine Wikipedia closely, you'll see that its administrators laid a <emphasis>very</emphasis> thorough foundation for cooperation. There is extensive documentation on how to write new entries, how to maintain an appropriate point of view, what sorts of edits to make, what edits to avoid, a dispute resolution process for contested edits (involving several stages, including eventual arbitration), and so forth. They also have authorization controls, so that if a page is the target of repeated inappropriate edits, they can lock it down until the problem is resolved. In other words, they didn't just throw some templates onto a web site and hope for the best. Wikipedia works because its founders thought carefully about how to get thousands of strangers to tailor their writing to a common vision. While you may not need the same level of preparedness to run a wiki for a free software project, the spirit is worth emulating.",
ch03.xml:2401,"For more information about wikis, see <ulink url=""http://en.wikipedia.org/wiki/Wiki""></ulink>. Also, the first wiki remains alive and well, and contains a lot of discussion about running wikis: see <ulink url=""http://www.c2.com/cgi/wiki?WelcomeVisitors""></ulink>, <ulink url=""http://www.c2.com/cgi/wiki?WhyWikiWorks""></ulink>, and <ulink url=""http://www.c2.com/cgi/wiki?WhyWikiWorksNot""></ulink> for various points of view.",
ch03.xml:2413,Web Site,
ch03.xml:2415,"There is not much to say about setting up the project web site from a technical point of view: setting up a web server and writing web pages are fairly simple tasks, and most of the important things to say about layout and arrangement were covered in the previous chapter. The web site's main function is to present a clear and welcoming overview of the project, and to bind together the other tools (the version control system, bug tracker, etc.). If you don't have the expertise to set up a web server yourself, it's usually not hard to find someone who does and is willing to help out. Nonetheless, to save time and effort, people often prefer to use one of the canned hosting sites.",
ch03.xml:2428,Canned Hosting,
ch03.xml:2430,"There are two main advantages to using a canned site. The first is server capacity and bandwidth: their servers are beefy boxes sitting on really fat pipes. No matter how successful your project gets, you're not going to run out of disk space or swamp the network connection. The second advantage is simplicity. They have already chosen a bug tracker, a version control system, a mailing list manager, an archiver, and everything else you need to run a site. They've configured the tools, and are taking care of backups for all the data stored in the tools. You don't need to make many decisions. All you have to do is fill in a form, press a button, and suddenly you've got a project web site.",
ch03.xml:2442,"These are pretty significant benefits. The disadvantage, of course, is that you must accept <emphasis>their</emphasis> choices and configurations, even if something different would be better for your project. Usually canned sites are adjustable within certain narrow parameters, but you will never get the fine-grained control you would have if you set up the site yourself and had full administrative access to the server.",
ch03.xml:2450,"A perfect example of this is the handling of generated files. Certain project web pages may be generated files&mdash;for example, there are systems for keeping FAQ data in an easy-to-edit master format, from which HTML, PDF, and other presentation formats can be generated. As explained in <xref linkend=""version-everything""/><phrase output=""printed""> earlier in this chapter</phrase>, you wouldn't want to version the generated formats, only the master file. But when your web site is hosted on someone else's server, it may be impossible to set up a custom hook to regenerate the online HTML version of the FAQ whenever the master file is changed. The only workaround is to version the generated formats too, so that they show up on the web site.",
ch03.xml:2464,"There can be larger consequences as well. You may not have as much control over presentation as you would wish. Some of the canned hosting sites allow you to customize your web pages, but the site's default layout usually ends up showing through in various awkward ways. For example, some projects that host themselves at SourceForge have completely customized home pages, but still point developers to their ""SourceForge page"" for more information. The SourceForge page is what would be the project's home page, had the project not used a custom home page. The SourceForge page has links to the bug tracker, the CVS repository, downloads, etc. Unfortunately, a SourceForge page also contains a great deal of extraneous noise. The top is a banner ad, often an animated image. The left side is a vertical arrangement of links of little relevance to someone interested in the project. The right side is often another advertisement. Only the center of the page is devoted to truly project-specific material, and even that is arranged in a confusing way that often makes visitors unsure of what to click on next.",
ch03.xml:2482,"Behind every individual aspect of SourceForge's design, there is no doubt a good reason&mdash;good from SourceForge's point of view, such as the advertisements. But from an individual project's point of view, the result can be a less-than-ideal web page. I don't mean to pick on SourceForge; similar concerns apply to many of the canned hosting sites. The point is that there's a tradeoff. You get relief from the technical burdens of running a project site, but only at the price of accepting someone else's way of running it.",
ch03.xml:2491,"Only you can decide whether canned hosting is best for your project. If you choose a canned site, leave open the option of switching to your own servers later, by using a custom domain name for the project's ""home address"". You can forward the URL to the canned site, or have a fully customized home page at the public URL and hand users off to the canned site for sophisticated functionality. Just make sure to arrange things such that if you later decide to use a different hosting solution, the project's address doesn't need to change.",
ch03.xml:2502,Choosing a canned hosting site,
ch03.xml:2504,"The largest and most well-known hosting site is <ulink url=""http://www.sourceforge.net/"">SourceForge</ulink>. Two other sites providing the same or similar services are <ulink url=""http://savannah.gnu.org/"">savannah.gnu.org</ulink> and <ulink url=""http://www.berlios.de/"">BerliOS.de</ulink>. A few organizations, such as the <ulink url=""http://www.apache.org/"">Apache Software Foundation</ulink> and <ulink url=""http://www.tigris.org/"">Tigris.org</ulink><footnote><para>Disclaimer: I am employed by <ulink url=""http://www.collab.net/"">CollabNet</ulink>, which sponsors Tigris.org, and I use Tigris regularly.</para></footnote>, give free hosting to open source projects that fit well with their missions and their community of existing projects.",
ch03.xml:2518,"Haggen So did a thorough evaluation of various canned hosting sites, as part of the research for his Ph.D. thesis, <citetitle>Construction of an Evaluation Model for Free/Open Source Project Hosting (FOSPHost) sites</citetitle>. The results are at <ulink url=""http://www.ibiblio.org/fosphost/""></ulink>, and see especially the very readable comparison chart at <ulink url=""http://www.ibiblio.org/fosphost/exhost.htm""></ulink>.",
ch03.xml:2528,Anonymity and involvement,
ch03.xml:2530,"A problem that is not strictly limited to the canned sites, but is most often found there, is the abuse of user login functionality. The functionality itself is simple enough: the site allows each visitor to register herself with a username and password. From then on it keeps a profile for that user, and project administrators can assign the user certain permissions, for example, the right to commit to the repository.",
ch03.xml:2538,"This can be extremely useful, and in fact it's one of the prime advantages of canned hosting. The problem is that sometimes user login ends up being required for tasks that ought to be permitted to unregistered visitors, specifically the ability to file issues in the bug tracker, and to comment on existing issues. By requiring a logged-in username for such actions, the project raises the involvement bar for what should be quick, convenient tasks. Of course, one wants to be able to contact someone who's entered data into the issue tracker, but having a field where she can enter her email address (if she wants to) is sufficient. If a new user spots a bug and wants to report it, she'll only be annoyed at having to fill out an account creation form before she can enter the bug into the tracker. She may simply decide not to file the bug at all.",
ch03.xml:2552,"The advantages of user management generally outweigh the disadvantages. But if you can choose which actions can be done anonymously, make sure not only that <emphasis>all</emphasis> read-only actions are permitted to non-logged-in visitors, but also some data entry actions, especially in the bug tracker and, if you have them, wiki pages.",
