<chapter id="communications">

<title
>Comunicacións</title>

<simplesect>

<para
>A habilidade de escribir dun xeito claro quizais sexa a capacidade máis importante que unha persoa poida ter nun entorno de software libre. A longo prazo ten maior importancia que o talento programando. Un gran programador con habilidades comunicativas pobres só pode facer unha cousa á vez, e mesmo poder ter problemas para convencer a outros para que lle presten atención. Mais un programador mediocre con boas capacidades comunicativas pode coordinar e persuadir unha morea de xente para que faga distintas cousas, e dese xeito ter un efecto significativo na dirección do proxecto e no seu ímpeto.</para>

<para
>Non parece haber moita correlación, en ningunha dirección, entre a capacidade de escribir bo código e mais a habilidade de comunicarse co resto dos compañeiros humanos. Si que hai correlación entre programar ben e describir tecnicamente ben as cousas, mais describir tecnicamente ben as cousas é unha parte ínfima das comunicacións nun proxecto. Moito máis importante é a capacidade de empatizar coa audiencia, de ver os correos e comentarios propios como os vería outra persoa, e facer que os demais vexan os seus propios correos cunha obxectividade similar. Igualmente importante é notificares cando un método de comunicacións non está funcionando ben, quizais porque non escale ben co incremento do número de usuarios, e tomáreste o tempo preciso para faceres algo ao respecto.</para>

<para
>Todo isto na teoría é obvio. O que o fai difícil na práctica é que son moi diversas tanto no público como nos mecanismos de comunicación. Un pensamento debería ser expresado nunha mensaxe na lista de correo, como anotación no seguimento de erros, ou como comentario no código? Cando se responde unha pregunta nun foro público, canto debemos supor que sabe o lector, dado que o «lector» non vai ser só o que responda a pregunta en primeiro lugar, senón que tamén serán aqueles que vexan a túa resposta? Canto deben estar os programadores en contacto constructivo cos usuarios, sen ser inundados por solicitudes de funcións, informes de erros e charla xeral? Cómo avisas cando un medio alcanzou o límite da súa capacidade e que fas?</para>

<para
>As solucións a estes problemas normalmente son parciais, porque unha solución particular convertirarse en obsoleta cando medre o proxecto ou se dean cambios na estrutura deste. A miúdo tamén están ad hoc, porque se improvisan respostas a situacións dinámicas. Todos os participantes teñen que ser conscientes de cando e como as comunicacións poden chegar a estancarse e estar involucradas nas solucións. Axudar á xente a facer isto é unha grande parte de xestionar un proxecto fonte aberto. As seccións que siguen a continuación discuten sobre como conducir as túas propias comunicacións e como facer que os mecanismos de comunicación sexan unha prioridade para todos os que se atopan no proxecto.<footnote
><para
>Sobre este tema tense realizado algunha investigación interesante; por exemplo, o paper <citetitle
>Group Awareness in Distributed Software Development</citetitle
> de Gutwin, Penner e Schneider. Esta publicación estivo online por un tempo, logo non dispoñible e de novo online en <ulink url="http://www.st.cs.uni-sb.de/edu/empirical-se/2006/PDFs/gutwin04.pdf"
></ulink
>. Polo tanto usa ese enlace primeiro, mais cecáis terás que usar un buscador se o moven de novo. </para
></footnote
></para>

</simplesect>


<!-- ======================== SECTION ============================== -->
<sect1 id="you-are-what-you-write">
<title
>Es o que escribes</title>

<para
>Considera que a única cousa que todo o mundo sabe de ti en Internet virá polo que escribes o que os demais escriben sobre ti. Pode que sexas unha persoa brillante, perceptiva e carismática, pero se os teus emails son demasiado extensos e non teñen estrutura, a xente asumirá que ti tamén es así. Ou quizais si que es unha persoa que fala de máis e pouco estruturada, pero ninguén ten por que sabelo se as túas mensaxes son lúcidas e informativas.</para>

<para
>Prestarlle atención ao que escribes paga a pena. O hacker Jim Blandy de software libre a longo prazo contaba a seguinte historia:</para>

<blockquote>
  <para
>En 1993 estaba traballando para a Free Software Foundation e estabamos probando a versión 19 of GNU Emacs. Faciamos unha versión beta cada semana ou así, e a xente tiña que probala e mandarnos reportes de erros. Había un tipo que ninguén de nós coñecera en persoa pero que facía un gran traballo: os seus informes de erros eran sempre moi claros e contaba sempre directamente o problema, e cando nos achegaba el un arranxo, case sempre estaba no certo. Era moi bo.</para>

  <para
>Agora, antes de que a Free Software Foundation puidera usar un código escrito por outra persoa, tiñamos que facer que firmasen algúns documentos legais para asinarlle o copyright a ese código para a FSF. Tomar un código dun descoñecido e deixalo é un indicio de catástrofe legal.</para>

  <para
>Así que lle enviei ao tipo os formularios dicíndolle «precisamos ter listo este papelame, asina este documento, este que o asine o teu xefe e despois podemos comezar a pagarche. Moitas grazas».</para>

  <para
>Entón respondeume «non teño xefe». </para>

  <para
>Así que escribinlle «Dacordo, non te preocupes. Consegue a firma da universidade e será suficiente».</para>

  <para
>Ao cabo dun momento, respondeume dicindo «É que en realidade… Teño trece anos e vivo con meus pais».</para>
</blockquote>

<para
>Como ese rapaz non escribía como alguén de trece anos, ninguén supuña que os tiña. A continuación temos algunhas formas para facer que a túa escrita cree unha boa impresión tamén.</para>

<!-- ======================== subsection ============================== -->
<sect2 id="structure-and-formatting">
<title
>Estrutura e formato</title>

<para
>Non caias no erro de escribir todo coma se fose unha mensaxe ao móbil. Escribe frases completas, coa primeira letra de cada unha delas en maiúscula, e utiliza as parénteses onde sexan necesarias. Isto é o máis importante na escrita de correos ou doutras redaccións. No Internet Relay Chat ou noutros foros deste tipo, xeralmente non é un erro esquecer as maiúsculas, utilizar contraccións ou expresións comúns… O que debes ter en conta é non trasladar estes hábitos a contornos formais e foros máis persistentes. Os correos, os documentos, os reportes de erros e outras formas de escrita están destinados a durar para sempre, así que deberían ser escritos utilizando a gramática e a ortografía estándares, e ter unha estrutura narrativa coherente. Isto non é así non porque non sexa bo seguir as normas arbitrarias, senón porque estas normas non son arbitrarias: evolucionan á forma do presente porque fan que os textos sexan máis fáciles de ler, e deberías seguir isto por esta razón. É desexable que o texto sexa fácil de ler non só porque significa que a xente entenderá o que escribes, senón porque fará que parezas o tipo de persoa que toma o seu tempo para comunicarse claramente; é dicir, alguén a quen paga a pena prestar atención.</para>

<para
>Para os correos, en particular, os expertos, os programadores, sentaron unha serie de convencións:</para>

<para
>Envía só textos sen formato; nin HTML, nin textos enriquecidos ou outros formatos que poidan ser pouco claros para os lectores de correos. Dálles formato ás túas liñas sobre 72 columnas. Non excedas as 80 columnas, que se converteron no estándar de largo (pode que algunha xente utilice terminais máis largos, pero ninguén utilizará terminais máis estreitos). Se escribes as túas liñas en menos de 80 columnas, deixarás espazo para as citas que se engaden nas respostas, sen que haxa que reaxustar o texto.</para>

<para
>Utiliza quebras de liñas reais. Algúns servizos de correo axustan o texto de forma errada, de forma que cando estás compoñendo un correo electrónico, visualízanse quebras de liña que en realidade non existen. Cando se envía o correo, pode que non teña quebras de liña que pensabas que tiña, e axustarase mal nas pantallas dos demais. Se pode que o teu servizo de correo use quebras de liña falsas, busca un configuración axeitada coa que poidas mostrar as quebras de liña verdadeiras tal e como ti as compós. </para>

<para
>Cando inclúas saídas de pantalla, fragmentos de código, ou outro texto preformatado, compénsao de forma que mesmo un ollo vago poida ver claramente os límites entre a túa prosa e o material que citas. (Nunca pensei escribir este consello ao comezar este libro, pero ultimamente, nun número extenso de listas de correo fonte abertas, vin cantidade de mesturas de textos de distintas fontes sen que quedase claro cal era cal. O efecto é frustrante. Fai que as súas mensaxes sexan difíciles de entender, e francamente, fai que esa xente pareza desorganizada). </para>

<para
>Cando cites o correo doutra persoa, insire as túas respostas onde sexa máis apropiado; en distintos lugares se é necesario, e corta as partes do correo que non fagan falta. Se escribes un comentario rápido que responde ao correo en conxunto, non está mal un top-post (isto é, situar a túa resposta sobre o texto citado do seu correo), doutra forma, deberías citar a parte relevante do texto orixinal, seguido da túa resposta. </para>

<para
>Constrúe as liñas do asunto dos novos correos coidadosamente. É a liña máis importante do teu correo, porque permite que todas as persoas do proxecto decidan se queren ler máis ou non. O software de lectura moderno organiza grupos de mensaxes relacionados en fíos, que poden estar definidos non só polo asunto común, senón por outras cabeceiras (que normalmente non se mostran). É lóxico que se un fío comeza a desembocar nun novo tema, podes (e deberías) axustar o asunto de acordo coa resposta. A integridade dos fíos conservarase, debido aos outros encabezamentos, pero o novo asunto axudaralle á xente a ter unha visión xeral do fío agora que o tema foi desviado. Así, se é que queres comezar un novo tema, faino cun novo correo, non respondendo un que xa existe cambiándolle o asunto, senón, o teu correo estará clasificado no mesmo fío ao que respondes, e fará que a xente crea que trata sobre o mesmo, cando non é así. De novo, a consecuencia non só será a perda de tempo, senón que afectará levemente á túa credibilidade como persoa con habilidade en utilizar ferramentas de comunicación.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="writing-content">
<title
>Contido</title>

<para
>Os correos cun formato apropiado captan a atención do lector, pero é o contido a que a mantén. Non hai normas fixas que poidan garantir un bo contido, claro está, pero existen algúns principios que o fan máis probable.</para>

<para
>Facilítalles a cousa aos lectores. Hai un montón de datos en cada proxecto fonte, e o lector non pode esperar que todo lle sexa familiar; de feito, non pode esperar saber como lle pode chegar a ser familiar. Dentro do posible, as túas mensaxes deberían proporcionarlle información ao lector da forma máis conveniente. Pasar dous minutos extra para investigar a URL para un fío particular nos arquivos da lista de correo para aforrarlle o traballo ao teu lector, paga a pena. Se tes que pasar de cinco a dez minutos resumindo a conclusión dun fío complexo para darlle á xente un contexto e que así entendan a túa mensaxe, entón faino. Pensa desta forma: canto máis éxito teña o proxecto, maior será o número de lectores en calquera foro. Se cada mensaxe que mandas é vista por n persoas, entón canto máis incremente n, máis pagará a pena calquera esforzo para aforrarlles o traballo a esa xente. E cando a xente ve que te estás impoñendo isto, traballarán para igualar as súas propias mensaxes. O resultado é, idealmente, un aumento na eficiencia mundial do proxecto: cando hai que elixir entre n persoas facendo un esforzo e unha persoa facéndoo, pois o mellor para o proxecto é este último caso.</para>

<para
>Non utilices hipérboles. É común e esaxerar nas mensaxes en Internet. Por exemplo, pode que a unha persoa que envía un informe de erros  non lle chame suficiente a atención, así que o describirá de forma seria e como un problema crítico que o prevén (e aos seus amigos/compañeiros de traballo/curmáns) de utilizar o software produtivamente, cando en realidade non é máis ca un problema leve. Esaxerar non se limita aos usuarios; os programadores fan o mesmo acotío nos os debates técnicos, particularmente cando discuten sobre gusto máis ca sobre corrección:</para>

  <blockquote>
     <para
>"Doing it that way would make the code totally unreadable. It'd be a maintenance nightmare, compared to J. Random's proposal..."</para>
  </blockquote>

<para
>The same sentiment actually becomes <emphasis
>stronger</emphasis
> when phrased less sharply:</para>

  <blockquote>
     <para
>"That works, but it's less than ideal in terms of readability and maintainability, I think. J. Random's proposal avoids those problems because it..."</para>
  </blockquote>

<para
>Non seredes quen de desfacervos das hipérboles completamente, e, en xeral, non é necesario facelo. Comparado con outras formas de erros de comunicación, a hipérbole non é moi grave; prexudica só ao que escribe a mensaxe. Os receptores poden compensala, mais o emisor perde cada vez máis credibilidade. Polo tanto, polo ben da túa influencia no proxecto, tenta tirar cara a moderación. Desa forma, cando si que precises recalcar algo, a xente tomarate en serio.</para>

<para
>Edita dúas veces. Le calquera mensaxe que ocupe máis de medio parágrafo de arriba a abaixo antes de envialo, mesmo despois de lelo unha primeira vez. Este consello élles familiar a aqueles que tiveron clase de redacción, pero é que especialmente importante na discusión online. Como o proceso da redacción online tende a ser altamente descontinuo (no curso no que escribes unha mensaxe pode que teñas que volver e ler outras mensaxes, visitar páxinas e escribir un comando para capturar unha saída de depuración, entre outras cousas), é especialmente sinxelo perder o fío. As mensaxes compostas de forma descontinua e que non se revisaron antes de envialas, son recoñecidas moitas veces, para o desgusto (ou polo menos é o que se espera) dos seus autores. Toma o tempo preciso para revisar o que envías. Canto máis xuntas estean as túas mensaxes estruturalmente, máis serán lidas.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="writing-tone">
<title
>Tono</title>

<para
>Despois de escribir milleiros de mesaxes, o teu estilo converterase en cada vez máis seco. Isto parece se-la norma na maioría dos foros técnicos, e non hai nada malo en que así sexa. Un punto de brevedade e rudeza que sería inaceptable nas iteracións sociais cotias é a norma para os hackers do software libre. Poño a continuación algunhas respostas que obtiven nunha rolda de correo sobre xestores libres de contidos, van entrecomilladas:</para>

<screen
>Podes elaborar máis exactamente qué problemas estás sufrindo?

Tamén:

Qué versión de Slash usas? Non puiden obtelo da mesaxe orixinal.

Cómo tes construido o código do apache/mod_perl?

Probaches o parche para Apache 2.0 que foi publicado en slashcode.com?

-- Shane
\n
</screen>

<para
>Iso é sequedade! Sen un saúdo previo, sen firma máis alá do seu nome e o mesaxe mesmo sendo únicamente unha serie de preguntas tan compactas como sexa posible. Cada pregunta en si mesma era unha crítica implícita ó meu orixinal mesaxe. A pesar disto, alegroume recibir a mensaxe de Shane, e non tomei a resposta como un signo de rudeza, senón de que era unha persoa ocupada. O mero feito de que me estivese preguntando, en vez de ignora-la miña mensaxe, quería dicir que estaba disposto a dedicar un pouco do seu tempo no problema.</para>

<para
>Reaccionarían todo tipo de persoas positivamente a este correo? Non necesariamente; dependerá da persoa e do contexto. Por exemplo, si alguén ten posteado recoñecendo que se equivocou (cecáis escribiu un trozo de código con algún erro) e sabes por experiencias anteriores que esta persoa tende a ser un pouco insegura no código que envía, é posible que, aínda que escribas unha resposta lacónica, tamén desexes poñer algo que a faga sentir mellor. A resposta pode ser breve, un análise enxeñeril da situación, tan concisa como desexes. Pero ó final, remata deixando claro que a concisión non se debe tomar como un signo de rudeza. Por exemplo, si tes escrito un consello de cómo debe resolve-lo bug, podes asina-lo correo cun "Boa sorte, &lt;o teu nome aquí&lt;" para indicar que lle esperas o mellor dun modo positivo. Un emoticono colocado de modo estratéxico pode ser tamén suficiente.</para>

<para
>Pode parecer extraño poñer os sentementos dos participantes ó mesmo nivel que a propia superficie do que escribe, pero debemos recoñecer que os sentementos afectan á produtividade. Os sentementos son importantes por outras razóns tamén, pero incluso levándoo ó argumentario puramente utilitarista, é posible observar que xente infeliz escribe peor e menos software. Porén, dada a restrinxida natureza dos medios electrónicos, non é sinxelo habitualmente saber cómo se está a sentir unha persoa. Terás que facer unha estimación basándote en a) cómo a maioría da xente se sentiría nesa situación, e b) qué sabes desta persoa por pasadas iteracións con ela. Algunha xente prefire facelo doutro modo, e tratar con todo o mundo sen entrar no terreo das emocións; que si unha persoa non di claramente cómo se sinte, un non ten dereito a tratala como si o supese. Non estou dacordo. Por un par de razóns. Primeiro, a xente non se comporta dese modo na vida offline, entón por qué debería facelo online? A seungda é que, debido a que a maioría das iteraccións teñen lugar en foros públicos, a xente tende a restrinxir máis o ámbito das emocións que en privado. Por ser máis concreto, a xente está máis disposta a expresar emocións dirixidas a outros, como gratitude ou indignación, pero non as internas, como inseguridade ou orgullo. A pesar disto, os seres humás traballan mellor cando eles saben que os outros se preocupan por cómo están. Prestando atención ós pequenos detalles, podes adiviñar o que ocorre a maioría das veces, e motivar á xente para que se involucre en un grado maior do que faría doutro modo.</para>

<para
>Dende logo, non pretendo dicir que o teu rol sexa de psicoterapeuta, axudando a todo o mundo e sendo consciente en todo momento dos seus sentementos. Mais prestando atención ós patróns de comportamento a longo plazo, poderás obter unha imaxe mental deles como individuos incluso si endexamáis os tes visto cara a cara. Sendo precavido do teu propio tono ó escribir as mensaxes, podes ter unha cantidade incribe de influencia sobre os sentementos dos outros, para maior beneficio do proxecto.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="rudeness">
<title
>Recoñece-la rudeza</title>

<para
>Unha das características definitorias da cultura do software libre é a noción do que é rudeza e do que non. Aínda que as convencións descritas a continuación non son únicas no mundo do software libre, nen sequera únicas do mundo do software en xeral &mdash; serán familiares a calquera que traballe no ámbito das matemáticas, ciencias duras ou enxeñerías&mdash; o mundo do software libre, coas súas fronteiras porosas e constante fluxo de xente nova, é un ambiente onde estas convencións van a ser vistas por xente non familiarizadas con elas.</para>

<para
>Empecemos coas convencións do que <emphasis
>non</emphasis
> é rudeza:</para>

<para
>Críticas técnicas, aínda cando sexan directas e sen tacto, non é rudeza. Pode incluso ser visto como un eloxio: implícitamente, o crítico está dicindo que se está tomando en serio o que dis, e vale a pena dedicarlle algún tempo. É dicir, o mellor tería sido simplemente ignorar esa mensaxe, tomarse un tempo para criticalo ten o seu punto de eloxio (a menos que a crítica se convirta nun ataque <foreignphrase
>ad hominen</foreignphrase
> ou algún outro modo de rudeza, dende logo).</para>

<para
>Preguntas desprovistas de todo adorno, directas ó grano, tales como as anteriores de Shane, tampouco poden considerarse rudas. Preguntas que noutros contextos poden parecer frías, retóricas, ou incluso burlescas, habitualmente son formuladas seriamente, e non teñen maior intención que extraer información o máis rápido posible. A famosa frase de "está o seu ordenador encendido?" é un exemplo clásico desto. A persoa que traballa en soporte técnico precisa saber si a computadora está accesa, e logo dos primeiros días de traballo, está cando de engadir previamente á súa pregunta educados acompañamentos como "desculpe vostede, vou a facerlle unhas preguntas moi sinxelas para descartar certas posibilidades. Algunhas delas poden parecer moi básicas, mais teña un pouco de paciencia...". Nese momento, xa non lle preocupan as frases de recheo e vai directamente ó esencial. Preguntas dese estilo son realizadas todo o tempo nas roldas de correo do movemento do software libre. Non pretenden insultar á persoa que enviou a mensaxe, senón descartar as máis obvias (e cecáis máis comúns) explicacións. Os que comprendan esta lóxica e reaccionen dacordo con ela están gañando puntos respecto a aqueles que non. Aínda que a estos últimos tampouco se lles pode reprochar a súa actitude. O conflito reside únicamente nun choque de culturas, non no erro de ninguén. Dun modo amigable debes comentar que a pregunta (ou crítica) non tiña significados ocultos, só desexaba obter a información o máis rápido posible.</para>

<para
>Entón ... qué é rudeza?</para>

<para
>Polo mesmo principio baixo o cal unha crítica técnica detallada é un modo de eloxio, fornecer unha crítica mala pode ser considerado unha certa clase de insulto. Non quero dicir ignorar a aportación de alguén, sexa ésta unha proposta, cambio no código, petición de novas funcionalidades, etc. A xente asumirá que non tes tempo para dicir nada. Mais si reaccionas con algunha resposta, non escatimes: tómate o tempo necesario para analizar as cousas, fornece exemplos concretos cando sexa apropiado, investiga nos arquivos para buscar post relacionados no pasado, etc. Ou se non tes tempo para poñer esa clase de esforzo, pero escribes unha breve resposta, entón comeza a túa mensaxe dicindo algo como "creo que existe algún comentario previo sobre isto, mais non tiven tempo a buscalo, síntoo". O principal consiste en recoñece-la existencia dunha norma cultural, cumplíndoa ou recoñecendo que esta vez non se puido cumplir. Calquera que sexa a opción escollida, a norma é fortaleida. Non aterse á norma implícita, e ó mesmo tempo non dicir por qué, é como dicir que o asunto (e esos participando nel) non valen o teu tempo. Mellor amosar que o teu tempo é valioso sendo seco que vago.</para>

<para
>Existen outras moitas formas de rudeza, obviamente. Mais a maioría delas non son específicas do mundo do software libre e o propio sentido común é unha guía máis que suficiente para evitala. Podes botarlle un vistazo ó seguinte enlace <xref linkend="prevent-rudeness"/><phrase output="printed"
> in <xref linkend="getting-started"/></phrase
>, se aínda non o tes feito.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="face">
<title
>Caras</title>

<para
>Hai unha rexión do cerebro humano diseñada específicamente para recoñecer caras. Coñécese informalmente como "área de recoñemento de caras" e as súas capacidaes son maiormente innatas, non aprendidas. Parece que o recoñecemento de persoas é unha tarefa crucial na supervivencia e que temos desenvolvido hardware especializado para facelo.</para>

<para
>A colaboración baseada en internet é asimesmo psicolóxicamente extraña, xa que ten que ver coa estreita cooperación entre seres humanos que casi nunca se recoñecerán uns a outros polos máis naturais, intuitivos métodos: recoñecemento facial, voz, postura, etc. Para compensar todo isto, trata de usar un nome consistente <firstterm
>nick</firstterm
> en todos lados. Iso debería ser a primeira parte do teu correo (antes de @servidor.com), o nome que tes no IRC, o do repositorio de código, etc. Este nome é a túa cara "online": un corto identificador que ten o mesmo propósito que a túa cara real, aínda que desafortunadamente non estimula o mesmo hardware embebido no cerebro.</para>

<para
>O nick podería ser algunha permutación intuitiva do teu nome real (o meu, por exemplo, é "kfogel"). Nalgunhas situacións irá acompañado do teu nome completo, por exemplo nas cabeceiras dos correos:</para>

<screen
>De "Karl Fogel" &lt;kfogel@whateverdomain.com&gt;
</screen>

<para
>No anterior exemplo pódense notar 2 cousas. O nick encaixa dalgún modo intuitivo co nome real. Pero tamén, o nome real é <emphasis
>real</emphasis
>. É dicir, non é un nome como:</para>

<screen
>De: "Maravilloso hacker" &lt;wonderhacer@whateverdomain.com&gt;
</screen>

<para
>Paul Steiner, nunha viñeta cómica publicada no The New Yorker o 5 de xullo de 1993 amosa a un can usando unha computadora e decíndolle a outro cunha pose conspiranoica: "na internet, ninguén sabe que eres un can". Este tipo de crenzas descansan probablemente detrás dun feixe de auto-bombo e identidades online infladas que a xente se otorga a sí mesmas &mdash; como si chamarse a un mesmo "hacker maravilloso" fixese que a xente o crese. Mais os feitos son os feitos: aínda que ninguén sepa que eres un can, seguiralo sendo. Unha identidade online fantasiosa non impresiona ós lectores, senón todo o contrario, failles crer que eres máis imaxe que substancia ou que simplemente eres inseguro. Usa o teu nome real para tódalas interaccións, ou, si por algunha razón precisas usa-lo anonimato, entón invéntate un nome que soa como un real, e úsao consistentemente.</para>

<para
>Ademáis de usa-la túa identidade dixital dun modo consistente, hai algunhas cousas que poden facela máis atractiva. Si tes un título oficial (e.g., "doutor", "professor", "director"), non alardees del, non o menciones a non ser que sexa relevante na conversa. O mundo hacker, e o do software libre en particular, tende a ve-las insignias e títulos como signos de inseguridade. Non pasa nada si desexas usa-lo como unha firma estándar en cada correo-e que envíes, mais non o uses como un arma que sacar en cada conversa para defende-la túa posición &mdash; pois terá o efecto contrario. Desexas que a comunidade che respete a ti, non ó título.</para>

<para
>Falando de firmas estándar: fai que sexan pequenas e con bo gusto, ou mellor, que non existan. Evita enviar longos disclaimers adxuntos a cada correo-e, especialmente cando expresan sentimentos incompatibles coa paricipación nunha comunidade de software libre. Por exemplo, o seguinte clásico do xénero aparece ó fin de cada post que un usuario envía a unha rolda de correo á que estou suscrito (Nota do tradutor: o seguinte texto reprodúcese no idioma orixinal xa que é un texto legal):</para>

<screen
>IMPORTANT NOTICE

If you have received this e-mail in error or wish to read our e-mail
disclaimer statement and monitoring policy, please refer to the
statement below or contact the sender.

This communication is from Deloitte &amp; Touche LLP.  Deloitte &amp;
Touche LLP is a limited liability partnership registered in England
and Wales with registered number OC303675.  A list of members' names
is available for inspection at Stonecutter Court, 1 Stonecutter
Street, London EC4A 4TR, United Kingdom, the firm's principal place of
business and registered office.  Deloitte &amp; Touche LLP is
authorised and regulated by the Financial Services Authority.

This communication and any attachments contain information which is
confidential and may also be privileged.  It is for the exclusive use
of the intended recipient(s).  If you are not the intended
recipient(s) please note that any form of disclosure, distribution,
copying or use of this communication or the information in it or in
any attachments is strictly prohibited and may be unlawful.  If you
have received this communication in error, please return it with the
title "received in error" to IT.SECURITY.UK@deloitte.co.uk then delete
the email and destroy any copies of it.

E-mail communications cannot be guaranteed to be secure or error free,
as information could be intercepted, corrupted, amended, lost,
destroyed, arrive late or incomplete, or contain viruses.  We do not
accept liability for any such matters or their consequences.  Anyone
who communicates with us by e-mail is taken to accept the risks in
doing so.

When addressed to our clients, any opinions or advice contained in
this e-mail and any attachments are subject to the terms and
conditions expressed in the governing Deloitte &amp; Touche LLP client
engagement letter.

Opinions, conclusions and other information in this e-mail and any
attachments which do not relate to the official business of the firm
are neither given nor endorsed by it.
</screen>

<para
>Para alguén que simplemente envía algunha pregunta de vez en cando, o anterior disclaimer parece un pouco tonto mais probablemente non fai ningún mal. Porén, si a persoa desexase participar máis activamente no proxecto, esa plantilla legal comezaría a ter efectos insidiosos. Enviaría ó resto da comunidade alomenos 2 sinais: primeiro, que a persoa non ten un control total sobre as ferramentas que usa&mdash; está atrapado na maquinaria da compañía para a que traballa&mdash; e segundo, que ten pouco ou ningún soporte por parte da súa organización en canto ás súas actividades na comunidade. Sí, non lle impiden participar en roldas de correo públicas, mais con esa plantilla legal, fai que as súas mensaxes non sexan moi benvidas, enviando a mensaxe de que información confidencial debe imporse sobre calquera outra prioridade.</para>

<para
>Si a túa organización insiste en usar tal final de firma para tódolos correo-e, podes considerar obter unha conta de correo-e gratuita como por exemplo algunha de <ulink url="http://gmail.google.com/"
>gmail.google.com</ulink
>, <ulink url="http://www.hotmail.com/"
>www.hotmail.com</ulink
>, ou <ulink url="http://www.yahoo.com/"
>www.yahoo.com</ulink
>, usándoa para a túa participación no proxecto.</para>

</sect2>

</sect1>

<!-- ======================== SECTION ============================== -->

<sect1 id="common-pitfalls">
<title
>Evitando os obstáculos comúns</title>

<!-- ======================== subsection ============================== -->

<sect2 id="post-with-purpose">
<title
>Non envíes correos sen un propósito</title>

<para
>Un erro común que adoita xurdir durante a participación nun proxecto en liña é pensar que tes que responder a todo. Non o tes que facer. Primeiramente, adoita haber máis fíos activos dos que poder seguir en profundidade, cando menos despois dos primeiros meses. Segundo, mesmo nos fíos nos que decidiras participar, moito do que a xente di realmente non precisa dunha resposta. Os foros de desenvolvemento tenden a ser dominados por tres tipos de mensaxes:</para>

<orderedlist>
  <listitem
><para
>Mensaxes propoñendo algo que non é trivial</para
></listitem>
  <listitem
><para
>Mensaxes expresando apoio ou oposición a algo que alguén dixo</para
></listitem>
  <listitem
><para
>Mensaxes de recapitulación ou resumo</para
></listitem>
</orderedlist>

<para
>Ningún deles, cando menos dun xeito <emphasis
>inherente</emphasis
>, require unha resposta, especialmente se estás bastante seguro (tras revisares o fío) de que alguén é probable que responda dicindo o que ti terías dito. (Se te preocupas de ser atrapado nun bucle de espera-espera porque todos os demais están empregando a mesma táctica, non te preocupes; sempre vai haber <emphasis
>alguén</emphasis
> aí fóra que entre ao trapo). Unha resposta debería estar motivada por un propósito definido. Antes de nada, pregúntate a ti mesmo: sabes que é o que queres conseguir? E en segundo lugar: non se vai conseguir salvo que ti digas algo?</para>

<para
>Dúas boas razóns para engadires a túa voz a un fío son a) cando vires un defecto nunha proposta e sospeitares que es o único que o está a ver, e b) cando vires que está habendo falta de comunicación entre os demais, e souberes que a podes subsanar mediante unha mensaxe clarificadora. Tamén adoita estar xeralmente ben enviar mensaxes para darlle as grazas a alguén por agradecer algo, ou dicir "Eu tamén", para que un lector diga que esas mensaxes non requiren ningunha resposta nin acción adicional, e polo tanto o esforzo mental demandado pola mensaxe remata limpamente cando o lector alcanzar a última liña do correo electrónico. Mais mesmo nestes casos, pénsao dúas veces antes de dicires algo; sempre é mellor deixar que a xente desexe que envíes máis mensaxes, que deixar que a xente desexa que envíes menos (bótalle unha ollada á segunda parte de <xref linkend="bikeshed-full"/> para veres máis ideas sobre como comportarse nunha lista de correo moi concorrida.</para>

</sect2>

<!-- ======================== subsection ============================== -->

<sect2 id="productive-threads">
<title
>Fíos produtivos versus fíos improdutivos</title>

<para
>Nunha lista de correo moi concorrida, hai dous imperativos: Un, obviamente, é comprenderes a que tes que prestarlle atención e que podes ignorar. O outro é comportáreste dun xeito que evite a aparición de ruído: ti non queres que unicamente as túas mensaxes teñan unha boa relación sinal/ruído, senón que tamén queres que sexan do tipo de mensaxes que estimulan <emphasis
>o resto da xente</emphasis
> a enviar mensaxes cunha relación similar de sinal/ruído, ou a non escribir nada.</para>

<para
>Para ver como facer isto, imos considerar o contexto no que se fai. Cales son algúns dos sinais que identifican un fío improdutivo?</para>

<itemizedlist>
  <listitem
><para
>Empézanse a repetir argumentos xa empregados con anterioridade, debido a que o que os emprega pensa que ninguén os escoitou a primeira vez.</para>
  </listitem>
  <listitem
><para
>A medida que as ideas se fan máis e máis pequenas, aumenta o nivel de esaxeración e participación.</para>
  </listitem>
  <listitem
><para
>A maior parte dos comentarios proveñen de xente que fai un traballo pequeno, ou mesmo que non fai ningún traballo, mentres que a xente que tende a facer as cousas fica calada.</para>
  </listitem>
  <listitem
><para
>Discútense ideas que non teñen un propósito claro. (Por suposto, calquera idea interesante comeza counha visión imprecisa; a cuestión importante está na dirección que colle a partir dese inicio. Parece que o fío comeza a converterse en algo máis concreto, ou pola contra está divagando con sub-visións, visións laterais ou disputas ontolóxicas?</para>
  </listitem>
</itemizedlist>

<para
>Só porque un fío pareza non produtivo nos seus primeiro pasos non quere dicir que sexa unha perda de tempo. De feito, pode tratar sobre un tema importante, en cuxo caso o feito de non producir ningún avance sería o máis molesto.</para>

<para
>Conducir un fío cara á utilidade sen ser agresivo é toda unha arte. Amoestar a xente para que deixe de perder o seu tempo non adoita ser suficiente nin funcionar, do mesmo xeito que tampouco o é contestarlle dicindo que non envíen mensaxes salvo que tiveren algo construtivo que aportar. Ti podes, só faltaría, pensar esas cousas en privado, mais se as expresares abertamente en voz alta entón vas ser ofensivo. En lugar disto, debes propoñer condicións para promoveres o progeso&mdash;dálle á xente unha ruta, un vieiro que seguir para alcanzar o resultado que queres, e todo isto sen que pareza que estás ditando a conduta a seguir. A distinción reflíctese en gran medida no ton. Por exemplo, isto non está ben:</para>

  <blockquote>
     <para
><emphasis
>This discussion is going nowhere. Can we please drop this topic until someone has a patch to implement one of these proposals? There's no reason to keep going around and around saying the same things. Code speaks louder than words, folks.</emphasis
></para>
  </blockquote>

<para
>Whereas this is good:</para>

  <blockquote>
     <para
><emphasis
>Several proposals have been floated in this thread, but none have had all the details fleshed out, at least not enough for an up-or-down vote. Yet we're also not saying anything new now; we're just reiterating what has been said before. So the best thing at this point would probably be for further posts to contain either a complete specification for the proposed behavior, or a patch. Then at least we'd have a definite action to take (i.e., get consensus on the specification, or apply and test the patch).</emphasis
></para>
  </blockquote>

<para
>Compara a segunda aproximación coa primeira. A segunda proposta non debuxa unha liña entre ti e os demais, nin os acusa de levar a discusión a unha espiral sen fin. Fala sobre "nós", o cal é importante tanto se realmente participaches na discusión antes como se non o fixeches, dado que lle lembra a todo o mundo que mesmo aqueles que gardaron silencio tamén poden contribuír co seu gran de area ao fío. Ademais, describe o motivo polo que o fío está encamiñado cara ningures, pero faino dun xeito non pexorativo, nin xulgando a ninguén&mdash;simplemente, e sen paixón, presenta algúns feitos. E, máis importante aínda, ofrece un rumbo de acción positivo, polo que permite que en lugar de que a xente sinta que a discusión se está pechando (unha restrición atractiva contra a que rebelarse), sinta que a discusión se está levando a un nivel máis construtivo. Este é un estándar coa que a xente vai querer quedar.</para>

<para
>Non sempre vas queres elevar un fío ao seguinte nivel de construtividade&mdash;algunhas veces vas queres liquidalo. Neste caso, o propósito da túa mensaxe debe ser ou ben facer unha cousa ou ben facer a outra. Se podes amosar o camiño polo que andou o fío de xeito que ninguén realmente vaia poder seguir os pasos que propós para reconducilo, entón a túa mensaxe vai (efectivamente) pechar o fío sen que pareza facelo. Por suposto, non hai ningún xeito infalible de pechar un fío, e aínda que o houbese, seguramente non quererías empregalo. Aínda así, responderlle aos participantes dicíndolles que ou ben fagan progresos visibles ou ben deixen de enviar mensaxes, pode ser unha acción perfectamente defendible, de facerse diplomaticamente. A pesar disto debes ser cauteloso, e non liquidar fíos prematuramente. Algunhas charlas especulativas poden ser produtivas, dependo do tema, e pedir que se resolvan con demasiada prontitude poder afogar o proceso creativo, para alén de facerte ver como un impaciente.</para>

<para
>Non esperes que ningún fío remate en seco. Probablemente aínda haxa algunhas mensaxes posteriores á túa, tanto porque os correos se cruzaran na rede, como porque haxa xente que queira ter a última palabra. Tan só debes deixar que o fío se esfume, ou non, segundo for o caso. Non podes ter un control completo, mais por outra banda si que podes esperar ter un efecto estatisticamente significativo a través dos varios fíos.</para>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="bikeshed">
<title
>Canto máis suave for o tema, máis longo vai ser o debate</title>

<para
>Aínda que as discusións poden serpear entremedias de calquera tema, a probabilidade de que xurdan aumenta a medida que a dificultade técnica no tema descende. Despois de todo, cando maior for a dificultade técnica, menos participantes poden realmente seguir o que está a pasar. Aqueles que adoitan poder seguilas son os desenvolvedores máis experimentados, os mesmos que xa tomaron parte centos de veces nesas mesmas discusións, e coñecen os tipos de comportamento que levan a un consenso co que poida vivir todo o mundo.</para>

<para
>Deste xeito, o consenso é máis difícil de alcanzar en cuestións técnicas sinxelas de entender e sobre as que é sinxelo ter unha opinión propia, así como en temas máis "suaves" como son a organización, a publicidade, o financiamento, etc. A xente pode participar nestas argumentacións para sempre, dado que non e preciso contar con unha cualificación determinada para poder facelo, non existen vieiros claros para decidir (mesmo a posteriori) se unha postura era correcta ou incorrecta, e simplemente porque discutir ás veces é unha táctica de éxito.</para>

<para
>O principio de que a morea de discusión é inversamente proporcional á complexidade do tema ten estado dando voltas por aí desde hai moito tempo, e coñécese informalmente como o <firstterm
>efecto garaxe da bicicleta</firstterm
>. Aquí está a explicación do mesmo, aportada por Poul-Henning Kamp, proveniente dunha mensaxe famosa enviada aos desenvolvedores de BSD:</para>

<blockquote>

<para
>É unha longa historia, ou máis ben unha vella historia, mais bastante curta na actualidade. C. Northcote Parkinson escribiu un libro nos comezos de 1960 titulado "A lei de Parkinson", o cal contiña moitos coñecementos sobre a dinámica da xestión.</para>

<para
>[...]</para>

<para
>No exemplo específico sobre o garaxe da bicicleta, a outra compoñente vital é unha central de enerxía atómica, supoño que para ilustrar a época do libro.</para>

<para
>Parkinson amosa como podes acudir ao consello de dirección e conseguir a aprobación para construíres unha central de enerxía atómica por millóns, ou mesmo miles de millóns, mais tamén como se queres construír un garaxe para unha bicicleta posiblemente te vexas envolto en discusións sen fin. </para>

<para
>Parkinson explica que isto se debe a que unha central de enerxía atómica é algo tan enorme, tan caro e tan complexo que a xente non ten coñecementos sobre a mesma, e en lugar de obtelos, van aferrarse á asunción de que algún terceiro revisará os detalles, antes de ir máis alá. Richard P. Feynmann dá no seu libro un par de exemplos moi interesantes e próximos a este tema, relacionados con Los Alamos.</para>

<para
>Pola contra, calquera pode construír un garaxe de bicicletas durante un fin de semana, e contar con tempo suficiente para ver a carreira de Fórmula 1 na televisión. Debido a isto non importa nin o ben preparado que estiveres, nin como de razoable for a túa proposta, dado que seguramente alguén vai aproveitar a oportunidade para amosar que está facendo o seu traballo, que está prestando atención, para demostrar (en definitiva) que está <emphasis
>aí</emphasis
>.</para>

<para
>En Dinamarca chamámoslle "deixar a túa pegada". Trata sobre o orgullo persoal e mailo prestixio, trata sobre ser capaz de sinalar algún lugar e dicir "Aí! <emphasis
>Eu</emphasis
> fixen iso". É un trazo con gran presencia nos políticos, mais tamén presente na maioría da xente que ten a oportunidade de poñelo en práctica. Simplemente, pensa nas pegadas no cemento húmido.</para>

</blockquote>

<para
>(A súa mensaxe completa é unha lectura de motivo valor. Podes vela en <xref linkend="bikeshed-full"/>; bótalle tamén unha ollada a  <ulink url="http://bikeshed.com"
></ulink
>.)</para>

<para
>Calquera que algunha vez participase de xeito frecuente nun grupo con capacidade de toma de decisións, pode recoñecer perfectamente isto do que fala Kamp. Porén, adoita ser imposible persuadir <emphasis
>todo o mundo</emphasis
> para que non pinte o garaxe da bicicleta. O mellor que podes facer é recoñeceres que este fenómeno existe, cando vires que está a suceder, e persuadir os desenvolvedores experimentados&mdash;a xente cuxas mensaxes cargan coa maior parte do peso&mdash;para que abandonen as súas brochas o máis axiña posible, e cando menos non contribúan ao ruído. As festas para pintar garaxes de bicicletas nunca desaparecen de todo, mais podes conseguir que sexan máis curtas e menos frecuentes mediante a concienciación sobre este fenómeno, e a súa contribución á cultura do proxecto.</para>

</sect2>

<!-- ======================== SECTION ============================== -->
<sect2 id="holy-wars">
<title
>Evitar as guerras santas</title>

<para
>Unha <firstterm
>"guerra santa"</firstterm
> é unha disputa, normalmente sobre un tema non menor, que non é solucionable a través dos méritos dos argumentos, senón na que a xente se apaixona suficientemente como para seguir discutindo de todos os xeitos na esperanza de que a súa postura prevaleza. As guerras santas no son o mesmo que as sesións de pintado de garaxes de bicicletas. A xente que pinta garaxes de bicicletas adoita cambiar de postura facilmente (dado que poden), mais sen sentirse especialmente turbados por isto, e mesmo a veces poden expresar opinións incompatibles para mostraren que entenden todas as facetas da cuestión. Nunha guerra santa, pola outra banda, entender o resto de facetas é un sinal de debilidade. Nunha guerra santa, todo o mundo sabe que existe unha "única resposta correcta"; simplemente non están de acordo en cal é.</para>

<para
>Unha vez que unha guerra santa comezou, xeralmente non se pode resolver dun xeito satisfactorio para todo o mundo. Non é bo mostrar, no medio dunha guerra santa, que esta está tendo lugar. Isto xa é sabido por todo o mundo. Desafortunadamente, un patrón común nas guerras santas adoita ser o desacordo sobre <emphasis
>se</emphasis
> a disputa é resoluble continuando a discusión. Visto desde fóra, está claro que ningunha parte está mudando a forma de pensar da outra parte. Visto desde dentro, a outra parte está sendo obtusa e non está a pensar con claridade, mais poden vir ao rego se son suficientemente intimidados. Iso si, <emphasis
>non</emphasis
> estou a dicir que non haxa unha parte con razón nunha guerra santa. Ás veces hainas, e as guerras santas nas que eu participei sempre estivo do meu lado, por suposto. Mais isto non importa, dado que non hai algoritmos para demostrar convincentemente que un lado ou o outro teñen a razón.</para>

<para
>Un camiño común, mais insatisfactorio, que a xente emprega para resolver as guerras santas pasa por dicir "xa esbanxamos máis tempo é enerxía discutindo isto da que realmente nos pode aportar! Por favor, podemos deixalo?" Hai dous problemas con isto. Primeiro, ese tempo e enerxía xa foron gastados e nunca van poder ser recuperados&mdash; a única cuestión agora é canto <emphasis
>máis</emphasis
> esforzo resta? Se alguén sente que algo máis de discusión vai conseguir pechar a discusión, entón (desde o seu punto de vista) aínda se pode continuar.</para>

<para
>O outro problema de pedir que a cuestión sexa abandonada reside en que, a miúdo, esta actitude considérase equivalente a unha vitoria de unha das partes, podendo declarar a vitoria por inacción da outra. E nalgúns casos, o status quo é inaceptable en calquera dos casos: todo o mundo está de acordo en que se debe tomar algunha decisión, e levar a cabo algunha acción. Deixar o asunto pode ser peor para todo o mundo que simplemente renderse. Mais dado que este dilema é aplicable a todas as partes por igual, aínda é posible continuar eternamente coa discusión sobre o que hai que facer.</para>

<para
>Como deberías manexar unha guerra santa?</para>

<para
>A primeira resposta é tentar configurar as cousas para que non se declaren guerras santas. Isto non é tan inútil como soa:</para>

<para
>Podes anticiparte a determinadas guerras santas máis ou menos estándar: tenden a versar sobre linguaxes de programación, licenzas (bótalle unha ollada a <xref linkend="license-compatibility"/><phrase output="printed"
> en <xref linkend="legal"/></phrase
>), responderlle aos desconformes (ver <xref linkend="reply-to"/><phrase output="printed"
> ne <xref linkend="technical-infrastructure"/></phrase
>), e uns poucos temas máis. Ademais, cada proxecto adoita ter unha ou dúas guerras santas da súa propia colleita, coas que os desenvolvedores de longo percorrido vanse familiarizar con prontitude. As técnicas para parares guerras santas, ou para limitares os seus danos, son máis ou menos as mesmas en calquera lugar. Mesmo se estiveres seguro de que o teu lado é o que ten a razón, tenta atopar <emphasis
>algún</emphasis
> xeito de expresares simpatía e comprensión polas cuestións que o outro lado está a facer. Moitas veces o problema de base nunha guerra santa atópase en que cada parte construíu os seus muros o máis altos que puido, e deixou claro que calquera outra opinión é unha unha parvada. O acto de rendéreste ou mudares de idea tórnase en algo psicoloxicamente insoportable: podería ser un recoñecemento non só de estares equivocado, senón tamén de saberes que o estabas e non telo admitido. O xeito no que podes facer que esta admisión sexa aceptable para o outro bando é expresando algunha inseguridade en ti mesmo, precisamente explicando de que entendes algúns dos seus argumentos, e visualizando que os tes en consideración, se definitivamente non te persuadiron. Fai xestos que fornezan un espazo para que haxa outros xestos recíprocos, e normalmente a situación vai mellorar. Ti non vas estar nin mellor nin peor posicionado para alcanzares os resultados técnicos que buscas, mais cando menos vas poder eliminar danos colaterais (totalmente innecesarios) na moral do proxecto.</para>

<para
>Cando unha guerra santa non pode ser evitada, decide o máis axiña que poidas canto che importa, e prepárate para renderte publicamente. Cando fagas isto, podes dicir que non estás apoiándoa porque a guerra santa non o merece, mais non expreses ningún rancor e <emphasis
>non</emphasis
> te aproveites da oportunidade para unha despedida disparando contra os argumentos da outra parte. Darse por vencido é efectivo só cando se fai con elegancia.</para>

<para
>As guerras santas sobre linguaxes de programación son un caso especial, porque a miúdo son altamente técnicas, habendo moita xente que se sente cualificada para tomar parte nelas, e contando cun interese moi alto, xa que o resultado pode determinar en gran medida en que linguaxe se vai a desenvolver o proxecto. A mellor solución é escoller a linguaxe logo, coa participación dos desenvolvedores iniciais influíntes, e entón defender esta solución nos terreos nos que todos esteades cómodos escribindo nesa linguaxe, <emphasis
>non</emphasis
> nos terreos nos que estea linguaxe sexa mellor que outras linguaxes que poderían ser empregadas no seu lugar. Nunca deixes que a conversa dexenere nunha comparación académica de linguaxes de programación (isto parece ocorrer especialmente cando alguén menciona Perl, por algunha razón); este é un tema morto no que simplemente debes evitar caer.</para>

<para
>Para un maior coñecemento histórico sobre as guerras santas, mira <ulink url="http://catb.org/~esr/jargon/html/H/holy-wars.html"
></ulink
>, e mailo artigo de Danny Cohen, no que se popularizou o termo, <ulink url="http://www.ietf.org/rfc/ien/ien137.txt"
></ulink
>.</para>

</sect2>

<!-- ======================== subsection ============================== -->

<sect2 id="noisy-minority">
<title
>O efecto "minoría ruidosa"</title>

<para
>En calquera discusión nunha lista de correo, resúltalle sinxelo a unha minoría dar a impresión de que existe un gran acordo na disensión, mediante inundación da lista con numerosos e longos emails. Isto semella filibusterismo, excepto que a ilusión da difusión da disensión é mesmo máis poderosa, dado que está dividida entre un número arbitrario de mensaxes concretas e moita xente non se vai molestar en trazar quen dixo que, nin cando. Simplemente van ter a impresión instintiva de que o tema é moi controvertido, e van agardar ata que o escándalo diminúa.</para>

<para
>O mellor xeito de contraatacar este efecto é dando conta dun xeito ben claro, e aportando probas, de que o número real de disensións, comparado cos acordos, é moi pequeno. Perseguindo o incremento da disparidade, poderías querer enquisar privadamente a xente que se ten mostrado silenciosa, mais que sospeitas que estarían de acordo coa maioría. Non digas nada que suxira que os desconformes están tentando inflar deliberadamente a impresión que están forxando. O único que precisas é mostrares os números reais nunha comparación un-a-un, e só con iso a xente xa se vai decatar de que a intuición que tiñan sobre a situación non encaixa coa realidade.</para>

<para
>Este consello no só se aplica a temas cunha clara posición a favor ou en contra. Aplícase a calquera discusión onde houber un alboroto, mais non estiver claro que a maioría da xente considera ese tema en discusión como un problema real. Despois de todo, se estiveres de acordo en que o tema non é digno de acción, e podes ver o que fallou en atraer a atención (embora xerase moitos correos), podes facer pública esta observación. Se o efecto "minoría ruidosa" funcionou, a túa mensaxe vai parecer un sopro de aire fresco. A impresión da maioría da xente ata ese momento pode ser algo porquiña: "Uh, seguro que senten como se houber un gran acordo aquí, porque seguramente hai unha morea de mensaxes, mais non podo ver que haxa ningún progreso claro." Explicar o ciclo de vida da discusión pode facer que pareza máis turbulenta do que realmente é, polo que ti retrospectivamente debes darlle unha nova forma, a través da cal a xente poida recapitular a súa comprensión do resultado.</para>

</sect2>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="difficult-people">
<title
>Xente problemática</title>

<para
>Os foros electrónicos non fan máis fácil tratar coa xente problemática ca en persoa. Por xente "problemática" non me refiro a "groseira". As persoas groseiras son molestas, pero non necesariamente problemáticas. Neste libro xa discutimos como tratar con elas: comentar as súas saídas de tono a primeira vez, e a partir de entón, ou ben ignoralos ou tratalos como a calquera outra persoa. Se continúan sendo maleducados, co tempo serán tan impopulares que non terán influencia algunha nos demáis membros do proxecto, polo que realmente rematarán sendo un problema con auto-contención.</para>

<para
>Os casos realmente problemáticos son os de xente que non é abertamente groseira, pero que manipula ou abusa dos procedementos do proxecto de modo que lle custa a outra xente tempo e esforzo, sen proporcionar beneficio algún ao proxecto. Estas persoas habitualmente buscan físgoas nos procedementos do proxecto para ter máis influencia da que normalmente terían. Isto é claramente máis insidioso que simplemente groseiro, porque nin o comportamente nin o dano causado son aparentes para observadores casuais. Un exemplo clásico é o filibusteiro, no cal alguén (sempre nun suposto razoable, claro está) mantén que un tema baixo discusión non se pode dar por pechado, e ofrece máis e máis posibles solucións, ou novos puntos de vista en solucións antigas, mentres que o que realmente persegue e que non se chegue a un consenso ou votación que non lle beneficia. Outro exemplo é cando hai un debate que non chegará a un consenso, pero o grupo tenta polo menos aclarar os puntos de desacordo e crear un sumario para que calqueira poda consultar dende entón. O obstrucionista, que sabe que o sumario levará a un resultado que non desexa, tentará habitualmente de retrasar a súa creación, complicando continuamente a cuestión sobre que debería conter, ben obxectando de maneira razoable ou introducindo elementos novos inesperados.</para>

<sect2 id="handling-difficult-people">
<title
>Tratando con xente problemática</title>

<para
>Para contrarrestar devandito comportamento, axuda coñece-la mentalidade de aqueles que o presentan. A xente normalmente non o fai de maneira consciente. Ninguén se esperta unha mañá dicindo "Hoxe vou manipular de maneira cínica os procedementos formais para converterme nun obstrucionista irritante". No seu lugar, ditas accións son habitualmente precedidas por un sentimento semi-paranoide de estar sendo vetado de interacións no grupo e toma de decisións. A persoa sente que non se lle está tomando en serio, ou (en casos máis serios) de que existe unha conspiración na súa contra&mdash;que outros membros do proxecto decidiron formar un clube exclusivo, do cal non é membro. Entón isto xustifica, na súa mente, o feito de tomar as regras ao pé da letra e involucrarse nunha manipulación formal dos procedementos do proxecto, para poder <emphasis
>facer</emphasis
> que todos o tomen en serio. En casos extremos, a persoa pode chegar a pensar que está loitando unha batalla para salva-lo proxecto de si mesmo.</para>

<para
>Na natureza de ditos ataques ocorre que non todos se percatan del ao mesmo tempo, e algunha xente pode que non o vexa se non se lle presenta con probas moi claras. Isto significa que neutralizalo pode supor bastante traballo. Non é suficiente convencerte do que está ocurrindo; hai que reunir suficientes evidencias para convencer aos demáis, e entón distribuilas de maneira intelixente.</para>

<para
>Sabendo que combatilos é tan complicado, moitas veces é mellor toleralos durante un tempo. Pensa nela coma nunha enfermedade parasitaria pero leve; se non debilita demasiado, o proxecto pode permitirse permanecer infectado, e a medicina podería ter efectos secundarios perxudiciais. Por outro lado, se se torna nalgo demasiado danino, entón hai que pasar á acción. Comeza anotando os patróns que observas. Asegúrate de incluir referencias aos arquivos públicos&mdash;esta é unha das razóns polas que o proxecto mantén rexistros, polo que fas ben en empregalos. Unha vez que tes un bo caso construido, comeza a ter conversacións privadas con outros participantes do proxecto. Non lles digas o que observaches; en lugar diso, pregunta primeiro que observaron eles. Esta pode ser a última oportunidade de obter información sen filtrar  sobre como ven outros o comportamento do membro problemático; unha vez que comezas a falar delo abertamente, a opinión estará polarizada e ninguén poderá recordar con exactitude o que pensaba antes sobre o tema.</para>

<para
>Se as conversas privadas indican que polo menos algúns dos demáis membros observaron tamén o problema, entón é hora de facer algo. Entón é cando hai que ter <emphasis
>verdadeiro</emphasis
> coidado, porque é moi sinxelo para este tipo de persoas facer que pareza que os estás tratando de maneira inxusta. Fagas o que fagas, nunca os acuses de abusar maliciosamente dos procedementos do proxecto, ou de ser paranoicos, ou, en xeral, de calqueira cousa que sospeites que é verdade. A túa estratexia debería ser semellar razoable e preocupado polo ben do proxecto, co obxectivo de cambia-lo comportamento da persoa, ou facer que marchen definitivamente. Segundo os demáis desenvolvedores, e a túa relación con eles, pode ser ventaxoso lograr aliados de maneira privada ao comezo. Ou quizáis non; isto podería crear malestar detrás do escenario se a xente pensa que os estás metendo nunha campaña de rexoubas impropia.</para>

<para
>Recorda que aínda que a outra persoa sexa a que ten un comportamento destructivo es <emphasis
>ti</emphasis
> o que parecerá destructivo se fas de maneira pública unha acusación que non podes soster. Asegúrate de ter multitude de exemplos para demostrar o que dis, e fala do modo máis xentil posible, sen deixar de ser directo. Pode que non convenzas á persoa en cuestión, pero iso non supón un gran problema mentres convenzas aos demáis.</para>

</sect2>

<sect2 id="difficult-people-case-study">
<title
>Caso de estudo</title>

<para
>Só recordo un caso, en máis de 10 anos de traballo con software libre, no que as cousas estaban tan mal que tivemos que pedirlle a alguén que parara totalmente de postear. Como adoita ocorrer, non era maleducado, e a verdade é que simplemente quería axudar. O que pasaba era que non sabía cando postear e cando non. As nosas listas estaban abertas públicamente, e posteaba con tanta frecuencia, preguntando sobre temas moi diferentes, que comezaba a ser unha amoladura para a comunidade. Comentámoslle que investigara un pouco máis esas respostas antes de postear, pero non serviu de nada.</para>

<para
>A estratexia que finalmente funcionou é un exemplo perfecto sobre como elaborar un caso sobre datos cuantitativos e neutrais. Un dos nosos desenvolvedores rebuscou nos arquivos e enviou o seguinte mensaxe privado a uns pocos desenvolvedores. A persoa problemática (o terceiro nome na lista inferior, indicado aquí como "X. Aleatorio") levaba pouco tempo no proxecto, e non tiña contribuido nin con código nin con documentación. A pesar diso, era o terceiro membro máis activo nas listas de correo:</para>

<screen
>De: "Brian W. Fitzpatrick" &lt;fitz@collab.net&gt;
A: [... lista de receptores omitida por anonimato ...]
Asunto: O sumidoiro de enerxía de subversion
Data: Mércores, 12 Nov 2003 23:37:47 -0600

Nos últimos 25 días, os 6 membros máis activos na lista svn [dev|users]
foron:

    294  kfogel@collab.net
    236  "C. Michael Pilato" &lt;cmpilato@collab.net&gt;
    220  "X. Aleatorio" &lt;xaleatorio@posteador-problematico.com&gt;
    176  Branko &Ccaron;ibej &lt;brane@xbc.nu&gt;
    130  Philip Martin &lt;philip@codematters.co.uk&gt;
    126  Ben Collins-Sussman &lt;sussman@collab.net&gt;

Eu diría que 5 desas persoas están contribuindo a que saía Subversion
1.0 nun futuro próximo.

Tamén diría que unha desas persoas está constantemente roubando tempo
e enerxía dos outros 5, sen mencionar toda a lista, e polo tanto
(aínda que de maneira non intencionada) freando o desenvolvemento de Subversion.
Non fixen un análisis dos fíos, pero un vgrep da mila bandexa de correo de Subversion mostra
que tódolos correos desta persoa foron respondidos polo menos una vez por
polo menos dúas das cinco persoas citadas enriba.

Penso que algún tipo de intervención radical é necesaria neste caso, incluso se escorrentamos
á mentada persoa fora do proxecto. A amabilidadee as suxerencias xa mostraron
que non teñen efecto.

dev@subversion é unha lista de correo para facilitar o desenvolvemento dun sistema de
control de versións, non para facer sesións de terapia de grupo.

-Fitz, tentando ler tres días de correo de svn amontoado
</screen>

<para
>Pode que non o pareza ao principio, pero o comportamento de X. Aleatorio era un caso clásico de abuso dos procedementos dun proxecto. Non facía cousas evidentes como tentar obstruir unha votación, pero estaba sacando proveito das políticas das listas de correo de ser moderadas polos seus propios membros. Deixamos a xuízo de cada un o momento de postear e sobre que temas. Ademáis, non tiñamos procedementos para tratar con alguén que non tivera ou non fixera uso dese xuízo. Non había regras que alguén puidera sinalar que dicir que outro as estaba violando, aínda que todos sabiamos que os seus mensaxes frecuentes comezaban a ser un problema serio.</para>

<para
>Retrospectivamente, a estratexía de Fitz foi autoritaria. Recopilou claras evidencias cuantitativas, pero decidiu distribuilas de maneira discreta, mandándoas primeiro a aquelas persoas cuxo apoio sería clave nunha medida drástica. Aceptaron tomar ese tipo de decisión se era necesario, e ao final chamamos a X. Aleatorio ao teléfono, describímoslle o problema directamente e pedímoslle que simplemente cesara de postear. Realmente nunca comprendeu os motivos; se fora capaz de comprendelo, probablemente tivera feito uso dun xuízo apropiado en primeiro lugar. Pero aceptou parar de postear, e as listas de correo volveron a poderse usar de novo. Parte do éxito desta estratexia foi, quizáis, a ameaza implícita de restrinxir os seus mensaxes mediante o software de moderación normalmente empregado para previr o spam (ver <xref linkend="spam-prevention"/><phrase output="printed"
> en <xref linkend="technical-infrastructure"/></phrase
>). Pero o motivo de que tivéramos dita opción de reserva foi que Fitz conseguiu xa ao principio o apoio necesario de xente clave no proxecto.</para>

</sect2>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="growth">
<title
>Xestionando o crecemento</title>

<para
>O prezo do éxito é forte no mundo do software libre. A medida que o teu software se fai máis popular, o número de persoas que xorden buscando información sobre o mesmo medra drasticamente, mentres que o número de persoas capacitadas para fornecer esa información aumenta moito máis lentamente. Máis aínda, mesmo se a relación estivese equilibrada, seguiría habendo un problema fundamental de escalabilidade no xeito no que os proxectos de software libre xestionan as comunicacións. Considera as listas de correo, por exemplo. A maioría dos proxectos teñen unha lista de correo para cuestións xerais dos usuarios&mdash;ás veces nomeada "users","discuss","help" ou algo así. Calquera que for o seu nome, o propósito da lista sempre é o mesmo: fornecer un lugar onde a xente poida ver resoltas as súas preguntas, mentres outros miran e (presumiblemente) absorben coñecemento mediante a observación destes trocos de información.</para>

<para
>Estas listas de correo funcionan moi ben ata un poucos centos de usuarios e/ou un par de centos de mensaxes ao día. Mais para alén destes límites, o sistema comeza a fracturarse, dado que cada subscritor ve cada mensaxe; se o número de mensaxes á lista comeza a exceder o límite que cada lector individual pode procesar nun día, a lista convértese nun peso morto para os seus membros. Imaxina, por exemplo, que Microsoft tivese unha lista deste xeito para Windows XP. Windows XP ten centos de millóns de usuarios; mesmo se un por cento deles tiver preguntas dun período dado de 24 horas, entón esta hipotética lista tería centos de miles de mensaxes cada día! Unha lista deste estilo nunca podería existir, por suposto, dado que ninguén estaría subscrito á mesma. Este problema non se limita ás listas de correo; a mesma lóxica exacta é válida para os canais IRC, os foros de discusión en liña, e por derivación para calquera sistema no cal un grupo escoite preguntas provenientes de persoas individuais. As implicacións son desafortunadas: o modelo de software libre habitual baseado nun soporte masivamente paralelizado simplemente non escala para os niveis precisos para a dominación mundial (ou cando menos da Terra Media, ou da Illa de Perdidos).</para>

<para
>Obviamente non vai haber ningunha explosión cando os foros atinxiren o punto de fractura. Simplemente vai haber un silencioso efecto de retroalimentación negativa: xente que abandona as listas de correo, ou deixa os canais IRC, ou co ritmo que for deixan de se preocupar de faceren preguntas, dado que verán que non van ser escoitados no medio de todo ese barullo. A medida que máis e máis xente tome esta altamente racional decisión, vai parecer que a actividade do foro retorna a un nivel manexable. Mais será manexable precisamente porque a xente racional (ou cando menos experimentada) comezou a buscar información en calquera outro lugar&mdash;mentres que a xente sen experiencia segue aí e continúa enviando mensaxes. Noutras palabras, un efecto colateral de continuar empregando modelos de comunicacións non escalables cando o proxecto medra é que a calidade media tanto das preguntas como das respostas tende a reducirse, o que provoca que pareza que os novos usuarios son máis parvos do que o eran antes, cando de feito probablemente non o sexan. Trátase simplemente de que a relación beneficio/custo de empregar estes foros tan superpoboados diminúe, polo que naturalmente os usuarios experimentados comezarán a buscar respostas en primeira instancia noutros sitios. Axustar os mecanismos de comunicación para asimilar o crecemento do proxecto envolve dúas estratexias relacionadas:</para>

<orderedlist>
  <listitem
><para
>Recoñecer cando partes concretas dun foro <emphasis
>non</emphasis
> están a sufrir dun crecemento excesivo, embora o foro en conxunto si que o estea a sufrir; e separar estas partes en foros novos e especializados (por exemplo, non deixes que paguen xustos por pecadores).</para>
  </listitem>
  <listitem
><para
>Asegurar que están accesibles varias fontes automatizadas de información, e que as mesmas están organizadas, actualizadas e facilmente accesibles.</para>
  </listitem>
</orderedlist>

<para
>A estratexia (1) non adoita ser demasiado dura. Moitos proxectos arrincan cun foro principal: unha lista de correo xeral de discusión, na cal tanto funcionalidades, como ideas, cuestións de desenvolvemento, problemas de implementación, etc poden ser todos eles discutidos. Todo o mundo que participa no proxecto está na lista. Despois dun tempo, adoita amosarse con claridade que a lista precisa evoluír en varias sublistas, relacionadas cada unha delas cun tópico específico. Por exemplo, algúns fíos teñen a ver claramente co desenvolvemento e co deseño; outros son de preguntas de usuarios do estilo "Como fago X?"; ás veces tamén existe unha terceira familia típica de fíos centrada no procesamento de notificacións de erros e peticións de melloras; e así. Un individuo concreto, como non pode ser doutro xeito, pode participar en fíos de moi diferente natureza, mais a importancia atópase en que non adoita haber moito solapamento entre os distintos tipos. Debido ao anterior, pode facerse unha división en diferentes listas de correo sen iniciar perniciosos ataques de orcos, dado que os fíos en moi raras ocasións transgriden as fronteiras do tema no que se enmarcan.</para>

<para
>Realmente, a execución desta división é un proceso de dous pasos. Por unha banda creas a nova lista de correo (ou canal de IRC, ou o que for), e por outra invistes o tempo que for necesario para dun xeito educado ir instando a xente a <emphasis
>empregar</emphasis
> os novos foros dun xeito apropiado. O segundo paso pode levar semanas, mais normalmente a xente acaba captando a idea. Simplemente tes que facer ver, cando unha persoa enviar unha mensaxe a un destino equivocado, cal é o destino correcto, e facelo dun xeito visible e animando a xente a que axude neste proceso didáctico. Tamén adoita ser útil contar cunha páxina web na que se forneza unha guía para todas as listas dispoñibles; deste xeito as túas respostas poden, simplemente, referenciar a esa páxina web e, como regalo, o receptor tamén vai aprender que debe pesquisar nas guías antes de preguntar.</para>

<para
>A estratexia (2) é un proceso en curso, permanecendo en proceso durante toda a vida do proxecto e envolvendo moitos participantes. Por suposto, trátase en parte da recorrente cuestión de manter documentación actualizada (bótalle unha ollada a <xref linkend="documentation"/><phrase output="printed"
> in <xref linkend="getting-started"/></phrase
>), mais tamén se trata se asegurarte de dirixir a xente cara onde esta se atopa, e en última instancia é moito máis que todo o anterior, tal como se vai discutir e amosar nas sección que seguen, nas cales se vai ver esta estratexia en detalle.</para>

<!-- ======================== SECTION ============================== -->
<sect2 id="using-archives">
<title
>Uso manifesto dos arquivos</title>

<para
>Tipicamente, todas as comunicacións nun proxecto de software libre (excepto, ás veces, as conversas por IRC) son arquivadas. Os arquivos son públicos e consultables, e teñen estabilidade referencial: isto é, unha vez que unha peza de información é gravada nun enderezo particular, permanece nese enderezo para sempre.</para>

<para
>Emprega estes arquivos tanto como puideres, e dun xeito tan manifesto como che for posible. Embora saibas a resposta a unha cuestión, se pensas que existe unha referencia nos arquivos que conteña a resposta, emprega o tempo preciso para buscárela e emprégaa. Cada vez que fas isto dun xeito publicamente visible, algunha xente vai aprender para que valen estes arquivos e vaise decatar de que están aí á súa disposición, e que buscar as cousas neles pódelles dar respostas. Así, mesmo referenciares aos arquivos, en lugar de reescribires unha resposta dada con anterioridade, reforza a norma social de evitar a duplicación de información. Para que ter a mesma resposta en dous lugares diferentes? Cando o número de lugares nos que se pode atopar a resposta é mínimo, a xente que a atopase con anterioridade é máis propensa a lembrar que pesquisar para atopala novamente. As referencias ben situadas tamén contribúen á calidade dos resultados das procuras, dado que reforzan o ranking nas ferramentas de procura de Internet do recurso apuntado.</para>

<para
>Contodo, hai veces nas que duplicares a información si que ten sentido. Por exemplo, imaxina que existe unha resposta nos arquivos, non aportada por ti, dicindo:</para>

<screen
>Parece que os índices do teu servidor Dharma están Lockeados.
Para deslockealos, executa os seguintes comandos:

1. Apaga o servidor Dharma
2. Executa a aplicación 'deslocke' incluída no servidor Dharma
3. Acende o servidor
</screen>

<para
>Entón, meses despois, ves outra mensaxe indicando que os índices de alguén sufriron dunha lockeización. Fas unha procura nos arquivos e atopas a resposta anterior, mais decátaste de que na mesma non están incluídos algúns pasos (quizais por erro, quizais porque o software mudou desde que a resposta primixenia pasou a formar parte dos arquivos). O xeito clásico de manexar esta situación é mediante o envío dunha nova mensaxe que inclúa un conxunto de instrucións máis completo, e colgarlle a etiqueta de "obsoleta" á resposta orixinal mediante unha mención ao estilo de:</para>

<screen
>Parece que os índices do teu servidor Dharma están Lockeados. Xa
vimos ese problema o xullo pasado, e D. Hume enviou unha solución,
que se pode ver en http://ghandalf-loves-lost.org/servidoresDharma
A continuación, expoñemos unha descrición máis completa sobre
como deslockeizar os teus índices, baseada nas instrucións de D. Hume,
mais ampliándoas un chisco:

1. Apaga o servidor Dharma
2. Rexístrate como usuario co que o servidor Dharma adoita executarse
3. Como ese usuario, executa a aplicación 'deslocke' sobre os índices
4. Arranca manualmente o servidor Dharma para testares se os índices funcionan
5. Reinicia o servidor
</screen>

<para
>(Nun mundo ideal, sería posible engadirlle unha nota á antiga mensaxe dicindo que existe información actualizada e apuntando á nova mensaxe. Contodo, non coñezo ningún software de arquivamento que ofreza unha funcionalidade ao estilo de "obsoletizado por", pode que debido a que sería moi dificultoso implementar isto sen violar a integridade dos arquivos. Esta é outra das razóns polas que crear páxinas web adicadas con respostas para as preguntas comúns é unha excelente idea).</para>

<para
>Probablemente as consultas que se fagan con máis frecuencia sobre os arquivos sexan aquelas derivadas de cuestións técnicas, mais a súa importancia para o proxecto vai moito máis alá. Se as liñas e guías formais dun proxecto son o seu estatuto, os arquivos son a súa lei de usos e costumes: un rexistro de todas as decisións tomadas e de como se chegou ás mesmas. En calquera discusión recorrente, é case obrigatorio comezar cunha procura nos arquivos. Isto permite comezar a discusión cun resumo do estado actual das cousas, anticipar obxeccións, preparar refutacións, e posiblemente descubrir ángulos que doutro xeito non terías. Á súa vez, é lóxico que os outros participantes na discusión dean por suposto que fixeches esta procura. Mesmo se as discusións previas non chegaron a ningures, debe incluír referencias ás mesmas cando volvas a sacar o tema, para que a xente poida ver por si mesma a) que non se chegou a ningures, e b) que fixeches os teus deberes, e que probablemente se estea dicindo agora o que non se dixo anteriormente.</para>

<sect3 id="all-as-archives">
<title
>Trata todos os recursos como arquivos</title>

<para
>Todos os consellos anteriores son válidos en máis circunstancias que o caso concreto das listas de correo. Ter pezas concretas de información en enderezos estables e fáciles de atopar adoita ser un principio básico de organización para a información de calquera proxecto. Imos tomar as FAQ (Preguntas Frecuentes) dun proxecto como caso de estudo:</para>

<para
>Como emprega a xente unha FAQ?</para>

<orderedlist>
  <listitem>
    <para
>Pesquisan palabras e frases específicas.</para>
  </listitem>
  <listitem>
    <para
>Queren poder navegala, gozando da información sen necesariamente buscar respostas a cuestións específicas.</para>
  </listitem>
  <listitem>
    <para
>Esperan que motores de procura como Google coñezan o contido da FAQ, de tal xeito que as procuras aporten como resultado entradas na FAQ.</para>
  </listitem>
  <listitem>
    <para
>Queren poder referirse directamente a outra xente en temas específicos na FAQ.</para>
  </listitem>
  <listitem>
    <para
>Queren poder engadir novo material na FAQ, mais ten en conta que isto ocorre moito menos a miúdo que a procura de respostas &mdash;as FAQs son de lonxe moito máis lidas que escritas.</para>
  </listitem>
</orderedlist>

<para
>O punto 1 implica que as FAQ deberían estar dispoñibles nalgún tipo de formato de texto. Os puntos 2 e 3 implican que as FAQ deberían estar dispoñibles como unha páxina HTML, coa indicación adicional por parte do punto 2 de que o HTML debería estar deseñado para aumentar a lexibilidade (p.ex. vas querer ter algún control sobre o seu modo de visualización), e debería contar cunha táboa de contidos. O punto 4 indica que cada entrada individual da FAQ debería ter asignada unha etiqueta HTML <firstterm
>named anchor</firstterm
>, indicando que se lle permite a xente chegar a calquera localización concreta na páxina. O punto 5 significa que os ficheiros fonte para a FAQ deberían estar dispoñibles dunha maneira axeitada (ver <xref linkend="version-everything"/><phrase output="printed"
> in <xref linkend="technical-infrastructure"/></phrase
>), nun formato que sexa sinxelo de editar.</para>

  <sidebar id="html-named-anchors-and-ids">
  <title
>Named Anchors (áncoras nomeadas) e atributos ID</title>

  <para
>Hai dúas maneiras para lograr que un navegador salte a un sitio específico dentro dunha páxina web: áncoras con nome e atributos id.</para>

  <para
>Unha <firstterm
>áncora con nome</firstterm
> é simplemente un elemento HTML de áncora (<literal
>&lt;a&gt;...&lt;/a&gt;</literal
>), mais cun atributo "name":</para>

  <screen
>&lt;a&nbsp;name="jack-shephard-label"&gt;...&lt;/a&gt;</screen>

  <para
>Versións máis recentes de HTML soportan un <firstterm
>atributo id </firstterm
> xenérico, o cal pode achegarse conxuntamente con calquera elemento HTML, non só con <literal
>&lt;a&gt;</literal
>. Por exemplo:</para>

  <screen
>&lt;p&nbsp;id="hugo-reyes-label"&gt;...&lt;/p&gt;</screen>

  <para
>Ambos, tanto áncoras con nome como atributos id, empréganse do mesmo xeito. Un engade unha marca hash e etiquétaa a unha URL, para provocar que o navegador salte directo ao devandito punto da páxina:</para>

  <screen
>http://ghandalf-loves-lost.org/faq.html#david-faraday-label</screen>

  <para
>Virtualmente todos os navegadores Web teñen soporte para áncoras con nome; a maior parte dos navegadores modernos teñen soporte para atributos id. Para ir sobre seguro, recomendaría empregar tanto áncoras con nome en solitario, como áncoras con nome <emphasis
>e</emphasis
> atributos id conxuntamente (coa mesma etiqueta para ambos nun par concreto, por suposto). As áncoras con nome non poden ser autopechantes&mdash; embora non exista texto dentro do elemento, contodo, debes escribilo na forma dupla:</para>

  <screen
>&lt;a&nbsp;name="sayid-label"&gt;&lt;/a&gt;</screen>

  <para
>...aínda que normalmente haberá algún texto, como o título dunha sección.</para>

  <para
>En calquera lugar no que empregues unha áncora con nome, ou un atributo id, ou ambos, recorda que a etiqueta non vai ser visible por ninguén que navegue ata esa localización sen empregar a etiqueta. Mais unha persoa podería querer saber a etiqueta que identifica unha localización concreta, para poder enviar un correo coa URL da resposta na FAQ a un amigo, por exemplo. Para axudalo a facer isto, engade un <firstterm
>atributo título</firstterm
> ao mesmo elemento(s) ao que lle engadiches o "nome" e/ou o atributo "id", por exemplo:</para>

  <screen
>&lt;a&nbsp;name="kate-austen-label"&nbsp;title="kate-austen-label"&gt;...&lt;/a&gt;</screen>

  <para
>Deste xeito, cando o rato se sitúe sobre o texto dentro do elemento co atributo de título, a maioría dos navegadores van mostrar unha pequena caixiña co título. Acostumo incluír a sinatura hash, para lembrarlle ao usuario que isto é o que debe poñer ao final da URL para saltar directamente a esta localización a próxima vez.</para>

  </sidebar>

<para
>Formatar a FAQ deste xeito só é un exemplo de como facer que un recurso sexa presentable. As mesmas propiedades&mdash;localización directa, dispoñibilidade para a maioría dos motores de procura en Internet, navegabilidade, estabilidade referencial, e (onde corresponder) editabilidade&mdash; correspóndense con outras páxinas web, coa árbore co código fonte, co bug tracker, etc. Debido a que a maioría do software de arquivamento de listas de correo xa desde hai moito tempo ten recoñecida a importancia destas propiedades, é polo que a listas de correo tenden a contar nativamente con estas funcionalidades, mentres que outros formatos poden requirir algún esforzo extra por parte do mantedor (<xref linkend="managing-volunteers"/> analiza como repartir esta carga de mantemento entre varios voluntarios).</para>

</sect3>

</sect2>

<!-- ======================== subsection ============================== -->
<sect2 id="codifying-tradition">
<title
>Tradición na codificación</title>

<para
>A medida que un proxecto vai adquirindo historia e complexidade, a cantidade de datos que cada participante incorporado debe absorber vese incrementada. Aqueles que levan no proxecto dende fai moito tempo foron capaces de aprender, e inventar, as convencións do proxecto. A miúdo non son conscientes do enorme corpo de tradición que foron acumulando, e sorpréndense de cantos pequenos erros van cometendo os novatos. Por suposto, a cuestión non está en que as novas incorporación sexan de menor calidade que as anteriores; a cuestión está en que se teñen que enfrontar a unha maior cultura herdada, que aquela á que se enfrontaron os novatos de tempo atrás.</para>

<para
>As tradicións que un proxecto vai acumulando atinxen sobre todo a como comunicar e preservar a información, estándares de codificación, e outras cuestións de índole técnica. Xa repasamos ambos tipos de estándares en <xref linkend="developer-documentation"/><phrase output="printed"
> en <xref linkend="getting-started"/></phrase
> e <xref linkend="written-rules"/><phrase output="printed"
> en <xref linkend="social-infrastructure"/></phrase
> respectivamente, mostrando exemplos. En lugar diso, esta sección trata sobre como manter estas guías e pautas actualizadas a medida que o proxecto evolúe, especialmente as pautas e guías sobre como xestionar as comunicacións, dado que estas son as que máis mudanzas sofren a medida que o proxecto medra en tamaño e complexidade.</para>

<para
>Primeiro, busca padróns sobre como a xente se confunde. Se ves as mesmas situacións producíndose unha e outra vez, especialmente cos novos participantes, entón preséntase unha oportunidade en forma de guía ou pauta que necesita ser documentada mais aínda non o está. Segundo, non te canses de dicir as mesmas cousas unha e outra vez, e que non <emphasis
>sone</emphasis
> como se estiveses cansado de repetilo. Ti e outros veteranos do proxecto teredes que repetírvolo entre vos a miúdo; este é un efecto colateral inevitable derivado da chegada de novos participantes.</para>

<para
>Cada páxina web, cada mensaxe na lista de correo e cada canal IRC debería ser considerado como un espazo publicitario&mdash;non para anuncios comerciais, mais si para anuncios sobre os recursos do teu propio proxecto. O que poñas neses espazos debe depender da procedencia e cultura dos que os vaian ler. Un canal IRC para preguntas dos usuarios, por exemplo, parece o sitio ideal para obter xente que nunca antes tivera contacto co proxecto&mdash;habitualmente alguén que simplemente instalou o software e ten unha pregunta que precisa ser respondida o máis axiña posible (despois de todo, se puidera esperar, tería enviado a pregunta á lista de correo, o que probablemente lle custase menos tempo total, aínda que tardaría máis en recibir resposta). A xente normalmente non fai un investimento permanente no canal IRC; aparecen, lanzan a súa pregunta e vanse.</para>

<para
>Deste xeito, o tópico e mailo tema do canal deberían dirixirse a xente que está a buscar por respostas técnicas sobre o software <emphasis
>o máis axiña posible</emphasis
>, en lugar de dirixirse a xente que podería querer participar no proxecto a longo prazo e para os cales unhas guías de interacción serían máis apropiadas. Aquí é onde un canal IRC realmente ocupado xestiona a cuestión (compáraa co exemplo anterior en <xref linkend="irc"/><phrase output="printed"
> en <xref linkend="technical-infrastructure"/></phrase
>):</para>

<screen
>Estás falando en #linuxhelp

O tema para #linuxhelp é: Por favor, LE
http://www.catb.org/~esr/faqs/smart-questions.html &amp;&amp;
http://www.tldp.org/docs.html#howto ANTES DE faceres preguntas | As normas
do canal atópanse en http://www.nerdfest.org/lh_rules.html | Por favor, consulta
http://kerneltrap.org/node/view/799 antes de preguntares sobre actualizacións á versión
2.6.x do kernel | memory read possible: http://tinyurl.com/4s6mc -&gt;
update to 2.6.8.1 or 2.4.27 | hash algo disaster: http://tinyurl.com/6w8rf
| reiser4 out
</screen>

<para
>Coas listas de correo, o "espazo publicitario" é un pequeno pé engadido a cada mensaxe. A maioría dos proxectos poñen as instrucións de subscrición e de-subscrición nese lugar, e ás veces unha indicación á páxina web do proxecto ou á páxina de FAQs. Poderías pensar que alguén subscrito á lista de correo sabería onde atopar estar cousas, e probablemente sexa así&mdash;mais moita máis xente que os propios subscritores conforma a audiencia destas mensaxes na lista de correo. Unha mensaxe arquivada pode enlazarse dende múltiples lugares; de feito, algunhas mensaxes poden volverse tan famosas que poden chegar a ter máis lectores fóra da lista que dentro da mesma.</para>

<para
>O formatado pode supor unha gran diferenza. Por exemplo, no proxecto Subversion, tivemos un éxito limitado empregando a técnica de filtraxe de erros descrita en <xref linkend="bug-filtering"/><phrase output="printed"
> in <xref linkend="technical-infrastructure"/></phrase
>. Moitos dos falsos informes de erros seguían sendo preenchidos por xente sen experiencia, e cada vez que isto pasaba, o usuario tiña que ser educado exactamente do mesmo xeito que as 500 persoas anteriores. Un día, despois de que a un dos nosos desenvolvedores finalmente se lle esgotara a paciencia e empezase a criticar e a meterse cun pobre usuario por non ler detidamente a guía de uso do bug tracker, outro desenvolvedor decidiu que este padrón tíñase reproducido demasiadas veces. Suxeriu que reformatáramos a páxina de portada do bug tracker de xeito que o máis importante da mesma, a norma de discutir previamente os bugs na lista de correo ou nos canais IRC antes de envialos polo bug tracker, estivese formatado en letras moi grandes, en vermello resaltado sobre un fondo amarelo e resaltado claramente sobre todos os demais elementos da páxina. Así se fixo (podes ver os resultados en <ulink url="http://subversion.tigris.org/project_issues.html"
></ulink
>), e o resultado foi un descenso notable no número de falsos informes notificados. Por suposto, aínda os temos hoxe en día, e sempre os teremos, mais o número descendeu notablemente, embora o número de usuarios se vise incrementado. O resultado non se restrinxe unicamente a que a base de datos de bugs teña menos lixo, senón que aqueles desenvolvedores que responden aos tickets de informes de erros fano con bo humor, e aumentou a probabilidade de manteren o bo humor, dado que teñen que lidar con poucos erros falsos. Isto mellora tanto a imaxe do proxecto como a saúde mental dos seus voluntarios.</para>

<para
>A lección que nós tiramos foi que simplemente con escribir as normas non fas abondo. Tamén tivemos que poñelas onde fosen vistas por aqueles que máis as necesitan, e formatalas de tal xeito que o seus status de material introdutorio fose inmediatamente claro para a xente que non estaba familiarizada co proxecto.</para>

<para
>As páxinas web estáticas non son o único lugar para publicitar os costumes do proxecto. Unha certa cantidade de políticas interactivas (no sentido de recordatorio amable, non no sentido de ataduras e sensación de encarceramento) tamén son precisas. Toda revisión entre iguais, mesmo as revisións de commits descritas en <xref linkend="code-review"/><phrase output="printed"
> en <xref linkend="getting-started"/></phrase
>, deberían incluír revisións sobre a conformidade ou non conformidade da xente coas normas do proxecto, especialmente en relación coas convencións relativas ás comunicacións.</para>

<para
>Outro exemplo extraido do proxecto Subversion: establecemos nunha convención que "r12908" significaría "revisión 12908 no repositorio de control de versións". O prefixo en minúsculas "r" é sinxelo de escribir, e dado que ten a metade de altura que os díxitos, convérteo nun bloque de texto facilmente recoñecible ao combinalo con díxitos. Por suposto, establecelo deste xeito na convención non quixo dicir que todo o mundo comezara a empregalo con coherencia do xeito correcto. Así, cando un correo de commit ven cun log coma este:</para>

<screen
>------------------------------------------------------------------------
r12908 | dhume | 2010-05-24 08:05:06 -0600 (Mon, 24 May 2010) | 4 lines

Patch from James Ford (Sawyer) &lt;sawyer@ghandalf-loves-lost.org&gt;

* trunk/contrib/client-side/psvn/psvn.el:
  Fixed some typos from revision 12828.
------------------------------------------------------------------------
</screen>

<para
>...parte da revisión deste commit consiste en dicir "A partir de agora, por favor emprega 'r12828', en lugar de 'revisión 12828' cando te referires a mudanzas feitas no pasado." Isto non é pedantería; é importante tanto para o parseo automático como para os lectores humanos.</para>

<para
>Seguindo o principio xeral de que debe haber métodos canónicos de referencia para entidades comúns, e que estes métodos de referencia deben empregarse con coherencia en todos os sitios, o proxecto en efecto exporta certos estándares. Estes estándares permiten que a xente escriba ferramentas que presenten as comunicacións do proxecto dun xeito máis útil&mdash;por exemplo, unha revisión formatada como "r12828" podería transformarse nunha ligazón viva dentro do sistema de navegación do repositorio. Isto sería moi difícil de facer se a revisión fose escrita como "revisión 12828", tanto porque esta segunda forma podería dividirse a través dun salto de liña, como porque é menos distintiva (a palabra "revisión", a miúdo aparecerá soa, e os grupos de números tamén aparecen sós, mentres que a combinación "r12828" é unívoca, tendo como significado un número de revisión). Consideracións similares valen tamén para temas con números, FAQs (truco: emprega unha URL cunha áncora con nome, como se describe en <xref linkend="html-named-anchors-and-ids"/>), etc.</para>

<para
>Mesmo para entidades nas que non existe un modelo obvio de forma canónica, a xente debería estar igualmente disposta a fornecer pezas clave de información dun xeito coherente. Por exemplo, cando te referires a unha mensaxe nunha lista de correo, non fornezas unicamente a identidade da persoa que enviou o correo e mailo asunto do mesmo; achega tamén a URL do arquivo <emphasis
>e</emphasis
> o cabezallo co message-ID. Isto último permite que a xente que teña a súa propia copia das listas de correo (hai xente que ás veces mantén copias offline, por exemplo para empregalas nun portátil mentres viaxa) poida identificar univocamente a mensaxe correcta embora non teñan acceso aos arquivos. O remitente e mailo asunto non serían suficientes, dado que a mesma persoa pode enviar varias mensaxes no mesmo fío, mesmo no mesmo día.</para>

<para
>Canto máis medra un proxecto, máis importante se torna este tipo de coherencia. Coherencia quere dicir que todas as persoas observan os mesmos padróns e que estes son seguidos, o cal obriga a cada persoa individual a seguilos. Isto, ademais, reduce o número de cuestións que precisan ser preguntadas. A carga de ter un millón de lectores non é a mesma que a de ter un; os problemas de escalabilidade comezan a xurdir unicamente cando un determinado porcentaxe deses lectores fai preguntas. A medida que un proxecto medra, por tanto, debe reducir estas porcentaxes mediante o incremento da densidade e da accesibilidade da información, de tal xeito que a xente sexa máis propensa a atopar o que precisa sen ter a necesidade de preguntalo.</para>

<!--

<para
><remark
>See
<ulink url="http://subversion.tigris.org/mailing-list-guidelines.html"
></ulink
> for
an example of mailing list guidelines, talk about which problems such
guidelines can solve and which they can't.  Also, log message
guidelines (if that gets its own section, remember to adjust the xrefs
in Version Control Vocabulary and elsewhere in Chapter 3).  Mention
the parseability concern; point out that it can overdone, too.
Formatting of bug tracker numbers in log messages is an excellent
example of where parseability is an appropriate concern.  Log message
templates.  Make sure that commit reviews apply to log messages and
other "meta" aspects of the commit as well as to the code
itself.</remark
></para>

-->

</sect2>

<!-- todo: A lot of projects have designated summarizers, like the
Zack Brown (?) for the Linux kernel, and I think I've seen similar
stuff at DebianPlanet as well.  That's another thing to talk about in
this discussion of "Strategy (2)", and maybe something to add to the
Project Roles examples in <xref linkend="share-management"/>.
-->

</sect1>

<sect1 id="bug-tracker-usage">
<title
>Prohibidas as conversas no bug tracker</title>

<para
>En calquera proxecto que faga un uso activo do bug tracker (lembremos que é o sistema de notificación de informes de erros), sempre existe o risco de que o mesmo acabe tornándose nun foro de discusión en si mesmo, embora as listas de correo sexan un lugar mellor para facelo. Usualmente comeza dun xeito suficientemente inocente: alguén anota un informe de erro con, di el, unha proposta de solución, ou un remendo parcial. Outra persoa o ve, observa que hai problemas coa solución, e inclúe outra anotación mostrndo os problemas. A primeira persoa responde unha vez máis,... e así sucesivamente.</para>

<para
>O problema con esta operativa reside, primeiramente, en que o bug tracker é un lugar demasiado pesado e torpe para manter unha discusión, e en segundo lugar en que outra xente probablemente non estea prestando atención&mdash;despois de todo, esperan que as discusións de desenvolvemento se leven a cabo na lista de correo de desenvolvemento, polo que ese é o lugar ao que están mirando. Probablemente non estean subscritos á lista de notificacións, e mesmo se o estiveren, pode que non a sigan con demasiada atención.</para>

<para
>Mais, exactamente en que punto do proceso se fixo algo incorrecto? Foi no momento no que a persoa orixinal engadiu a súa solución ao erro&mdash; tería que telo enviado á lista en lugar de engadilo? Ou foi cando a segunda persoa respondeu á incidencia, en lugar de facelo na lista de correo?</para>

<para
>Non hai unha resposta correcta, mais si que hai un principio xeral: se simplemente estiveres engadindo datos a unha incidencia, entón faino no bug tracker, mais se estiveres comezando unha <emphasis
>conversa</emphasis
>, entón faino na lista de correo. Non sempre poderás identificar cada caso, simplemente emprega o teu xuízo o mellor que poidas. Por exemplo, cando forneceres un remendo cunha solución potencialmente controvertida, debes anticipar que posiblemente haxa xente que teña preguntas sobre a mesma. Así que aínda que normalmente fornezas o remendo conxuntamente coa notificación, (asumindo que non queres, ou non podes, facer a mudanza directamente), neste caso deberías escoller enviar a mensaxe á lista de correo en lugar de empregar o bug tracker. De tódolos xeitos, pode haber casos nos que for difícil  En todo caso, eventualmente acontecerá un momento onde unha parte ou a outra indiquen que simplemente están engadindo datos á conversa actual&mdash;no exemplo que iniciaba esta sección, este sería o segundo actor, o cal responde, quen ao decatarse de que había problemas co remendo, puido predicir que ía iniciarse unha conversa sobre el, e de aí que debera facerse no canal apropiado.</para>

<para
>Empregando unha analoxía matemática, se a información parece como que vai ser rapidamente converxente, entón pona directamente no bug tracker; se parece como que vai haber diverxencias, entón unha lista de correo ou un canal IRC serían un lugar mellor.</para>

<para
>Isto non quere dicir que nunca deba haber ningún troco no bug tracker. Preguntar por máis detalles sobre a reprodución do erro por parte do informador orixinal adoita ser un proceso moi produtivo, por exemplo. A resposta do informador é pouco probable que lance novas incidencias; simplemente aumentará a información previamente fornecida. Non hai necesidade de crear distracción na lista de correo con este proceso. En resumo, todo isto significa que debes ter coidado cos comentarios no bug tracker. Do mesmo xeito, se estiveres completamente seguro de que o erro foi mal notificado (por exemplo, non é un erro), entón abonda con que o notifiques na propia incidencia. Mesmo notificar un problema menor cunha solución proposta é axeitado, asumindo que o problema non vai impedir toda a solución.</para>

<para
>Porén, se estiveres lanzando incidencias filosóficas sobre o alcance do erro ou sobre o comportamento perfecto para o software, podes estar seguro de que outros desenvolvedores van querer participar nunha discusión. Probablemente a discusión diverxa durante un tempo, ata converxer, así que faino na lista de correo.</para>

<para
>Enlaza sempre ao fío da lista de correo adicado á incidencia, cando escollas mandar a notificación á lista de correo. Segue sendo moi importante, para alguén que siga a incidencia, poder ser capaz de trazar a discusión, mesmo se a incidencia en si mesma non é o foro da discusión. A persoa que comeza o fío pode atopar este traballo como algo incómodo, mais o software libre baséase fundamentalmente nunha cultura de escritor responsable: é moito máis importante facer sinxelas as cousas para ducias ou centos de persoas que poidan ler o informe de erros que para tres ou cinco persoas que escriban sobre o mesmo.</para>

<para
>É correcto coller as conclusións importantes e mailos resumos desde a lista de discusión e pegalos na incidencia no bug tracker, se isto vai ser algo conveniente para os lectores. Un idioma común pode ser comezar nunha rolda de discusión, poñer unha ligazón ao fío concreto na incidencia no bug tracker, e cando a discusión rematar, pegar o resumo final na propia incidencia (conxuntamente cunha ligazón á mensaxe que conteña ese resumo), de tal xeito que calquera que navegue á incidencia poida dun xeito sinxelo ver que conclusión se alcanzou sen ter que premer en ningún outro lugar. Fíxate en que o problema habitual de duplicación proveniente da casuística das "dúas copias mestras" aquí non existe, dado que ambos arquivos e notificacións adoitan ser estáticos, co cal estamos a falar de datos inalterables.</para>

</sect1>

<!-- ======================== SECTION ============================== -->
<sect1 id="publicity">
<title
>Publicidade</title>

<para
>No software libre existe unha barreira case inexistente entre as discusións puramente internas e mailas públicas. Isto en parte débese a que a audiencia obxectivo sempre está pouco definida: dado que a maioría ou todos os correos son publicamente accesibles, o proxecto non ten un control efectivo sobre a impresión que del ten o resto do mundo. Alguén, digamos un editor de <ulink url="http://slashdot.org/"
>mancomun.org</ulink
>, pode atraer a atención de milleiros de lectores a un correo que ninguén esperaba que fose visto fóra do proxecto. Esta é unha realidade coa que viven todos os proxectos de software libre, mais na práctica o risco adoita ser pequeno. En xeral, os anuncios que o proxecto máis quere publicitar adoitan ser os que son máis publicitados, asumindo que empregues os mecanismos axeitados para indicarllo ao resto do mundo.</para>

<para
>Para grandes anuncios, adóitanse empregar catro ou cinco canais principais de distribución, nos cales os devanditos anuncios deberían facerse o máis simultaneamente posible:</para>

<orderedlist>

  <listitem
><para
>A páxina de portada do teu proxecto probablemente sexa vista por máis xente que calquera outra parte do proxecto. Se tiveres un anuncio realmente grande que facer, fai propaganda aí. A propaganda debería estar composta por un breve resumo que enlace ao comunicado de prensa (ver a continuación) para máis información.</para>
  </listitem>

  <listitem
><para
>Ao mesmo tempo, deberías ter tamén unha área de "Novas" ou "Notas de prensa" no sitio web, onde o anuncio poida ser escrito en detalle. Parte do propósito dunha nota de prensa é fornecer un "obxecto de anuncio" simple e canónico que outros sitios web poidan enlazar, así que asegúrate de estruturalo correctamente: tanto unha páxina web por anuncio, como unha entrada concreta nun blog, como algún outro tipo de entidade que poida ser enlazada, mantenas distinguibles do resto de notas de prensa na mesma área.</para>
  </listitem>

  <listitem
><para
>Se o teu proxecto conta cun feed RSS (bótalle unha ollada a <xref linkend="rss"/>), asegúrate que o anuncio tamén se publique nel. Isto debería facerse automaticamente cando creas a nota de prensa, dependendo de como teñas configuradas as cousas no teu sitio web.</para>
  </listitem>

  <listitem
><para
>Se o anuncio trata sobre o lanzamento dunha nova versión do software, entón actualiza a entrada do teu proxecto en <ulink url="http://freshmeat.net/"
></ulink
> (ver <xref linkend="announcing"/> para creares a entrada en primeiro lugar). Cada vez que actualizas unha entrada en Freshmeat, esta introdúcese na lista de mudanzas do día de Freshmeat. A lista de mudanzas actualízase non só en Freshmeat, senón tamén en varios portais (incluíndo <ulink url="http://slashdot.org"
></ulink
>) que son vistos con avidez por hordas de xente. Freshmeat tamén ofrece a mesma información por sindicación RSS, polo que a xente que non estiver subscrita ao RSS do teu proxecto podería igualmente ver o anuncio vía Freshmeat.</para>
  </listitem>

  <listitem
><para
>Envía un correo á lista de correo de anuncios do teu proxecto. O nome desta lista debería ser "announce", é dicir, <literal
>announce@dominio-do-teu-proxecto.org</literal
> xa que é unha convención estándar a día de hoxe; na definición da lista deberías deixar claro que é unha lista de moi baixo tráfego, reservada para anuncios importantes do proxecto. A maioría destes anuncios van ser sobre novas versións do software, mais ocasionalmente outros eventos, como os de colecta de fondos, o descubrimento dunha vulnerabilidade de seguridade (ver <xref linkend="security"/>)<phrase output="printed"
> máis adiante neste capítulo</phrase
>), ou unha mudanza importante na dirección do proxecto tamén poden ser enviados a esta lista. Dado que é de baixo tráfego e empregada unicamente para cousas importantes, a lista <literal
>announce</literal
> adoita ser a de maior grao de subscrición de todo o proxecto (o cal, por suposto, significa que non debes abusar dela; así que pénsao coidadosamente antes de publicares na mesma). Para evitar que a xente aleatoriamente poida facer anuncios na mesma, ou peor, que chegue spam a través dela, a lista <literal
>announce</literal
> sempre debe estar moderada.</para>
  </listitem>

</orderedlist>

<para
>Tenta facer os anuncios en todos estes lugares ao mesmo tempo, o máis proximamente posible. A xente pode obter unha sensación de confusión se ven un anuncio na lista de correo mais non o ven reflectido na páxina web do proxecto ou na súa área de notas de prensa. Se acumulares todas as fontes (emails, edición da páxina web, etc) e lanzares todo ao mesmo tempo, entón seguramente acadarás un nivel de incoherencia moi baixo.</para>

<para
>Para un evento menos importante, podes prescindir dalgún dos medios explicados. O evento vai ficar igualmente notificado ao mundo exterior, mais vaino facer en proporción á súa importancia. Por exemplo, embora unha nova versión sexa un evento de importancia, simplemente marcar a data da seguinte versión, embora sexa aproximada, non é tan importante como o lanzamento en si mesmo. Marcar a data é merecedor dun correo electrónico ás listas de correo diarias (non á de anuncios) así como unha actualización da planificación temporal ou do status na páxina web, mais non é merecedora de máis.</para>

<para
>A pesar disto, podes chegar a ver a data en cuestión aparecendo en discusións por calquera lugar en Internet no que houber xente interesada no proxecto. A xente que simplemente é receptora nas listas de correo, só escoitando e nunca dicindo nada, non é necesariamente silenciosa en todos lados. O boca a boca aporta unha distribución moi grande; debes telo en conta e mesmo construír os anuncios menores dun xeito que fomente a transmisión informal. Especificamente, os correos que esperas que sexan citados deberían contar cun anaco que diga "cita esta parte", como se estiveses escribindo unha nota de prensa formal. Por exemplo:</para>

  <blockquote>
     <para
><emphasis
>Actualización de progreso: estamos planificando a versión 2.0 de Ghandalf para mediados de Agosto do 2010. Sempre podes revisar http://www.ghandalf.org/status.html para ver actualización. A nova funcionalidade de maior calado vai ser as procuras mediante expresións regulares.</emphasis
></para>

     <para
><emphasis
>Outras novas funcionalidades inclúen:&nbsp;... Para alén diso tamén vai haber varias correccións de erros, incluíndo :&nbsp;... </emphasis
></para>
  </blockquote>

<para
>O primeiro parágrafo é curto, aporta as dúas pezas máis importantes de información (a data de lanzamento e a nova funcionalidade de maior calado), e máis unha URL a visitar para ver máis novas. Se este parágrafo é a única cousa que vai cruzar pola pantalla de alguén, estariámolo facendo bastante ben. O resto do correo-e podería perderse sen afectarlle á esencia do correo. Por suposto, algunhas veces a xente enlazará o correo enteiro, mais en xeral o normal é que citen unicamente unha parte pequena. Dado que isto é unha posibilidade, de todos xeitos seguramente queiras facerllo fácil, e no mesmo pacote tamén contar con influencia sobre o que se citar.</para>

<!-- ======================== subsection ============================== -->
<sect2 id="security">
<title
>Anunciando vulnerabilidades de seguridade</title>

<para
>Manexar as vulnerabilidades de seguridade é diferente de manexar calquera outro tipo de informe de erros. No software libre, facer as cousas aberta e transparentemente adoita ser case un credo relixioso. Cada paso do proceso estándar de manexo de erros é visible para calquera que o quixer ver: a chegada da notificación inicial, a conseguinte discusión, e maila eventual solución.</para>

<para
>Os erros de seguridade son diferentes. Poden comprometer os datos dos usuarios, ou mesmo os seus ordenadores dun xeito completo. Discutir ese problema dun xeito aberto podería amosar a súa existencia ao mundo enteiro&mdash; incluíndo todas as partes que poderían facer un uso malicioso do erro. Deste xeito, mesmo facer commit dunha solución pode anunciar a existencia do erro (hai potencias atacantes que vixían dun xeito sistemático os rexistros públicos de commits dos proxectos, buscando mudanzas que indiquen problemas de seguridade no código previo á mudanza). A maioría dos proxectos software libre teñen establecido aproximadamente o mesmo conxunto de pasos para manexar o conflito entre o aperturismo e o secretismo, baseado nestas directrices básicas:</para>

<orderedlist>
  <listitem
><para
>Non falar publicamente sobre o erro ata que haxa unha solución dispoñible; nese momento fornecer a solución exactamente no mesmo momento no que anuncias o erro.</para
> 
  </listitem>
  <listitem
><para
>Acadar a solución o máis axiña que poidas&mdash;especialmente se alguén externo ao proxecto foi quen informou do erro, porque entón xa sabes que existe polo menos unha persoa allea ao proxecto que podería explotar a vulnerabilidade.</para>
  </listitem>
</orderedlist>

<para
>Na práctica, estes principios lévannos a unha serie estandarizada de pasos, os cales se describen nas seguintes seccións.</para>

<sect3 id="security-receiving">
<title
>Recibir o informe</title>

<para
>Obviamente, un proxecto precisa a habilidade de recibir informes de erro de seguridade enviados por calquera. Mais o enderezo habitual de recepción de erros non é o mellor lugar, xa que pode estar vixiado por calquera. Debido a isto, ten unha lista de correo separada para recibir informes sobre erros de seguridade. Esta lista de correo non debe ser accesible para o público xeral, e a subscrición á mesma debe estar estritamente controlada&mdash;só os desenvolvedores de confianza e con longa participación no proxecto poden estar nesta lista. Se precisas unha definición formal de "confianza", podes empregar "todo aquel que teña privilexios de commit desde hai dous anos ou máis" ou algo semellante, para evitares favoritismos. Este é o grupo que vai manexar os erros de seguridade.</para>

<para
>Idealmente, a lista de seguridade non debería estar protexida contra spam nin moderada, dado que non queres que un informe importante sexa descartado ou atrasado simplemente porque non houbo moderadores en liña esa semana. Se empregas software de protección automática contra spam, trata de configuralo cos parámetros de maior tolerancia; é mellor deixar entrar un poucos correos de spam que perder un informe de erros. Para que a lista sexa efectiva por suposto que debes publicitar o seu enderezo; mais dado que non vai estar moderada, e máis importante, pobremente protexida contra spam, tenta non dar nunca o seu enderezo sen algún tipo de transformación que oculte o seu enderezo real, tal como se describe en <xref linkend="address-hiding"/><phrase output="printed"
> in <xref linkend="technical-infrastructure"/></phrase
>. Afortunadamente, a ocultación de enderezo non fai que o enderezo sexa ilexible; bótalle unha ollada a <ulink url="http://subversion.tigris.org/security.html"
></ulink
>, e mira o HTML fonte da páxina, por exemplo.</para>

</sect3>

<sect3 id="security-finding-a-fix">
<title
>Desenvolve silenciosamente a solución ao erro</title>

<para
>Entón, que fai a lista de seguridade cando recibe un informe? A primeira tarefa é avaliar a severidade do problema e maila súa urxencia:</para>

<orderedlist>
  <listitem
><para
>Como de seria é a vulnerabilidade? Permite que un atacante malicioso tome o control do ordenador de alguén que use o teu software? Ou simplemente pode haber algunha fuga de información sobre os tamaños dalgúns dos seus ficheiros?</para>
  </listitem>

  <listitem
><para
>Como de fácil é explotar a vulnerabilidade? Pode realizarse o ataque con scripts, ou require coñecemento circunstancial, suposicións e sorte?</para>
  </listitem>

  <listitem
><para
><emphasis
>Quen</emphasis
> te informou do problema? A resposta desta pregunta por suposto que non muda a natureza da vulnerabilidade, mais dáche unha idea sobre que outra xente pode coñecelo. Se o informe provén dalgún desenvolvedor do proxecto, podes estar un pouco máis tranquilo (pero só un pouco) dado que podes confiar en que non llo teña contado a ninguén máis. Por outra banda, se o informe veu nun correo electrónico desde <literal
>anonymous14@globalhackerOrco.net</literal
> entón o mellor é que actúes o máis axiña que poidas. A persoa en cuestión fíxoche un favor informándote do problema, mais non tes nin idea de a canta outra xente llo puido contar, ou sobre cando tempo vai tardar antes de explotar a vulnerabilidade nas instalacións en produción.</para>
  </listitem>
</orderedlist>

<para
>Ten en conta que a diferenza sobre a que estamos falando adoita ser un estreito rango entre <emphasis
>urxente</emphasis
> e <emphasis
>extremadamente&nbsp;urxente</emphasis
>. Mesmo cando o informe provén dunha orixe coñecida e amistosa, pode haber outras persoas na Rede que descubriran o erro xa fai tempo e non o notificaran. O único caso no que as cousas non son urxentes é cando o erro inerentemente non comprometa a seguridade dun xeito severo.</para>

<para
>O exemplo "<literal
>anonymous14@globalhackerOrco.net</literal
>" non é de broma. Na realidade podes obter notificacións de erros enviadas por xente coa identidade encuberta, os cales tanto coas súas palabras como comportamento nunca chegan a deixar claro de todo se están do teu lado ou non. Realmente non importa: se te informaron da vulnerabilidade de seguridade, seguramente pensan que están facendo algo bo por ti, e debes responder en consecuencia. Agradécelles a notificación, dálles unha data estimada na que pensas publicar a solución do problema, e mantenos ao tanto. Algunhas veces son eles quen che dan a ti unha data; isto é, unha ameaza implícita de publicitar o erro en determinada data, esteas ti preparado ou non. Embora poida parecer un xogo de poder, realmente adoita ser unha acción preventiva derivada de anteriores decepcións con produtores irresponsables de software que non toman suficientemente en serio os erros de seguridade. De calquera xeito, non podes permitirte o luxo de non prestarlle atención a esta persoa. Despois de todo, se o erro é severo, el ten un coñecemento que lle podería causar grandes problemas aos teus usuarios. Trata ben estes informadores, e reza para que eles tamén te traten ben a ti.</para>

<para
>Outro informador frecuente de erros de seguridade son os profesionais da seguridade, persoas que examinan código profesionalmente, e están ao tanto das últimas novas sobre vulnerabilidades no software. Esta xente adoita ter experiencia nos dous lados do valado&mdash;teñen recibido e enviado informes, probablemente en maior número que a maioría dos desenvolvedores do teu proxecto. Normalmente dánche unha data límite para reparares a vulnerabilidade, antes de facela pública. A data límite adoita ser negociable, mais depende do informador.; as datas límite están consideradas polos profesionais da seguridade como o único xeito fiable para estimular as organizacións a solucionaren os problemas de seguridade con puntualidade. Debido a isto, non consideres que a data límite é unha imposición; é unha tradición honorable, motivada por razóns de peso.</para>

<para
>Unha vez que coñezas a severidade e maila urxencia, podes comezar a traballar na solución. A veces xorde un conflito entre fornecer unha solución elegante e fornecela rápido; isto é polo que debes ter ben clara a urxencia antes de comezares. Mantén a discusión restrinxida unicamente aos membros da lista de seguridade e, por suposto, ao informador (se quere participar), incorporando calquera desenvolvedor que for preciso incluír por motivos técnicos.</para>

<para
>Non fagas commit da solución no repositorio. Mantena en formato remendo ata a data da súa publicación. Se fixeres commit da mesma, mesmo engadindo unha mensaxe aparentemente inocente no rexistro de log, alguén podería decatarse e entender a mudanza. Nunca sabes quen está mirando o teu repositorio e os motivos polos que pode estar interesado. Deshabilitar os correos electrónicos de commit tampouco axuda; primeiro de todo o intervalo diferencial na secuencia da lista de commits pode ser sospeitoso por si mesmo, e de todos xeitos, os datos seguirían estando no repositorio. O mellor é facer todo o desenvolvemento nun remendo e manter este remendo nun lugar privado, como un un repositorio separado e privado, coñecido unicamente pola xente que xa está informada sobre o erro. (Se empregares un sistema de control descentralizado como Arch ou SVK, poderás facer o traballo baixo un completo control de versións, e simplemente manter ese repositorio inaccesible para os que deba estalo).</para>

</sect3>

<sect3 id="security-cve">
<title
>Números CAN/CVE</title>

<para
>Pode que teñas visto un <firstterm
>número CAN</firstterm
> ou un <firstterm
>número CVE</firstterm
> asociados con problemas de seguridade. Estes números adoitan presentarse do xeito "CAN-2004-0397" ou "CVE-2002-0092", por exemplo.</para>

<para
>Ambos tipos de números representan o mesmo tipo de entidade: unha entrada na lista de "Exposicións e Vulnerabilidades Comúns", lista mantida en <ulink url="http://cve.mitre.org/"
></ulink
>. O propósito da lista é fornecer nomes estándar para todos os problemas de seguridade, de tal xeito que cada un teña un número único e canónico que se poida empregar cando se discutir sobre o mesmo, así como un lugar centralizado a onde ir para atopar máis información. A única diferencia entre un número "CAN" e un número "CVE" está en que o primeiro representa unha entrada candidata, aínda non aprobada para a súa inclusión na lista oficial pola Xunta Editorial CVE, mentres que a segunda representa unha entrada efectivamente aprobada. Aínda así, ambos tipos de entradas son visibles para o público, e o número dunha entrada non muda cando a mesma é aprobada&mdash;o prefixo "CAN" simplemente substitúese por "CVE".</para>

<para
>Unha entrada CAN/VCE non contén en si mesma unha descrición completa do erro e o xeito de protexerse del. En lugar diso, contén un breve resumo, e máis unha lista de ligazóns a recursos externos (como arquivos de listas de correo) onde a xente pode obter información máis detallada. O propósito verdadeiro de <ulink url="http://cve.mitre.org/"
></ulink
> pasa por fornecer un espazo ben organizado no que cada vulnerabilidade poida obter un nome e unha ruta clara para máis información. Bótalle unha ollada a <ulink url="http://cve.mitre.org/cgi-bin/cvename.cgi?name=2002-0092"
></ulink
> para veres un exemplo dunha entrada. Ten en conta que as ligazóns poden ser moi concisas, con fontes expostas como abreviaturas cifradas. A chave para interpretar estas abreviaturas atópase en <ulink url="http://cve.mitre.org/data/refs/refkey.html"
></ulink
>.</para>

<para
>Se a túa vulnerabilidade concordar cos criterios CVE, podes obter un número CAN para a mesma. O proceso para levar isto a cabo é deliberadamente tutelado: basicamente, tes que coñecer alguén, ou alguén que coñecer alguén. Isto non é tan tolo como poida parecer. Co obxectivo de evitar a saturación da Xunta Editorial CVE debido a solicitudes espúreas ou pobremente escritas, unicamente aceptan solicitudes provenientes de fontes que xa coñecen e nas que confían. Para conseguires que a túa vulnerabilidade se incorpore á lista, primeiramente debes atopar un camiño desde o teu proxecto ata a Xunta Editorial CVE. Pregúntalle aos teus desenvolvedores; probablemente algún dos mesmos coñeza a alguén que tivera percorrido o proceso CAN con anterioridade, ou que coñeza alguén que o fixera. A vantaxe de facelo deste xeito tamén se atopa en que ao longo da cadea pode que alguén teña o suficiente coñecemento para dicirche que a) non vai concibirse como unha vulnerabilidade ou risco baixo os criterios MITRE, polo que non ten sentido enviarlla, ou b)a vulnerabilidade <emphasis
>xa</emphasis
> ten un número CAN ou CVE. A última posibilidade pode xurdir se o erro de seguridade xa foi previamente publicada noutra lista de seguridade, como pode ser por exemplo <ulink url="http://www.cert.org/"
></ulink
>, ou na lista de correo BugTraq dispoñible en <ulink url="http://www.securityfocus.com/"
></ulink
> (Se isto acontecer sen que o teu proxecto o saiba, deberías preocuparte sobre que outras cousas poden saber outros e que ti non saibas).</para>

<para
>Se finalmente acadas un número CAN/CVE, o normal é que desexes conseguilo nas primeiras fases de investigación do teu erro, de xeito que todo o resto da comunicación poida referirse a ese número. As entradas CAN están embargadas ata a data de publicación; a entrada unicamente existe como unha reserva vacía (para que non perdas o nome), mais sen capacidade de revelar ningunha información sobre a vulnerabilidade ata que se chegar á data na que se anuncia a solución do erro.</para>

<para
>Máis información sobre o proceso CAN/CVE pode atoparse en <ulink url="http://cve.mitre.org/cve/identifiers/candidates_explained.html"
></ulink
>, e unha exposición particularmente clara de como se empregan os números CNA/CVE nos proxectos de software libre está dispoñible en <ulink url="http://www.debian.org/security/cve-compatibility"
></ulink
>.</para>

</sect3>

<sect3 id="security-prenotification">
<title
>Pre-notificación</title>

<para
>Unha vez que o teu equipo de resposta ante problemas de seguridade (isto é, aqueles desenvolvedores incluídos na lista de correo de seguridade ou involucrados na resolución dun informe concreto) tiver a solución lista, debes decidir como distribuíla.</para>

<para
>Se simplemente fas commit da solución no teu repositorio, ou se pola contra llo anuncias ao mundo, estás forzando calquera que usar o teu software a actualizarse inmediatamente baixo o risco de ser hackeado. Ás veces o máis axeitado, en liña co anterior, é levar a cabo unha <firstterm
>pre-notificación</firstterm
> no caso de certos usuarios importantes. Isto é particularmente preciso en software cliente/servidor, onde pode haber servidores ben coñecidos que son obxectivos tentadores para atacantes. Os administradores destes servidores van apreciar poder contar cun día extra ou dous para faceren a actualización, de tal xeito que xa estean protexidos unha vez que o exploit da vulnerabilidade sexa publicamente coñecido.</para>

<para
>A pre-notificación quere dicir unicamente enviarlle correos electrónicos aos administradores anteriores antes da data de publicación da vulnerabilidade, facéndoos partícipes da existencia da vulnerabilidade e do xeito de solucionala. Debes facerlle estas pre-notificacións unicamente aquela xente na que confiares e for discreta coa información. Deste xeito, a cualificación para recibir pre-notificacións ten dúas compoñentes: o receptor debe administrar un servidor importante e grande onde un incidente de seguridade poida ser un tema serio, <emphasis
>e</emphasis
> o receptor debe ser recoñecido como alguén que non se vaia da lingua antes da publicación da vulnerabilidade.</para>

<para
>Envía cada correo electrónico de pre-notificación individualmente (un de cada vez) a cada receptor. <emphasis
>Non</emphasis
> llo envíes á lista enteira de destinatarios dunha tacada, dado que nese caso verían o nome do resto de destinatarios&mdash;dando a entender que esencialmente están alertando cada receptor do feito de que <emphasis
>cada</emphasis
> destinatario pode ter un burato de seguridade no seu servidor. Enviárllelo mediante o uso do campo BCC (copia oculta) tampouco é unha boa solución, dado que algúns administradores protexen as súas bandexas de entrada con filtros anti-spam que adoitan bloquear ou reducir a prioridade dos correos electrónicos enviados en copia oculta, dado que moito spam envíase en copia oculta.</para>

<para
>Aquí vai unha mostra de correo electrónico de pre-notificación:</para>

<screen
>De: Aquí vai o teu nome
Para: admin@chachi-famoso-servidor.com
Responder a: Aquí vai o teu nome (e non o enderezo da lista de seguridade)
Asunto: Notificación Confidencial de vulnerabilidade en Ghandalf.


Este correo electrónico é unha pre-notificación confidencial dunha alerta de 
seguridade no servidor Ghandalf.

Por favor *non reenvíes* ningunha parte deste correo a ninguén..  O anuncio público 
non se vai facer ata o 23 de xaneiro, e gustaríanos manter a información oculta
ata esa data.

Recibiches este correo porque (pensamos que) empregas un servidor Ghandalf,
e queremos que o parchees antes de que o burato de seguridade se faga público o
o vindeiro 23 de xaneiro.

Referencias:
===========

   CAN-2004-1771: Stack overflow de Ghandalf baixo consultas de Balrogs

Vulnerabilidade:
==============

   O servidor pode executar comandos arbitrarios se o 'locale' do 
   servidor está mal configurado e o cliente envía consultas mal formadas.

Severidade:
=========

   Moi severa, pode involucrar execución de código arbitrario no servidor.

Rodeos:
============

   Establecer a opción de "procesado-de-linguaxe-natural" a 'apagado'
   no ficheiro ghandalf.conf péchalle a porta a esta vulnerabilidade.

Remendo:
======

   O remendo que se fornece a continuación pode empregarse en Ghandalf 3.0,
   3.1, e 3.2.

   Unha nova versión pública (Ghandalf 3.2.1) vai ser lanzada xusto despois
   do 23 de xaneiro, para que estea dispoñible ao mesmo tempo que a
   vulnerabilidade se fai pública.   Podes remendar agora, ou esperar pola
   publicación.  A única diferencia entre Ghandalf 3.2 e Ghandalf 3.2.1 vai ser
   este remendo.

[...O remendo anéxase aquí...]
</screen>

<para
>Se tiveres un número CAN, achégao na pre-notificación (como se mostrou arriba) aínda que a información aínda estiver oculta e aínda que a páxina MITRE non mostrar nada. Incluír o número CAN permítelle ao destinatario coñecer con certeza que o erro que se lle pre-notificou é o mesmo do que máis tarde escoitou falar nos canais públicos, polo que non vai ter que preocuparse sobre se é preciso levar a cabo algunha acción máis ou non, dado que este é precisamente o obxectivo do números CAN/CVE.</para>

</sect3>

<sect3 id="security-announcing">
<title
>Distribúe publicamente a solución</title>

<para
>O último paso na xestión dun erro de seguridade é a distribución pública da solución. Deberías describir o problema nun anuncio sinxelo e comprensible, dando o número CAN/CVE se estiver dispoñible, e describindo como solucionar o erro tanto dun xeito temporal como dun xeito definitivo. Normalmente "solucionar (fix)" quere dicir levar a cabo unha actualización a unha nova versión do software, embora ás veces poida significar levar a cabo o remendo, particularmente no caso de que o software normalmente se execute en forma de código fonte. Se fas unha nova versión, esta debería diferir da versión previa unicamente no remendo de seguridade. Deste xeito os administradores conservadores poden levar a cabo a actualización sen se preocupar sobre que outras cousas poden resultar afectadas; a maiores tampouco terán que se preocupar no caso de futuras actualizacións, dado que a solución ao erro de seguridade vai estar incluída en todas as versión futuras como parte do seu ADN. (Os detalles dos procesos de publicación discútense en <xref linkend="security-releases"/><phrase output="printed"
> in <xref linkend="development-cycle"/></phrase
>.)</para>

<para
>Tanto se a solución publicada ao erro de seguridade leva aparellada unha nova versión do software, como se non, fai o anuncio coa mesma intensidade coa que farías a publicación dunha nova versión: envía un correo electrónico á lista <literal
>announce</literal
> do proxecto, fai unha nova nota de prensa, actualiza a entrada en Freshmeat, etc. Aínda que nunca deberías restarlle importancia, de cara ao exterior, á existencia dun erro de seguridade para manteres a reputación do proxecto, evidentemente debes empregar un ton e actitude durante o anuncio do problema de seguridade acorde coa severidade real do problema. Se o buraco de seguridade acarreta unicamente unha exposición menor de información, e non permite a existencia de exploits que permitan que o ordenador sexa controlado por terceiros, mellor evitar un montón de ruído. Mesmo podes decidir non distraer a lista <literal
>announce</literal
> con este erro menor. Despois de todo, se o proxecto constantemente di que ven o lobo, pode que os usuarios acaben pensando que o software é menos seguro do que realmente é, e mesmo que non te crean cando teñas que anunciar un problema realmente grande. Bótalle unha ollada a <ulink url="http://cve.mitre.org/about/terminology.html"
></ulink
> para unha boa introdución ao problema de asignar severidade.</para>

<para
>En xeral, se non estiveres seguro de como tratar un problema de seguridade, atopa a alguén con experiencia e cóntallo. Avaliar e xestionar vulnerabilidades é unha destreza que se vai adquirindo, e adoita ser habitual cometer erros as primeiras veces.</para>

</sect3>

</sect2>

</sect1>

</chapter>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
